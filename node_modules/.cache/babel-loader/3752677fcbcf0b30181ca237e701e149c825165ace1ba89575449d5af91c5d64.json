{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"p-5\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_alert = _resolveComponent(\"el-alert\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", {\n    class: \"text-xl font-bold mb-4\"\n  }, \"创建订单\", -1 /* HOISTED */)), _createVNode(_component_el_form, {\n    model: $setup.form,\n    \"label-width\": \"100px\",\n    class: \"mb-4\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"顾客ID\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.form.customerId,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.customerId = $event),\n        placeholder: \"请输入顾客ID\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"餐桌ID\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.form.tableId,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.tableId = $event),\n        placeholder: \"请输入餐桌ID\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"人数\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input_number, {\n        modelValue: $setup.form.peopleCount,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.peopleCount = $event),\n        min: 1\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.handleCreateOrder\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"创建订单\")])),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"]), $setup.store.lastOrder ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_alert, {\n    title: \"订单创建成功\",\n    type: \"success\",\n    \"show-icon\": \"\",\n    closable: false\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", null, \"订单信息：\" + _toDisplayString($setup.store.lastOrder), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_form","model","$setup","form","default","_withCtx","_component_el_form_item","label","_component_el_input","modelValue","customerId","_cache","$event","placeholder","_","tableId","_component_el_input_number","peopleCount","min","_component_el_button","type","onClick","handleCreateOrder","_createTextVNode","store","lastOrder","_hoisted_2","_component_el_alert","title","closable","_toDisplayString","_createCommentVNode"],"sources":["D:\\数据库课程设计（饭店系统）\\restaurant-ordering-system\\src\\views\\CreateOrderView.vue"],"sourcesContent":["<template>\r\n  <div class=\"p-5\">\r\n    <h2 class=\"text-xl font-bold mb-4\">创建订单</h2>\r\n    <el-form :model=\"form\" label-width=\"100px\" class=\"mb-4\">\r\n      <el-form-item label=\"顾客ID\">\r\n        <el-input v-model=\"form.customerId\" placeholder=\"请输入顾客ID\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"餐桌ID\">\r\n        <el-input v-model=\"form.tableId\" placeholder=\"请输入餐桌ID\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"人数\">\r\n        <el-input-number v-model=\"form.peopleCount\" :min=\"1\" />\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"handleCreateOrder\">创建订单</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n    <div v-if=\"store.lastOrder\">\r\n      <el-alert title=\"订单创建成功\" type=\"success\" show-icon :closable=\"false\">\r\n        <div>订单信息：{{ store.lastOrder }}</div>\r\n      </el-alert>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useCheckoutStore } from '@/stores/checkout'\r\n\r\nconst store = useCheckoutStore()\r\nconst form = ref({ customerId: '', tableId: '', peopleCount: 1 })\r\n\r\nconst handleCreateOrder = async () => {\r\n  if (!form.value.customerId || !form.value.tableId || !form.value.peopleCount) return\r\n  await store.createOrder(form.value.tableId, form.value.customerId, form.value.peopleCount)\r\n}\r\n</script> "],"mappings":";;EACOA,KAAK,EAAC;AAAK;;EADlBC,GAAA;AAAA;;;;;;;;uBACEC,mBAAA,CAqBM,OArBNC,UAqBM,G,0BApBJC,mBAAA,CAA4C;IAAxCJ,KAAK,EAAC;EAAwB,GAAC,MAAI,sBACvCK,YAAA,CAaUC,kBAAA;IAbAC,KAAK,EAAEC,MAAA,CAAAC,IAAI;IAAE,aAAW,EAAC,OAAO;IAACT,KAAK,EAAC;;IAHrDU,OAAA,EAAAC,QAAA,CAIM,MAEe,CAFfN,YAAA,CAEeO,uBAAA;MAFDC,KAAK,EAAC;IAAM;MAJhCH,OAAA,EAAAC,QAAA,CAKQ,MAA4D,CAA5DN,YAAA,CAA4DS,mBAAA;QALpEC,UAAA,EAK2BP,MAAA,CAAAC,IAAI,CAACO,UAAU;QAL1C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAK2BV,MAAA,CAAAC,IAAI,CAACO,UAAU,GAAAE,MAAA;QAAEC,WAAW,EAAC;;MALxDC,CAAA;QAOMf,YAAA,CAEeO,uBAAA;MAFDC,KAAK,EAAC;IAAM;MAPhCH,OAAA,EAAAC,QAAA,CAQQ,MAAyD,CAAzDN,YAAA,CAAyDS,mBAAA;QARjEC,UAAA,EAQ2BP,MAAA,CAAAC,IAAI,CAACY,OAAO;QARvC,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQ2BV,MAAA,CAAAC,IAAI,CAACY,OAAO,GAAAH,MAAA;QAAEC,WAAW,EAAC;;MARrDC,CAAA;QAUMf,YAAA,CAEeO,uBAAA;MAFDC,KAAK,EAAC;IAAI;MAV9BH,OAAA,EAAAC,QAAA,CAWQ,MAAuD,CAAvDN,YAAA,CAAuDiB,0BAAA;QAX/DP,UAAA,EAWkCP,MAAA,CAAAC,IAAI,CAACc,WAAW;QAXlD,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWkCV,MAAA,CAAAC,IAAI,CAACc,WAAW,GAAAL,MAAA;QAAGM,GAAG,EAAE;;MAX1DJ,CAAA;QAaMf,YAAA,CAEeO,uBAAA;MAfrBF,OAAA,EAAAC,QAAA,CAcQ,MAAqE,CAArEN,YAAA,CAAqEoB,oBAAA;QAA1DC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAEnB,MAAA,CAAAoB;;QAd1ClB,OAAA,EAAAC,QAAA,CAc6D,MAAIM,MAAA,QAAAA,MAAA,OAdjEY,gBAAA,CAc6D,MAAI,E;QAdjET,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;gCAiBeZ,MAAA,CAAAsB,KAAK,CAACC,SAAS,I,cAA1B7B,mBAAA,CAIM,OArBV8B,UAAA,GAkBM3B,YAAA,CAEW4B,mBAAA;IAFDC,KAAK,EAAC,QAAQ;IAACR,IAAI,EAAC,SAAS;IAAC,WAAS,EAAT,EAAS;IAAES,QAAQ,EAAE;;IAlBnEzB,OAAA,EAAAC,QAAA,CAmBQ,MAAqC,CAArCP,mBAAA,CAAqC,aAAhC,OAAK,GAAAgC,gBAAA,CAAG5B,MAAA,CAAAsB,KAAK,CAACC,SAAS,iB;IAnBpCX,CAAA;UAAAiB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}