{"ast":null,"code":"import { useCustomerStore } from '@/stores/customer';\nimport { ref, onMounted } from 'vue';\nexport default {\n  __name: 'CustomerAddCard',\n  emits: ['close', 'add-success'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const customerStore = useCustomerStore();\n    const customerForm = ref({\n      id: ''\n    });\n    const emit = __emit;\n    onMounted(() => {\n      // 自动生成一个简单的id（如当前时间戳）\n      customerForm.value.id = Date.now().toString().slice(-9); // 取后9位\n    });\n    const handleAdd = async () => {\n      if (!customerForm.value.name || !customerForm.value.phone) {\n        alert('请填写完整信息');\n        return;\n      }\n      await customerStore.addCustomer(customerForm.value);\n      emit('add-success');\n    };\n    const handleCancel = () => {\n      emit('close');\n    };\n    const __returned__ = {\n      customerStore,\n      customerForm,\n      emit,\n      handleAdd,\n      handleCancel,\n      get useCustomerStore() {\n        return useCustomerStore;\n      },\n      ref,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useCustomerStore","ref","onMounted","customerStore","customerForm","id","emit","__emit","value","Date","now","toString","slice","handleAdd","name","phone","alert","addCustomer","handleCancel"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/components/customer/CustomerAddCard.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <el-form :model=\"customerForm\" label-width=\"120px\">\r\n            <el-form-item label=\"顾客ID\">\r\n                <el-input v-model=\"customerForm.id\" :disabled=\"true\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"顾客姓名\">\r\n                <el-input v-model=\"customerForm.name\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"顾客电话\">\r\n                <el-input v-model=\"customerForm.phone\" />\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"handleAdd\">添加</el-button>\r\n                <el-button @click=\"handleCancel\">取消</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </el-card>\r\n</template>\r\n<script setup>\r\nimport { useCustomerStore } from '@/stores/customer';\r\nimport { ref, defineEmits, onMounted } from 'vue';\r\nconst customerStore = useCustomerStore();\r\nconst customerForm = ref({ id: '' });\r\n\r\nconst emit = defineEmits(['close', 'add-success']);\r\n\r\nonMounted(() => {\r\n    // 自动生成一个简单的id（如当前时间戳）\r\n    customerForm.value.id = Date.now().toString().slice(-9); // 取后9位\r\n});\r\n\r\nconst handleAdd = async () => {\r\n    if (!customerForm.value.name || !customerForm.value.phone) {\r\n        alert('请填写完整信息');\r\n        return;\r\n    }\r\n    await customerStore.addCustomer(customerForm.value);\r\n    emit('add-success');\r\n};\r\n\r\nconst handleCancel = () => {\r\n    emit('close');\r\n};\r\n</script>\r\n"],"mappings":"AAoBA,SAASA,gBAAgB,QAAQ,mBAAmB;AACpD,SAASC,GAAgB,EAAEC,SAAS,QAAQ,KAAK;;;;;;;;;IACjD,MAAMC,aAAa,GAAGH,gBAAgB,CAAC,CAAC;IACxC,MAAMI,YAAY,GAAGH,GAAG,CAAC;MAAEI,EAAE,EAAE;IAAG,CAAC,CAAC;IAEpC,MAAMC,IAAI,GAAGC,MAAqC;IAElDL,SAAS,CAAC,MAAM;MACZ;MACAE,YAAY,CAACI,KAAK,CAACH,EAAE,GAAGI,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC;IAEF,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI,CAACT,YAAY,CAACI,KAAK,CAACM,IAAI,IAAI,CAACV,YAAY,CAACI,KAAK,CAACO,KAAK,EAAE;QACvDC,KAAK,CAAC,SAAS,CAAC;QAChB;MACJ;MACA,MAAMb,aAAa,CAACc,WAAW,CAACb,YAAY,CAACI,KAAK,CAAC;MACnDF,IAAI,CAAC,aAAa,CAAC;IACvB,CAAC;IAED,MAAMY,YAAY,GAAGA,CAAA,KAAM;MACvBZ,IAAI,CAAC,OAAO,CAAC;IACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}