{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"menu-card-layout\"\n};\nconst _hoisted_2 = {\n  class: \"hot-dishes-header\"\n};\nconst _hoisted_3 = {\n  class: \"date-picker-container\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"error-message\"\n};\nconst _hoisted_6 = {\n  key: 3,\n  class: \"no-data\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_alert = _resolveComponent(\"el-alert\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", {\n    class: \"hot-dishes-title\"\n  }, \"热品推荐\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_date_picker, {\n    modelValue: $setup.startDate,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.startDate = $event),\n    type: \"date\",\n    placeholder: \"开始日期\",\n    format: \"YYYY-MM-DD\",\n    \"value-format\": \"YYYY-MM-DD\",\n    style: {\n      \"margin-right\": \"10px\"\n    }\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_date_picker, {\n    modelValue: $setup.endDate,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.endDate = $event),\n    type: \"date\",\n    placeholder: \"结束日期\",\n    format: \"YYYY-MM-DD\",\n    \"value-format\": \"YYYY-MM-DD\",\n    style: {\n      \"margin-right\": \"10px\"\n    }\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $setup.handleConfirm\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"确定\")])),\n    _: 1 /* STABLE */\n  })])]), _createCommentVNode(\" 加载状态 \"), $setup.menuStore.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode($setup[\"ElLoading\"], {\n    fullscreen: false\n  })])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 错误信息 \"), $setup.menuStore.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_el_alert, {\n    title: $setup.menuStore.error,\n    type: \"error\",\n    \"show-icon\": \"\"\n  }, null, 8 /* PROPS */, [\"title\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 菜单卡片列表 \"), !$setup.menuStore.loading && !$setup.menuStore.error ? (_openBlock(), _createBlock(_component_el_row, {\n    key: 2,\n    gutter: 20\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(($setup.menuStore.hotDishes || []).slice(0, 4), dish => {\n      return _openBlock(), _createBlock(_component_el_col, {\n        key: dish.dish_id,\n        xs: 24,\n        sm: 12,\n        md: 8,\n        lg: 6,\n        style: {\n          \"margin-bottom\": \"20px\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode($setup[\"MenuCard\"], {\n          dish: dish\n        }, null, 8 /* PROPS */, [\"dish\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 无数据提示 \"), !$setup.menuStore.loading && !$setup.menuStore.error && (!$setup.menuStore.hotDishes || $setup.menuStore.hotDishes.length === 0) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode(_component_el_empty, {\n    description: \"暂无热品推荐数据\"\n  })])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_el_date_picker","modelValue","$setup","startDate","_cache","$event","type","placeholder","format","style","endDate","_component_el_button","onClick","handleConfirm","default","_withCtx","_createTextVNode","_","_createCommentVNode","menuStore","loading","_hoisted_4","fullscreen","error","_hoisted_5","_component_el_alert","title","_createBlock","_component_el_row","gutter","_Fragment","_renderList","hotDishes","slice","dish","_component_el_col","dish_id","xs","sm","md","lg","length","_hoisted_6","_component_el_empty","description"],"sources":["D:\\数据库课程设计（饭店系统）\\restaurant-ordering-system\\src\\components\\menu\\MenuCardLayout.vue"],"sourcesContent":["<template>\r\n    <div class=\"menu-card-layout\">\r\n        <div class=\"hot-dishes-header\">\r\n            <h2 class=\"hot-dishes-title\">热品推荐</h2>\r\n            <div class=\"date-picker-container\">\r\n                <el-date-picker\r\n                    v-model=\"startDate\"\r\n                    type=\"date\"\r\n                    placeholder=\"开始日期\"\r\n                    format=\"YYYY-MM-DD\"\r\n                    value-format=\"YYYY-MM-DD\"\r\n                    style=\"margin-right: 10px;\"\r\n                />\r\n                <el-date-picker\r\n                    v-model=\"endDate\"\r\n                    type=\"date\"\r\n                    placeholder=\"结束日期\"\r\n                    format=\"YYYY-MM-DD\"\r\n                    value-format=\"YYYY-MM-DD\"\r\n                    style=\"margin-right: 10px;\"\r\n                />\r\n                <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n            </div>\r\n        </div>\r\n        \r\n        <!-- 加载状态 -->\r\n        <div v-if=\"menuStore.loading\" class=\"loading-container\">\r\n            <el-loading :fullscreen=\"false\" />\r\n        </div>\r\n        \r\n        <!-- 错误信息 -->\r\n        <div v-if=\"menuStore.error\" class=\"error-message\">\r\n            <el-alert :title=\"menuStore.error\" type=\"error\" show-icon />\r\n        </div>\r\n        \r\n        <!-- 菜单卡片列表 -->\r\n        <el-row v-if=\"!menuStore.loading && !menuStore.error\" :gutter=\"20\">\r\n            <el-col \r\n                v-for=\"dish in (menuStore.hotDishes || []).slice(0, 4)\" \r\n                :key=\"dish.dish_id\" \r\n                :xs=\"24\" \r\n                :sm=\"12\" \r\n                :md=\"8\" \r\n                :lg=\"6\"\r\n                style=\"margin-bottom: 20px;\"\r\n            >\r\n                <MenuCard :dish=\"dish\" />\r\n            </el-col>\r\n        </el-row>\r\n        \r\n        <!-- 无数据提示 -->\r\n        <div v-if=\"!menuStore.loading && !menuStore.error && (!menuStore.hotDishes || menuStore.hotDishes.length === 0)\" class=\"no-data\">\r\n            <el-empty description=\"暂无热品推荐数据\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { ElMessage, ElLoading } from 'element-plus';\r\nimport MenuCard from './MenuCard.vue';\r\nimport { useMenuStore } from '@/stores/menu';\r\n\r\n// 响应式数据\r\nconst startDate = ref('');\r\nconst endDate = ref('');\r\nconst menuStore = useMenuStore();\r\n\r\n// 设置默认日期（当前日期前后7天）\r\nconst setDefaultDates = () => {\r\n    const today = new Date();\r\n    const sevenDaysAgo = new Date(today);\r\n    sevenDaysAgo.setDate(today.getDate() - 7);\r\n    \r\n    startDate.value = sevenDaysAgo.toISOString().split('T')[0];\r\n    endDate.value = today.toISOString().split('T')[0];\r\n};\r\n\r\n// 确认按钮点击事件\r\nconst handleConfirm = async () => {\r\n    if (!startDate.value || !endDate.value) {\r\n        ElMessage.warning('请选择开始和结束日期');\r\n        return;\r\n    }\r\n    \r\n    if (new Date(startDate.value) > new Date(endDate.value)) {\r\n        ElMessage.error('开始日期不能晚于结束日期');\r\n        return;\r\n    }\r\n    \r\n    await fetchHotDishes();\r\n};\r\n\r\n// 获取热品数据\r\nconst fetchHotDishes = async () => {\r\n    if (startDate.value && endDate.value) {\r\n        // 根据后端要求，为日期添加时间部分\r\n        const formattedStartTime = `${startDate.value} 20:00:00`;\r\n        const formattedEndTime = `${endDate.value} 23:59:59`;\r\n        await menuStore.fetchHotDishes(formattedStartTime, formattedEndTime);\r\n    }\r\n};\r\n\r\n// 组件挂载时设置默认日期并获取数据\r\nonMounted(() => {\r\n    setDefaultDates();\r\n    fetchHotDishes();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.menu-card-layout {\r\n    padding: 20px;\r\n}\r\n\r\n.hot-dishes-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n    flex-wrap: wrap;\r\n    gap: 10px;\r\n}\r\n\r\n.hot-dishes-title {\r\n    margin: 0;\r\n    color: #333;\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n}\r\n\r\n.date-picker-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n}\r\n\r\n.loading-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 200px;\r\n}\r\n\r\n.error-message {\r\n    margin: 20px 0;\r\n}\r\n\r\n.no-data {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 200px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .hot-dishes-header {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n    }\r\n    \r\n    .date-picker-container {\r\n        width: 100%;\r\n        flex-wrap: wrap;\r\n    }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}