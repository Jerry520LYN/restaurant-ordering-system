{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { getTableList, addTable, updateTableStatus, deleteTableById } from '@/api/table';\nimport { ElMessage } from 'element-plus';\nexport const useTableStore = defineStore('table', {\n  state: () => ({\n    tableList: [],\n    loading: false,\n    error: null\n  }),\n  actions: {\n    async fetchTableList() {\n      this.loading = true;\n      try {\n        this.tableList = await getTableList();\n        this.error = null;\n      } catch (err) {\n        this.error = err.message || '获取餐桌列表失败';\n        ElMessage.error(this.error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async addTable(tableStatus, capacity) {\n      try {\n        await addTable({\n          tableStatus,\n          capacity\n        });\n        ElMessage.success('添加餐桌成功');\n        await this.fetchTableList();\n      } catch (err) {\n        ElMessage.error(err.message || '添加餐桌失败');\n      }\n    },\n    async updateTableStatus(tableId, tableStatus) {\n      try {\n        await updateTableStatus({\n          tableId,\n          tableStatus\n        });\n        ElMessage.success('更新餐桌状态成功');\n        await this.fetchTableList();\n      } catch (err) {\n        ElMessage.error(err.message || '更新餐桌状态失败');\n      }\n    },\n    async deleteTable(tableId) {\n      try {\n        await deleteTableById(tableId);\n        ElMessage.success('删除餐桌成功');\n        await this.fetchTableList();\n      } catch (err) {\n        ElMessage.error(err.message || '删除餐桌失败');\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","getTableList","addTable","updateTableStatus","deleteTableById","ElMessage","useTableStore","state","tableList","loading","error","actions","fetchTableList","err","message","tableStatus","capacity","success","tableId","deleteTable"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/stores/table.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport { getTableList, addTable, updateTableStatus, deleteTableById } from '@/api/table';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nexport const useTableStore = defineStore('table', {\r\n  state: () => ({\r\n    tableList: [],\r\n    loading: false,\r\n    error: null\r\n  }),\r\n  actions: {\r\n    async fetchTableList() {\r\n      this.loading = true;\r\n      try {\r\n        this.tableList = await getTableList();\r\n        this.error = null;\r\n      } catch (err) {\r\n        this.error = err.message || '获取餐桌列表失败';\r\n        ElMessage.error(this.error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async addTable(tableStatus, capacity) {\r\n      try {\r\n        await addTable({ tableStatus, capacity });\r\n        ElMessage.success('添加餐桌成功');\r\n        await this.fetchTableList();\r\n      } catch (err) {\r\n        ElMessage.error(err.message || '添加餐桌失败');\r\n      }\r\n    },\r\n    async updateTableStatus(tableId, tableStatus) {\r\n      try {\r\n        await updateTableStatus({ tableId, tableStatus });\r\n        ElMessage.success('更新餐桌状态成功');\r\n        await this.fetchTableList();\r\n      } catch (err) {\r\n        ElMessage.error(err.message || '更新餐桌状态失败');\r\n      }\r\n    },\r\n    async deleteTable(tableId) {\r\n      try {\r\n        await deleteTableById(tableId);\r\n        ElMessage.success('删除餐桌成功');\r\n        await this.fetchTableList();\r\n      } catch (err) {\r\n        ElMessage.error(err.message || '删除餐桌失败');\r\n      }\r\n    }\r\n  }\r\n});\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,YAAY,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,eAAe,QAAQ,aAAa;AACxF,SAASC,SAAS,QAAQ,cAAc;AAExC,OAAO,MAAMC,aAAa,GAAGN,WAAW,CAAC,OAAO,EAAE;EAChDO,KAAK,EAAEA,CAAA,MAAO;IACZC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,CAACH,OAAO,GAAG,IAAI;MACnB,IAAI;QACF,IAAI,CAACD,SAAS,GAAG,MAAMP,YAAY,CAAC,CAAC;QACrC,IAAI,CAACS,KAAK,GAAG,IAAI;MACnB,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZ,IAAI,CAACH,KAAK,GAAGG,GAAG,CAACC,OAAO,IAAI,UAAU;QACtCT,SAAS,CAACK,KAAK,CAAC,IAAI,CAACA,KAAK,CAAC;MAC7B,CAAC,SAAS;QACR,IAAI,CAACD,OAAO,GAAG,KAAK;MACtB;IACF,CAAC;IACD,MAAMP,QAAQA,CAACa,WAAW,EAAEC,QAAQ,EAAE;MACpC,IAAI;QACF,MAAMd,QAAQ,CAAC;UAAEa,WAAW;UAAEC;QAAS,CAAC,CAAC;QACzCX,SAAS,CAACY,OAAO,CAAC,QAAQ,CAAC;QAC3B,MAAM,IAAI,CAACL,cAAc,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZR,SAAS,CAACK,KAAK,CAACG,GAAG,CAACC,OAAO,IAAI,QAAQ,CAAC;MAC1C;IACF,CAAC;IACD,MAAMX,iBAAiBA,CAACe,OAAO,EAAEH,WAAW,EAAE;MAC5C,IAAI;QACF,MAAMZ,iBAAiB,CAAC;UAAEe,OAAO;UAAEH;QAAY,CAAC,CAAC;QACjDV,SAAS,CAACY,OAAO,CAAC,UAAU,CAAC;QAC7B,MAAM,IAAI,CAACL,cAAc,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZR,SAAS,CAACK,KAAK,CAACG,GAAG,CAACC,OAAO,IAAI,UAAU,CAAC;MAC5C;IACF,CAAC;IACD,MAAMK,WAAWA,CAACD,OAAO,EAAE;MACzB,IAAI;QACF,MAAMd,eAAe,CAACc,OAAO,CAAC;QAC9Bb,SAAS,CAACY,OAAO,CAAC,QAAQ,CAAC;QAC3B,MAAM,IAAI,CAACL,cAAc,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZR,SAAS,CAACK,KAAK,CAACG,GAAG,CAACC,OAAO,IAAI,QAAQ,CAAC;MAC1C;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}