{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_CustomerUpdateCard = _resolveComponent(\"CustomerUpdateCard\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createBlock(_component_el_table, {\n    data: $data.customerList,\n    style: {\n      \"width\": \"100%\"\n    },\n    stripe: \"\",\n    border: \"\",\n    \"empty-text\": \"暂无顾客信息\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"customerId\",\n      label: \"顾客ID\",\n      width: \"120\",\n      align: \"center\",\n      fixed: \"left\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"name\",\n      label: \"顾客姓名\",\n      width: \"160\",\n      align: \"center\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"phone\",\n      label: \"顾客电话\",\n      width: \"180\",\n      align: \"center\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"createTime\",\n      label: \"注册时间\",\n      width: \"160\",\n      align: \"center\",\n      formatter: $options.formatDate\n    }, null, 8 /* PROPS */, [\"formatter\"]), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"160\",\n      align: \"center\",\n      fixed: \"right\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        icon: \"el-icon-edit\",\n        onClick: $event => $options.handleEdit(scope.row)\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"更新\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"danger\",\n        size: \"small\",\n        icon: \"el-icon-delete\",\n        onClick: $event => $options.handleDelete(scope.row)\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"删除\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_dialog, {\n      modelValue: $data.updateDialogVisible,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.updateDialogVisible = $event),\n      title: \"更新顾客\",\n      width: \"500px\"\n    }, {\n      default: _withCtx(() => [$data.currentCustomer ? (_openBlock(), _createBlock(_component_CustomerUpdateCard, {\n        key: 0,\n        customer: $data.currentCustomer,\n        onUpdateSuccess: $options.handleUpdateSuccess,\n        onClose: _cache[0] || (_cache[0] = $event => $data.updateDialogVisible = false)\n      }, null, 8 /* PROPS */, [\"customer\", \"onUpdateSuccess\"])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"]);\n}","map":{"version":3,"names":["_createBlock","_component_el_table","data","$data","customerList","style","stripe","border","default","_withCtx","_createVNode","_component_el_table_column","prop","label","width","align","fixed","formatter","$options","formatDate","scope","_component_el_button","type","size","icon","onClick","$event","handleEdit","row","_cache","_createTextVNode","_","handleDelete","_component_el_dialog","modelValue","updateDialogVisible","title","currentCustomer","_component_CustomerUpdateCard","key","customer","onUpdateSuccess","handleUpdateSuccess","onClose","_createCommentVNode"],"sources":["D:\\数据库课程设计（饭店系统）\\restaurant-ordering-system\\src\\components\\customer\\CustomerForm.vue"],"sourcesContent":["<template>\r\n    <el-table :data=\"customerList\" style=\"width: 100%\" stripe border empty-text=\"暂无顾客信息\">\r\n        <el-table-column prop=\"customerId\" label=\"顾客ID\" width=\"120\" align=\"center\" fixed=\"left\" />\r\n        <el-table-column prop=\"name\" label=\"顾客姓名\" width=\"160\" align=\"center\" />\r\n        <el-table-column prop=\"phone\" label=\"顾客电话\" width=\"180\" align=\"center\" />\r\n        <el-table-column prop=\"createTime\" label=\"注册时间\" width=\"160\" align=\"center\"\r\n            :formatter=\"formatDate\" />\r\n        <el-table-column label=\"操作\" width=\"160\" align=\"center\" fixed=\"right\">\r\n            <template #default=\"scope\">\r\n                <el-button type=\"primary\" size=\"small\" icon=\"el-icon-edit\" @click=\"handleEdit(scope.row)\">更新</el-button>\r\n                <el-button type=\"danger\" size=\"small\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n            </template>\r\n        </el-table-column>\r\n        <el-dialog v-model=\"updateDialogVisible\" title=\"更新顾客\" width=\"500px\">\r\n            <CustomerUpdateCard v-if=\"currentCustomer\" :customer=\"currentCustomer\" @update-success=\"handleUpdateSuccess\" @close=\"updateDialogVisible = false\" />\r\n        </el-dialog>\r\n    </el-table>\r\n    \r\n</template>\r\n<script>\r\nimport { useCustomerStore } from '@/stores/customer';\r\nimport CustomerUpdateCard from './CustomerUpdateCard.vue';\r\n\r\nexport default {\r\n    components: {\r\n        CustomerUpdateCard,\r\n\r\n    },\r\n    name: 'CustomerForm',\r\n    data() {\r\n        return {\r\n            customerStore: useCustomerStore(),\r\n            customerList: [],\r\n            updateDialogVisible: false,\r\n            currentCustomer: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.customerStore.fetchCustomerList();\r\n        // 筛选出以0开头的顾客ID\r\n        this.customerList = this.customerStore.customerList.filter(customer => {\r\n            const customerId = customer.customerId?.toString() || '';\r\n            return customerId.startsWith('0');\r\n        });\r\n    },\r\n    methods: {\r\n        handleEdit(row) {\r\n            this.updateDialogVisible = true;\r\n            this.currentCustomer = row;\r\n        },\r\n        handleDelete(row) {\r\n            this.customerStore.deleteCustomer(row.customerPhone);   \r\n            this.customerStore.fetchCustomerList();\r\n            // 重新筛选数据\r\n            this.customerList = this.customerStore.customerList.filter(customer => {\r\n                const customerId = customer.customerId?.toString() || '';\r\n                return customerId.startsWith('0');\r\n            });\r\n        },\r\n        handleUpdateSuccess() {\r\n            this.updateDialogVisible = false;\r\n            this.customerStore.fetchCustomerList();\r\n            // 重新筛选数据\r\n            this.customerList = this.customerStore.customerList.filter(customer => {\r\n                const customerId = customer.customerId?.toString() || '';\r\n                return customerId.startsWith('0');\r\n            });\r\n            this.currentCustomer = null;\r\n        },\r\n        formatDate(row, column, cellValue) {\r\n            if (!cellValue) return '';\r\n            // 只保留年月日\r\n            return cellValue.toString().slice(0, 10);\r\n        }\r\n    },\r\n    \r\n}\r\n</script>"],"mappings":";;;;;;;uBACIA,YAAA,CAeWC,mBAAA;IAfAC,IAAI,EAAEC,KAAA,CAAAC,YAAY;IAAEC,KAAmB,EAAnB;MAAA;IAAA,CAAmB;IAACC,MAAM,EAAN,EAAM;IAACC,MAAM,EAAN,EAAM;IAAC,YAAU,EAAC;;IADhFC,OAAA,EAAAC,QAAA,CAEQ,MAA0F,CAA1FC,YAAA,CAA0FC,0BAAA;MAAzEC,IAAI,EAAC,YAAY;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC,QAAQ;MAACC,KAAK,EAAC;QACjFN,YAAA,CAAuEC,0BAAA;MAAtDC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC;QAC5DL,YAAA,CAAwEC,0BAAA;MAAvDC,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC;QAC7DL,YAAA,CAC8BC,0BAAA;MADbC,IAAI,EAAC,YAAY;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC,QAAQ;MACrEE,SAAS,EAAEC,QAAA,CAAAC;4CAChBT,YAAA,CAKkBC,0BAAA;MALDE,KAAK,EAAC,IAAI;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC,QAAQ;MAACC,KAAK,EAAC;;MAC9CR,OAAO,EAAAC,QAAA,CAC0FW,KADnF,KACrBV,YAAA,CAAwGW,oBAAA;QAA7FC,IAAI,EAAC,SAAS;QAACC,IAAI,EAAC,OAAO;QAACC,IAAI,EAAC,cAAc;QAAEC,OAAK,EAAAC,MAAA,IAAER,QAAA,CAAAS,UAAU,CAACP,KAAK,CAACQ,GAAG;;QATvGpB,OAAA,EAAAC,QAAA,CAS0G,MAAEoB,MAAA,QAAAA,MAAA,OAT5GC,gBAAA,CAS0G,IAAE,E;QAT5GC,CAAA;wDAUgBrB,YAAA,CAA2GW,oBAAA;QAAhGC,IAAI,EAAC,QAAQ;QAACC,IAAI,EAAC,OAAO;QAACC,IAAI,EAAC,gBAAgB;QAAEC,OAAK,EAAAC,MAAA,IAAER,QAAA,CAAAc,YAAY,CAACZ,KAAK,CAACQ,GAAG;;QAV1GpB,OAAA,EAAAC,QAAA,CAU6G,MAAEoB,MAAA,QAAAA,MAAA,OAV/GC,gBAAA,CAU6G,IAAE,E;QAV/GC,CAAA;;MAAAA,CAAA;QAaQrB,YAAA,CAEYuB,oBAAA;MAfpBC,UAAA,EAa4B/B,KAAA,CAAAgC,mBAAmB;MAb/C,uBAAAN,MAAA,QAAAA,MAAA,MAAAH,MAAA,IAa4BvB,KAAA,CAAAgC,mBAAmB,GAAAT,MAAA;MAAEU,KAAK,EAAC,MAAM;MAACtB,KAAK,EAAC;;MAbpEN,OAAA,EAAAC,QAAA,CAiBkC,MAGR,CANYN,KAAA,CAAAkC,eAAe,I,cAAzCrC,YAAA,CAAoJsC,6BAAA;QAdhKC,GAAA;QAcwDC,QAAQ,EAAErC,KAAA,CAAAkC,eAAe;QAAGI,eAAc,EAAEvB,QAAA,CAAAwB,mBAAmB;QAAGC,OAAK,EAAAd,MAAA,QAAAA,MAAA,MAAAH,MAAA,IAAEvB,KAAA,CAAAgC,mBAAmB;kEAdpJS,mBAAA,e;MAAAb,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}