{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { ref, onMounted, computed, watch } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { getMenuList } from '@/api/menu';\nimport { useCheckoutStore } from '@/stores/checkout';\n\n// Stores\n\nexport default {\n  __name: 'CheckoutForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const checkoutStore = useCheckoutStore();\n\n    // Menu List\n    const menuList = ref([]);\n\n    // Form Data\n    const currentCustomerId = ref('');\n    const currentTableId = ref('');\n    const currentPeopleCount = ref('');\n    const currentSelectedDishes = ref([]);\n\n    // Order IDs\n    const orderId = ref('');\n    const editOrderId = ref('');\n    const checkoutOrderId = ref('');\n\n    // Query Fields\n    const queryTableId = ref('');\n    const queryOrderId = ref('');\n\n    // Messages\n    const message = ref('');\n    const error = ref('');\n\n    // Computed\n    const isEditMode = computed(() => !!editOrderId.value);\n    const currentOrderId = computed(() => orderId.value || editOrderId.value);\n    const currentOrderStatus = computed(() => {\n      if (checkoutStore.currentOrder?.status) {\n        return checkoutStore.currentOrder.status;\n      }\n      return orderId.value ? '进行中' : '未创建';\n    });\n    const canSubmitOrder = computed(() => {\n      return currentCustomerId.value && currentTableId.value && currentPeopleCount.value || isEditMode.value && editOrderId.value;\n    });\n    const totalAmount = computed(() => {\n      return currentSelectedDishes.value.reduce((total, dish) => {\n        return total + (dish.price || 0) * dish.quantity;\n      }, 0);\n    });\n    onMounted(async () => {\n      await fetchMenuList();\n    });\n\n    // Watch for store changes\n    watch(() => checkoutStore.currentOrder, newOrder => {\n      if (newOrder) {\n        loadOrderData(newOrder);\n      }\n    }, {\n      deep: true\n    });\n    async function fetchMenuList() {\n      try {\n        const res = await getMenuList();\n        menuList.value = Array.isArray(res) ? res : res.data || [];\n      } catch (err) {\n        error.value = err;\n      }\n    }\n\n    // Order Creation\n    async function handleCreateOrder() {\n      message.value = '';\n      error.value = '';\n      try {\n        await checkoutStore.createNewOrder({\n          tableId: Number(currentTableId.value),\n          customerId: Number(currentCustomerId.value),\n          peopleCount: Number(currentPeopleCount.value)\n        });\n        orderId.value = checkoutStore.currentOrder?.orderId || '';\n        if (orderId.value) {\n          ElMessage.success(`订单创建成功，ID: ${orderId.value}`);\n          // 清空表单\n          currentCustomerId.value = '';\n          currentTableId.value = '';\n          currentPeopleCount.value = '';\n        }\n      } catch (err) {\n        error.value = checkoutStore.error || err;\n        ElMessage.error(error.value);\n      }\n    }\n\n    // Dish Operations\n    function handleDishDblClick(row) {\n      if (!currentOrderId.value) {\n        ElMessage.warning('请先创建或查询订单');\n        return;\n      }\n      const existingDish = currentSelectedDishes.value.find(d => d.dishId === row.dishId);\n      if (existingDish) {\n        handleUpdateQuantity(existingDish, existingDish.quantity + 1);\n        return;\n      }\n\n      // 添加新菜品\n      const newDish = {\n        dishId: row.dishId,\n        dishName: row.dishName,\n        price: row.price,\n        quantity: 1\n      };\n      checkoutStore.addDish(currentOrderId.value, row.dishId, 1).then(() => {\n        currentSelectedDishes.value.push(newDish);\n        ElMessage.success(`已添加菜品: ${row.dishName}`);\n      }).catch(err => {\n        error.value = err;\n        ElMessage.error(error.value);\n      });\n    }\n    function removeDish(row) {\n      if (!currentOrderId.value) return;\n      checkoutStore.removeDish(currentOrderId.value, row.dishId).then(() => {\n        currentSelectedDishes.value = currentSelectedDishes.value.filter(d => d.dishId !== row.dishId);\n        ElMessage.success(`已移除菜品: ${row.dishName}`);\n      }).catch(err => {\n        error.value = err;\n        ElMessage.error(error.value);\n      });\n    }\n    function handleUpdateQuantity(row, quantity) {\n      if (!currentOrderId.value) return;\n      checkoutStore.updateDishQuantity(currentOrderId.value, row.dishId, quantity).then(() => {\n        row.quantity = quantity;\n        ElMessage.success('数量更新成功');\n      }).catch(err => {\n        error.value = err;\n        ElMessage.error(error.value);\n      });\n    }\n    function handleExitEdit() {\n      checkoutStore.clearCurrentOrder();\n      resetForm();\n    }\n    function resetForm() {\n      orderId.value = '';\n      editOrderId.value = '';\n      currentCustomerId.value = '';\n      currentTableId.value = '';\n      currentPeopleCount.value = '';\n      currentSelectedDishes.value = [];\n    }\n\n    // Order Query\n    async function handleQueryOrderByTableId() {\n      message.value = '';\n      error.value = '';\n      try {\n        await checkoutStore.getOrderByTableId(queryTableId.value);\n        if (checkoutStore.currentOrder) {\n          loadOrderData(checkoutStore.currentOrder);\n          ElMessage.success('查询成功');\n        } else {\n          ElMessage.warning('未找到相关订单');\n        }\n      } catch (err) {\n        error.value = checkoutStore.error || err;\n        ElMessage.error(error.value);\n      }\n    }\n    async function handleQueryOrderById() {\n      message.value = '';\n      error.value = '';\n      try {\n        await checkoutStore.getOrderById(queryOrderId.value);\n        if (checkoutStore.currentOrder) {\n          loadOrderData(checkoutStore.currentOrder);\n          ElMessage.success('查询成功');\n        } else {\n          ElMessage.warning('未找到相关订单');\n        }\n      } catch (err) {\n        error.value = checkoutStore.error || err;\n        ElMessage.error(error.value);\n      }\n    }\n    function loadOrderData(orderData) {\n      editOrderId.value = orderData.orderId || '';\n      currentCustomerId.value = orderData.customerId || '';\n      currentTableId.value = orderData.tableId || '';\n      currentPeopleCount.value = orderData.peopleCount || '';\n\n      // 处理菜品数据\n      if (orderData.dishes) {\n        if (typeof orderData.dishes === 'string') {\n          try {\n            currentSelectedDishes.value = JSON.parse(orderData.dishes);\n          } catch {\n            // 如果是简单的菜品名称字符串，转换为数组格式\n            currentSelectedDishes.value = [{\n              dishId: 0,\n              dishName: orderData.dishes,\n              price: 0,\n              quantity: 1\n            }];\n          }\n        } else if (Array.isArray(orderData.dishes)) {\n          currentSelectedDishes.value = [...orderData.dishes];\n        } else {\n          currentSelectedDishes.value = [];\n        }\n      } else {\n        currentSelectedDishes.value = [];\n      }\n    }\n\n    // Order Editing\n    async function handleEditSaveOrder() {\n      message.value = '';\n      error.value = '';\n      try {\n        // 这里需要根据实际的API来更新订单\n        ElMessage.success('订单更新成功');\n        handleExitEdit();\n      } catch (err) {\n        error.value = checkoutStore.error || err;\n        ElMessage.error(error.value);\n      }\n    }\n\n    // Checkout\n    async function handleCheckout() {\n      message.value = '';\n      error.value = '';\n      try {\n        await checkoutStore.checkout(checkoutOrderId.value);\n        ElMessage.success('结账成功');\n        checkoutOrderId.value = '';\n      } catch (err) {\n        error.value = checkoutStore.error || err;\n        ElMessage.error(error.value);\n      }\n    }\n\n    // Row class name for table highlighting\n    function getRowClassName() {\n      return 'hover:bg-blue-50 cursor-pointer';\n    }\n    const __returned__ = {\n      checkoutStore,\n      menuList,\n      currentCustomerId,\n      currentTableId,\n      currentPeopleCount,\n      currentSelectedDishes,\n      orderId,\n      editOrderId,\n      checkoutOrderId,\n      queryTableId,\n      queryOrderId,\n      message,\n      error,\n      isEditMode,\n      currentOrderId,\n      currentOrderStatus,\n      canSubmitOrder,\n      totalAmount,\n      fetchMenuList,\n      handleCreateOrder,\n      handleDishDblClick,\n      removeDish,\n      handleUpdateQuantity,\n      handleExitEdit,\n      resetForm,\n      handleQueryOrderByTableId,\n      handleQueryOrderById,\n      loadOrderData,\n      handleEditSaveOrder,\n      handleCheckout,\n      getRowClassName,\n      ref,\n      onMounted,\n      computed,\n      watch,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get getMenuList() {\n        return getMenuList;\n      },\n      get useCheckoutStore() {\n        return useCheckoutStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","watch","ElMessage","getMenuList","useCheckoutStore","checkoutStore","menuList","currentCustomerId","currentTableId","currentPeopleCount","currentSelectedDishes","orderId","editOrderId","checkoutOrderId","queryTableId","queryOrderId","message","error","isEditMode","value","currentOrderId","currentOrderStatus","currentOrder","status","canSubmitOrder","totalAmount","reduce","total","dish","price","quantity","fetchMenuList","newOrder","loadOrderData","deep","res","Array","isArray","data","err","handleCreateOrder","createNewOrder","tableId","Number","customerId","peopleCount","success","handleDishDblClick","row","warning","existingDish","find","d","dishId","handleUpdateQuantity","newDish","dishName","addDish","then","push","catch","removeDish","filter","updateDishQuantity","handleExitEdit","clearCurrentOrder","resetForm","handleQueryOrderByTableId","getOrderByTableId","handleQueryOrderById","getOrderById","orderData","dishes","JSON","parse","handleEditSaveOrder","handleCheckout","checkout","getRowClassName"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/components/checkout/CheckoutForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"checkout-form-container bg-gray-50 min-h-screen\">\r\n    <div class=\"flex h-screen\">\r\n      <!-- Left Menu List (50% width) -->\r\n      <div class=\"w-1/2 bg-white shadow-lg flex flex-col\">\r\n        <div class=\"p-6 border-b border-gray-200 bg-gradient-to-r from-blue-500 to-purple-600\">\r\n          <h2 class=\"text-xl font-bold text-white flex items-center\">\r\n            <i class=\"el-icon-menu mr-2\"></i>\r\n            菜单列表\r\n          </h2>\r\n          <p class=\"text-blue-100 text-sm mt-1\">双击菜品添加到当前订单</p>\r\n        </div>\r\n        <div class=\"flex-1 overflow-y-auto p-4\">\r\n          <el-table \r\n            :data=\"menuList\" \r\n            style=\"width: 100%;\" \r\n            size=\"small\" \r\n            @row-dblclick=\"handleDishDblClick\"\r\n            class=\"menu-table\"\r\n            :row-class-name=\"getRowClassName\"\r\n            highlight-current-row\r\n          >\r\n            <el-table-column prop=\"dishId\" label=\"菜品ID\" width=\"80\" />\r\n            <el-table-column prop=\"dishName\" label=\"菜品名称\" width=\"180\" />\r\n            <el-table-column prop=\"price\" label=\"价格\" width=\"100\">\r\n              <template #default=\"scope\">\r\n                <span class=\"text-red-500 font-semibold\">¥{{ scope.row.price }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"description\" label=\"描述\" />\r\n          </el-table>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Right Order Operations (50% width) -->\r\n      <div class=\"w-1/2 flex flex-col bg-white\">\r\n        <div class=\"flex-1 overflow-y-auto\">\r\n          <!-- Current Order Status -->\r\n          <div class=\"bg-gradient-to-r from-green-500 to-blue-500 p-6 text-white\">\r\n            <h2 class=\"text-xl font-bold mb-2\">当前订单状态</h2>\r\n            <div class=\"grid grid-cols-2 gap-4 text-sm\">\r\n              <div>\r\n                <span class=\"opacity-80\">订单ID:</span>\r\n                <span class=\"font-bold ml-2\">{{ currentOrderId || '未创建' }}</span>\r\n              </div>\r\n              <div>\r\n                <span class=\"opacity-80\">状态:</span>\r\n                <span class=\"font-bold ml-2\">{{ currentOrderStatus || '未创建' }}</span>\r\n              </div>\r\n              <div>\r\n                <span class=\"opacity-80\">桌号:</span>\r\n                <span class=\"font-bold ml-2\">{{ currentTableId || '未设置' }}</span>\r\n              </div>\r\n              <div>\r\n                <span class=\"opacity-80\">顾客ID:</span>\r\n                <span class=\"font-bold ml-2\">{{ currentCustomerId || '未设置' }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"p-6 space-y-6\">\r\n            <!-- Order Creation/Editing Section -->\r\n            <div class=\"bg-white rounded-lg shadow-md p-6 border border-gray-200\">\r\n              <h3 class=\"text-lg font-bold mb-4 text-gray-800 flex items-center\">\r\n                <i class=\"el-icon-plus mr-2 text-blue-500\"></i>\r\n                {{ isEditMode ? '订单编辑' : '创建新订单' }}\r\n              </h3>\r\n              <el-form label-width=\"80px\" class=\"space-y-4\">\r\n                <el-form-item label=\"订单ID\" v-if=\"isEditMode\">\r\n                  <el-input v-model=\"editOrderId\" disabled class=\"bg-gray-100\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"顾客ID\">\r\n                  <el-input \r\n                    v-model=\"currentCustomerId\" \r\n                    type=\"number\" \r\n                    placeholder=\"输入顾客ID\" \r\n                    :disabled=\"isEditMode && !editOrderId\" \r\n                    class=\"w-full\"\r\n                  />\r\n                </el-form-item>\r\n                <el-form-item label=\"桌子ID\">\r\n                  <el-input \r\n                    v-model=\"currentTableId\" \r\n                    type=\"number\" \r\n                    placeholder=\"输入桌子ID\" \r\n                    :disabled=\"isEditMode && !editOrderId\" \r\n                    class=\"w-full\"\r\n                  />\r\n                </el-form-item>\r\n                <el-form-item label=\"人数\">\r\n                  <el-input \r\n                    v-model=\"currentPeopleCount\" \r\n                    type=\"number\" \r\n                    min=\"1\" \r\n                    placeholder=\"输入人数\" \r\n                    :disabled=\"isEditMode && !editOrderId\" \r\n                    class=\"w-full\"\r\n                  />\r\n                </el-form-item>\r\n                <el-form-item>\r\n                  <el-button \r\n                    type=\"primary\" \r\n                    @click=\"isEditMode ? handleEditSaveOrder() : handleCreateOrder()\"\r\n                    :disabled=\"!canSubmitOrder\"\r\n                    class=\"w-full\"\r\n                    size=\"large\"\r\n                  >\r\n                    <i class=\"el-icon-check mr-2\"></i>\r\n                    {{ isEditMode ? '保存更新' : '创建订单' }}\r\n                  </el-button>\r\n                  <el-button \r\n                    type=\"warning\" \r\n                    @click=\"handleExitEdit\" \r\n                    v-if=\"isEditMode || orderId\"\r\n                    class=\"w-full mt-2\"\r\n                    size=\"large\"\r\n                  >\r\n                    <i class=\"el-icon-close mr-2\"></i>\r\n                    取消\r\n                  </el-button>\r\n                </el-form-item>\r\n              </el-form>\r\n            </div>\r\n\r\n            <!-- Selected Dishes Section -->\r\n            <div class=\"bg-white rounded-lg shadow-md p-6 border border-gray-200\">\r\n              <h3 class=\"text-lg font-bold mb-4 text-gray-800 flex items-center\">\r\n                <i class=\"el-icon-shopping-cart-2 mr-2 text-green-500\"></i>\r\n                已选菜品\r\n                <span class=\"ml-2 text-sm text-gray-500\">(共 {{ currentSelectedDishes.length }} 种)</span>\r\n              </h3>\r\n              <div v-if=\"currentSelectedDishes.length === 0\" class=\"text-center py-8 text-gray-500\">\r\n                <i class=\"el-icon-shopping-cart-2 text-4xl mb-2\"></i>\r\n                <p>暂无菜品，请双击左侧菜单添加</p>\r\n              </div>\r\n              <el-table v-else :data=\"currentSelectedDishes\" style=\"width: 100%;\" size=\"small\" class=\"border rounded\">\r\n                <el-table-column prop=\"dishId\" label=\"菜品ID\" width=\"80\" />\r\n                <el-table-column prop=\"dishName\" label=\"菜品名称\" width=\"150\" />\r\n                <el-table-column prop=\"price\" label=\"单价\" width=\"100\">\r\n                  <template #default=\"scope\">\r\n                    <span class=\"text-red-500\">¥{{ scope.row.price || 0 }}</span>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"quantity\" label=\"数量\" width=\"120\">\r\n                  <template #default=\"scope\">\r\n                    <el-input-number \r\n                      v-model=\"scope.row.quantity\" \r\n                      :min=\"1\" \r\n                      :max=\"99\"\r\n                      @change=\"q => handleUpdateQuantity(scope.row, q)\" \r\n                      style=\"width: 100%;\" \r\n                      size=\"small\"\r\n                    />\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"小计\" width=\"100\">\r\n                  <template #default=\"scope\">\r\n                    <span class=\"text-red-500 font-semibold\">\r\n                      ¥{{ ((scope.row.price || 0) * scope.row.quantity).toFixed(2) }}\r\n                    </span>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\" width=\"100\" align=\"center\">\r\n                  <template #default=\"scope\">\r\n                    <el-button \r\n                      size=\"small\" \r\n                      type=\"danger\" \r\n                      @click=\"removeDish(scope.row)\"\r\n                      icon=\"el-icon-delete\"\r\n                    >\r\n                      移除\r\n                    </el-button>\r\n                  </template>\r\n                </el-table-column>\r\n              </el-table>\r\n              \r\n              <!-- Order Summary -->\r\n              <div v-if=\"currentSelectedDishes.length > 0\" class=\"mt-4 p-4 bg-gray-50 rounded-lg\">\r\n                <div class=\"flex justify-between items-center\">\r\n                  <span class=\"text-lg font-semibold\">总计:</span>\r\n                  <span class=\"text-2xl font-bold text-red-500\">¥{{ totalAmount.toFixed(2) }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Order Query Section -->\r\n            <div class=\"bg-white rounded-lg shadow-md p-6 border border-gray-200\">\r\n              <h3 class=\"text-lg font-bold mb-4 text-gray-800 flex items-center\">\r\n                <i class=\"el-icon-search mr-2 text-blue-500\"></i>\r\n                订单查询\r\n              </h3>\r\n              <div class=\"grid grid-cols-1 gap-4\">\r\n                <div class=\"flex items-center space-x-2\">\r\n                  <el-input \r\n                    v-model=\"queryTableId\" \r\n                    type=\"number\" \r\n                    placeholder=\"输入桌子ID\" \r\n                    class=\"flex-1\"\r\n                  />\r\n                  <el-button @click=\"handleQueryOrderByTableId\" type=\"primary\">\r\n                    <i class=\"el-icon-search mr-1\"></i>\r\n                    查询\r\n                  </el-button>\r\n                </div>\r\n                <div class=\"flex items-center space-x-2\">\r\n                  <el-input \r\n                    v-model=\"queryOrderId\" \r\n                    type=\"number\" \r\n                    placeholder=\"输入订单ID\" \r\n                    class=\"flex-1\"\r\n                  />\r\n                  <el-button @click=\"handleQueryOrderById\" type=\"success\">\r\n                    <i class=\"el-icon-document mr-1\"></i>\r\n                    查询\r\n                  </el-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Order Checkout Section -->\r\n            <div class=\"bg-white rounded-lg shadow-md p-6 border border-gray-200\">\r\n              <h3 class=\"text-lg font-bold mb-4 text-gray-800 flex items-center\">\r\n                <i class=\"el-icon-money mr-2 text-green-500\"></i>\r\n                结账\r\n              </h3>\r\n              <div class=\"flex items-center space-x-2\">\r\n                <el-input \r\n                  v-model=\"checkoutOrderId\" \r\n                  type=\"number\" \r\n                  placeholder=\"输入订单ID\" \r\n                  class=\"flex-1\"\r\n                />\r\n                <el-button type=\"success\" @click=\"handleCheckout\" size=\"large\">\r\n                  <i class=\"el-icon-money mr-1\"></i>\r\n                  结账\r\n                </el-button>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Messages -->\r\n            <div v-if=\"message\" class=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded\">\r\n              <i class=\"el-icon-success mr-2\"></i>\r\n              {{ message }}\r\n            </div>\r\n            <div v-if=\"error\" class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\r\n              <i class=\"el-icon-error mr-2\"></i>\r\n              {{ error }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed, watch } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport { getMenuList } from '@/api/menu';\r\nimport { useCheckoutStore } from '@/stores/checkout';\r\n\r\n// Stores\r\nconst checkoutStore = useCheckoutStore(); \r\n\r\n// Menu List\r\nconst menuList = ref([]);\r\n\r\n// Form Data\r\nconst currentCustomerId = ref('');\r\nconst currentTableId = ref('');\r\nconst currentPeopleCount = ref('');\r\nconst currentSelectedDishes = ref([]);\r\n\r\n// Order IDs\r\nconst orderId = ref('');\r\nconst editOrderId = ref('');\r\nconst checkoutOrderId = ref('');\r\n\r\n// Query Fields\r\nconst queryTableId = ref('');\r\nconst queryOrderId = ref('');\r\n\r\n// Messages\r\nconst message = ref('');\r\nconst error = ref('');\r\n\r\n// Computed\r\nconst isEditMode = computed(() => !!editOrderId.value);\r\nconst currentOrderId = computed(() => orderId.value || editOrderId.value);\r\nconst currentOrderStatus = computed(() => {\r\n  if (checkoutStore.currentOrder?.status) {\r\n    return checkoutStore.currentOrder.status;\r\n  }\r\n  return orderId.value ? '进行中' : '未创建';\r\n});\r\n\r\nconst canSubmitOrder = computed(() => {\r\n  return (currentCustomerId.value && currentTableId.value && currentPeopleCount.value) || \r\n         (isEditMode.value && editOrderId.value);\r\n});\r\n\r\nconst totalAmount = computed(() => {\r\n  return currentSelectedDishes.value.reduce((total, dish) => {\r\n    return total + ((dish.price || 0) * dish.quantity);\r\n  }, 0);\r\n});\r\n\r\nonMounted(async () => {\r\n  await fetchMenuList();\r\n});\r\n\r\n// Watch for store changes\r\nwatch(() => checkoutStore.currentOrder, (newOrder) => {\r\n  if (newOrder) {\r\n    loadOrderData(newOrder);\r\n  }\r\n}, { deep: true });\r\n\r\nasync function fetchMenuList() {\r\n  try {\r\n    const res = await getMenuList();\r\n    menuList.value = Array.isArray(res) ? res : (res.data || []);\r\n  } catch (err) {\r\n    error.value = err;\r\n  }\r\n}\r\n\r\n// Order Creation\r\nasync function handleCreateOrder() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    await checkoutStore.createNewOrder({\r\n      tableId: Number(currentTableId.value),\r\n      customerId: Number(currentCustomerId.value),\r\n      peopleCount: Number(currentPeopleCount.value)\r\n    });\r\n    \r\n    orderId.value = checkoutStore.currentOrder?.orderId || '';\r\n    \r\n    if (orderId.value) {\r\n      ElMessage.success(`订单创建成功，ID: ${orderId.value}`);\r\n      // 清空表单\r\n      currentCustomerId.value = '';\r\n      currentTableId.value = '';\r\n      currentPeopleCount.value = '';\r\n    }\r\n  } catch (err) {\r\n    error.value = checkoutStore.error || err;\r\n    ElMessage.error(error.value);\r\n  }\r\n}\r\n\r\n// Dish Operations\r\nfunction handleDishDblClick(row) {\r\n  if (!currentOrderId.value) {\r\n    ElMessage.warning('请先创建或查询订单');\r\n    return;\r\n  }\r\n  \r\n  const existingDish = currentSelectedDishes.value.find(d => d.dishId === row.dishId);\r\n  \r\n  if (existingDish) {\r\n    handleUpdateQuantity(existingDish, existingDish.quantity + 1);\r\n    return;\r\n  }\r\n  \r\n  // 添加新菜品\r\n  const newDish = {\r\n    dishId: row.dishId,\r\n    dishName: row.dishName,\r\n    price: row.price,\r\n    quantity: 1\r\n  };\r\n  \r\n  checkoutStore.addDish(currentOrderId.value, row.dishId, 1)\r\n    .then(() => {\r\n      currentSelectedDishes.value.push(newDish);\r\n      ElMessage.success(`已添加菜品: ${row.dishName}`);\r\n    })\r\n    .catch(err => {\r\n      error.value = err;\r\n      ElMessage.error(error.value);\r\n    });\r\n}\r\n\r\nfunction removeDish(row) {\r\n  if (!currentOrderId.value) return;\r\n  \r\n  checkoutStore.removeDish(currentOrderId.value, row.dishId)\r\n    .then(() => {\r\n      currentSelectedDishes.value = currentSelectedDishes.value.filter(d => d.dishId !== row.dishId);\r\n      ElMessage.success(`已移除菜品: ${row.dishName}`);\r\n    })\r\n    .catch(err => {\r\n      error.value = err;\r\n      ElMessage.error(error.value);\r\n    });\r\n}\r\n\r\nfunction handleUpdateQuantity(row, quantity) {\r\n  if (!currentOrderId.value) return;\r\n  \r\n  checkoutStore.updateDishQuantity(currentOrderId.value, row.dishId, quantity)\r\n    .then(() => {\r\n      row.quantity = quantity;\r\n      ElMessage.success('数量更新成功');\r\n    })\r\n    .catch(err => {\r\n      error.value = err;\r\n      ElMessage.error(error.value);\r\n    });\r\n}\r\n\r\nfunction handleExitEdit() {\r\n  checkoutStore.clearCurrentOrder();\r\n  resetForm();\r\n}\r\n\r\nfunction resetForm() {\r\n  orderId.value = '';\r\n  editOrderId.value = '';\r\n  currentCustomerId.value = '';\r\n  currentTableId.value = '';\r\n  currentPeopleCount.value = '';\r\n  currentSelectedDishes.value = [];\r\n}\r\n\r\n// Order Query\r\nasync function handleQueryOrderByTableId() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    await checkoutStore.getOrderByTableId(queryTableId.value);\r\n    if (checkoutStore.currentOrder) {\r\n      loadOrderData(checkoutStore.currentOrder);\r\n      ElMessage.success('查询成功');\r\n    } else {\r\n      ElMessage.warning('未找到相关订单');\r\n    }\r\n  } catch (err) {\r\n    error.value = checkoutStore.error || err;\r\n    ElMessage.error(error.value);\r\n  }\r\n}\r\n\r\nasync function handleQueryOrderById() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    await checkoutStore.getOrderById(queryOrderId.value);\r\n    if (checkoutStore.currentOrder) {\r\n      loadOrderData(checkoutStore.currentOrder);\r\n      ElMessage.success('查询成功');\r\n    } else {\r\n      ElMessage.warning('未找到相关订单');\r\n    }\r\n  } catch (err) {\r\n    error.value = checkoutStore.error || err;\r\n    ElMessage.error(error.value);\r\n  }\r\n}\r\n\r\nfunction loadOrderData(orderData) {\r\n  editOrderId.value = orderData.orderId || '';\r\n  currentCustomerId.value = orderData.customerId || '';\r\n  currentTableId.value = orderData.tableId || '';\r\n  currentPeopleCount.value = orderData.peopleCount || '';\r\n  \r\n  // 处理菜品数据\r\n  if (orderData.dishes) {\r\n    if (typeof orderData.dishes === 'string') {\r\n      try {\r\n        currentSelectedDishes.value = JSON.parse(orderData.dishes);\r\n      } catch {\r\n        // 如果是简单的菜品名称字符串，转换为数组格式\r\n        currentSelectedDishes.value = [{\r\n          dishId: 0,\r\n          dishName: orderData.dishes,\r\n          price: 0,\r\n          quantity: 1\r\n        }];\r\n      }\r\n    } else if (Array.isArray(orderData.dishes)) {\r\n      currentSelectedDishes.value = [...orderData.dishes];\r\n    } else {\r\n      currentSelectedDishes.value = [];\r\n    }\r\n  } else {\r\n    currentSelectedDishes.value = [];\r\n  }\r\n}\r\n\r\n// Order Editing\r\nasync function handleEditSaveOrder() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    // 这里需要根据实际的API来更新订单\r\n    ElMessage.success('订单更新成功');\r\n    handleExitEdit();\r\n  } catch (err) {\r\n    error.value = checkoutStore.error || err;\r\n    ElMessage.error(error.value);\r\n  }\r\n}\r\n\r\n// Checkout\r\nasync function handleCheckout() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    await checkoutStore.checkout(checkoutOrderId.value);\r\n    ElMessage.success('结账成功');\r\n    checkoutOrderId.value = '';\r\n  } catch (err) {\r\n    error.value = checkoutStore.error || err;\r\n    ElMessage.error(error.value);\r\n  }\r\n}\r\n\r\n// Row class name for table highlighting\r\nfunction getRowClassName() {\r\n  return 'hover:bg-blue-50 cursor-pointer';\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.checkout-form-container {\r\n  font-family: 'Inter', sans-serif;\r\n}\r\n\r\n.menu-table :deep(.el-table__row) {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.menu-table :deep(.el-table__row:hover) {\r\n  background-color: #f0f9ff !important;\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.menu-table :deep(.el-table__header) {\r\n  background-color: #f8fafc;\r\n}\r\n\r\n.el-button {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.el-button:hover {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.el-input-number {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.el-input-number:hover {\r\n  transform: scale(1.02);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}