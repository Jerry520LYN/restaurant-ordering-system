{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport LoginView from '@/views/auth/LoginView.vue';\nimport DashboardView from '@/views/DashboardView.vue';\nimport { useAuthStore } from '@/stores/auth';\nconst routes = [{\n  path: '/',\n  name: 'login',\n  component: LoginView,\n  meta: {\n    layout: 'empty',\n    requiresGuest: true\n  }\n}, {\n  path: '/dashboard',\n  name: 'dashboard',\n  component: DashboardView,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const authStore = useAuthStore();\n  if (to.meta.requiresAuth && !authStore.isAuthenticated) {\n    next('/');\n  } else if (to.meta.requiresGuest && authStore.isAuthenticated) {\n    next('/dashboard');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginView","DashboardView","useAuthStore","routes","path","name","component","meta","layout","requiresGuest","requiresAuth","router","history","beforeEach","to","from","next","authStore","isAuthenticated"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport LoginView from '@/views/auth/LoginView.vue'\r\nimport DashboardView from '@/views/DashboardView.vue'\r\nimport { useAuthStore } from '@/stores/auth'\r\n\r\nconst routes = [\r\n  \r\n  {\r\n    path: '/',\r\n    name: 'login',\r\n    component: LoginView,\r\n    meta: { layout: 'empty', requiresGuest: true }\r\n  },\r\n  {\r\n    path: '/dashboard',\r\n    name: 'dashboard',\r\n    component: DashboardView,\r\n    meta: { requiresAuth: true }\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const authStore = useAuthStore()\r\n  \r\n  if (to.meta.requiresAuth && !authStore.isAuthenticated) {\r\n    next('/')\r\n  } else if (to.meta.requiresGuest && authStore.isAuthenticated) {\r\n    next('/dashboard')\r\n  } else {\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,aAAa,MAAM,2BAA2B;AACrD,SAASC,YAAY,QAAQ,eAAe;AAE5C,MAAMC,MAAM,GAAG,CAEb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN,SAAS;EACpBO,IAAI,EAAE;IAAEC,MAAM,EAAE,OAAO;IAAEC,aAAa,EAAE;EAAK;AAC/C,CAAC,EACD;EACEL,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEL,aAAa;EACxBM,IAAI,EAAE;IAAEG,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,MAAMC,MAAM,GAAGb,YAAY,CAAC;EAC1Bc,OAAO,EAAEb,gBAAgB,CAAC,CAAC;EAC3BI;AACF,CAAC,CAAC;AAEFQ,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,SAAS,GAAGf,YAAY,CAAC,CAAC;EAEhC,IAAIY,EAAE,CAACP,IAAI,CAACG,YAAY,IAAI,CAACO,SAAS,CAACC,eAAe,EAAE;IACtDF,IAAI,CAAC,GAAG,CAAC;EACX,CAAC,MAAM,IAAIF,EAAE,CAACP,IAAI,CAACE,aAAa,IAAIQ,SAAS,CAACC,eAAe,EAAE;IAC7DF,IAAI,CAAC,YAAY,CAAC;EACpB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}