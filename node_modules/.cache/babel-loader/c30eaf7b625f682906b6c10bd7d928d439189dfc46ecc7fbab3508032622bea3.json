{"ast":null,"code":"import { ref, watch } from 'vue';\nimport { useMenuStore } from '@/stores/menu';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'MenuUpdateCard',\n  props: {\n    dish: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['update-success', 'close'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const form = ref({\n      dishId: '',\n      dishName: '',\n      price: '',\n      description: '',\n      imageUrl: ''\n    });\n    watch(() => props.dish, newDish => {\n      if (newDish) {\n        form.value = {\n          dishId: newDish.dishId,\n          dishName: newDish.dishName || newDish.dish_name || '',\n          price: newDish.price || '',\n          description: newDish.description || '',\n          imageUrl: newDish.imageUrl || newDish.image_url || ''\n        };\n      }\n    }, {\n      immediate: true,\n      deep: true\n    });\n    const handleSubmit = async () => {\n      try {\n        // 假设 store 中有 updateDish action\n        const menuStore = useMenuStore();\n        await menuStore.updateDish(form.value);\n        ElMessage.success('更新操作已发送（请连接后端API）');\n        emit('update-success');\n      } catch (error) {\n        ElMessage.error('更新失败: ' + (error.message || '未知错误'));\n      }\n    };\n    const handleCancel = () => {\n      emit('close');\n    };\n    const __returned__ = {\n      props,\n      emit,\n      form,\n      handleSubmit,\n      handleCancel,\n      ref,\n      watch,\n      get useMenuStore() {\n        return useMenuStore;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","useMenuStore","ElMessage","props","__props","emit","__emit","form","dishId","dishName","price","description","imageUrl","dish","newDish","value","dish_name","image_url","immediate","deep","handleSubmit","menuStore","updateDish","success","error","message","handleCancel"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/components/menu/MenuUpdateCard.vue"],"sourcesContent":["<template>\r\n    <el-form :model=\"form\" label-width=\"80px\" ref=\"formRef\">\r\n        <el-form-item label=\"菜品名称\" prop=\"dishName\">\r\n            <el-input v-model=\"form.dishName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\" prop=\"price\">\r\n            <el-input v-model=\"form.price\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"description\">\r\n            <el-input v-model=\"form.description\" type=\"textarea\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"图片URL\" prop=\"imageUrl\">\r\n            <el-input v-model=\"form.imageUrl\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleSubmit\">更新</el-button>\r\n            <el-button @click=\"handleCancel\">取消</el-button>\r\n        </el-form-item>\r\n    </el-form>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, defineProps, defineEmits } from 'vue';\r\nimport { useMenuStore } from '@/stores/menu';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nconst props = defineProps({\r\n    dish: {\r\n        type: Object,\r\n        required: true\r\n    }\r\n});\r\n\r\nconst emit = defineEmits(['update-success', 'close']);\r\n\r\nconst form = ref({\r\n    dishId: '',\r\n    dishName: '',\r\n    price: '',\r\n    description: '',\r\n    imageUrl: ''\r\n});\r\n\r\nwatch(() => props.dish, (newDish) => {\r\n    if (newDish) {\r\n        form.value = {\r\n            dishId: newDish.dishId,\r\n            dishName: newDish.dishName || newDish.dish_name || '',\r\n            price: newDish.price || '',\r\n            description: newDish.description || '',\r\n            imageUrl: newDish.imageUrl || newDish.image_url || ''\r\n        };\r\n    }\r\n}, { immediate: true, deep: true });\r\n\r\n\r\nconst handleSubmit = async () => {\r\n    try {\r\n        // 假设 store 中有 updateDish action\r\n        const menuStore = useMenuStore();\r\n        await menuStore.updateDish(form.value);\r\n        ElMessage.success('更新操作已发送（请连接后端API）');\r\n        emit('update-success'); \r\n    } catch (error) {\r\n        ElMessage.error('更新失败: ' + (error.message || '未知错误'));\r\n    }\r\n};\r\n\r\nconst handleCancel = () => {\r\n    emit('close');\r\n};\r\n</script>"],"mappings":"AAsBA,SAASA,GAAG,EAAEC,KAA+B,QAAQ,KAAK;AAC1D,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,SAAS,QAAQ,cAAc;;;;;;;;;;;;;;;IAExC,MAAMC,KAAK,GAAGC,OAKZ;IAEF,MAAMC,IAAI,GAAGC,MAAwC;IAErD,MAAMC,IAAI,GAAGR,GAAG,CAAC;MACbS,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE;IACd,CAAC,CAAC;IAEFZ,KAAK,CAAC,MAAMG,KAAK,CAACU,IAAI,EAAGC,OAAO,IAAK;MACjC,IAAIA,OAAO,EAAE;QACTP,IAAI,CAACQ,KAAK,GAAG;UACTP,MAAM,EAAEM,OAAO,CAACN,MAAM;UACtBC,QAAQ,EAAEK,OAAO,CAACL,QAAQ,IAAIK,OAAO,CAACE,SAAS,IAAI,EAAE;UACrDN,KAAK,EAAEI,OAAO,CAACJ,KAAK,IAAI,EAAE;UAC1BC,WAAW,EAAEG,OAAO,CAACH,WAAW,IAAI,EAAE;UACtCC,QAAQ,EAAEE,OAAO,CAACF,QAAQ,IAAIE,OAAO,CAACG,SAAS,IAAI;QACvD,CAAC;MACL;IACJ,CAAC,EAAE;MAAEC,SAAS,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAK,CAAC,CAAC;IAGnC,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA;QACA,MAAMC,SAAS,GAAGpB,YAAY,CAAC,CAAC;QAChC,MAAMoB,SAAS,CAACC,UAAU,CAACf,IAAI,CAACQ,KAAK,CAAC;QACtCb,SAAS,CAACqB,OAAO,CAAC,mBAAmB,CAAC;QACtClB,IAAI,CAAC,gBAAgB,CAAC;MAC1B,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACZtB,SAAS,CAACsB,KAAK,CAAC,QAAQ,IAAIA,KAAK,CAACC,OAAO,IAAI,MAAM,CAAC,CAAC;MACzD;IACJ,CAAC;IAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACvBrB,IAAI,CAAC,OAAO,CAAC;IACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}