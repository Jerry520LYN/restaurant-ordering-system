{"ast":null,"code":"//这里严格参照。/api/menu.js的格式，利用request.js中的instance，参考CheckoutController以及后端的数据结构\n\nimport instance from '@/utils/request';\nimport { useAuthStore } from '@/stores/auth';\n\n// 创建订单\nexport const createOrder = async ({\n  tableId,\n  customerId,\n  peopleCount\n}) => {\n  try {\n    const authStore = useAuthStore();\n    const token = authStore.token;\n    const params = {\n      authenticity: token,\n      tableId,\n      customerId,\n      peopleCount\n    };\n    const response = await instance.post('/checkout/create-order', null, {\n      params\n    });\n    return response;\n  } catch (error) {\n    throw error.response?.data?.message || '创建订单失败';\n  }\n};\n\n// 添加菜品到订单\nexport const addDishToOrder = async ({\n  orderId,\n  dishId,\n  quantity\n}) => {\n  try {\n    const authStore = useAuthStore();\n    const token = authStore.token;\n    const params = {\n      authenticity: token,\n      orderId,\n      dishId,\n      quantity\n    };\n    const response = await instance.post('/checkout/add-dish', null, {\n      params\n    });\n    return response;\n  } catch (error) {\n    throw error.response?.data?.message || '添加菜品失败';\n  }\n};\n\n// 从订单中移除菜品\nexport const removeDishFromOrder = async ({\n  orderId,\n  dishId\n}) => {\n  try {\n    const authStore = useAuthStore();\n    const token = authStore.token;\n    const params = {\n      authenticity: token,\n      orderId,\n      dishId\n    };\n    const response = await instance.delete('/checkout/remove-dish', {\n      params\n    });\n    return response;\n  } catch (error) {\n    throw error.response?.data?.message || '移除菜品失败';\n  }\n};\n\n// 修改菜品数量\nexport const updateDishQuantity = async ({\n  orderId,\n  dishId,\n  quantity\n}) => {\n  try {\n    const authStore = useAuthStore();\n    const token = authStore.token;\n    const params = {\n      authenticity: token,\n      orderId,\n      dishId,\n      quantity\n    };\n    const response = await instance.put('/checkout/update-dish-quantity', null, {\n      params\n    });\n    return response;\n  } catch (error) {\n    throw error.response?.data?.message || '修改菜品数量失败';\n  }\n};\n\n// 结账\nexport const checkoutOrder = async orderId => {\n  try {\n    const authStore = useAuthStore();\n    const token = authStore.token;\n    const params = {\n      authenticity: token,\n      orderId\n    };\n    const response = await instance.post('/checkout/checkout', null, {\n      params\n    });\n    return response;\n  } catch (error) {\n    throw error.response?.data?.message || '结账失败';\n  }\n};\n\n// 根据订单ID获取订单信息\nexport const getOrderById = async orderId => {\n  try {\n    const authStore = useAuthStore();\n    const token = authStore.token;\n    const params = {\n      authenticity: token,\n      orderId\n    };\n    const response = await instance.get('/orders/getOrderByID', {\n      params\n    });\n    return response;\n  } catch (error) {\n    throw error.response?.data?.message || '根据订单ID获取订单信息失败';\n  }\n};\n\n// 根据 tableId 查询订单和菜品\nexport const getOrderIdWithDishId = async tableId => {\n  try {\n    const authStore = useAuthStore();\n    const token = authStore.token;\n    const params = {\n      authenticity: token\n    };\n    const response = await instance.post(`/checkout/table/${tableId}`, null, {\n      params\n    });\n    return response;\n  } catch (error) {\n    throw error.response?.data?.message || '根据餐桌查询订单失败';\n  }\n};\n\n// 根据 orderId 查询订单菜品信息\nexport const getOrderDetails = async orderId => {\n  try {\n    const authStore = useAuthStore();\n    const token = authStore.token;\n    const params = {\n      authenticity: token\n    };\n    const response = await instance.get(`/checkout/order-details/${orderId}`, {\n      params\n    });\n    return response;\n  } catch (error) {\n    throw error.response?.data?.message || '获取订单菜品信息失败';\n  }\n};\n\n// 获取所有订单详情（order_summary 视图）\nexport const getAllOrdersWithDetails = async () => {\n  try {\n    const authStore = useAuthStore();\n    const token = authStore.token;\n    const params = {\n      authenticity: token\n    };\n    const response = await instance.get('/orders/allWithDetails', {\n      params\n    });\n    return response;\n  } catch (error) {\n    throw error.response?.data?.message || '获取所有订单详情失败';\n  }\n};\n\n// 获取热门菜品\nexport const getPopularDishes = async (startTime, endTime) => {\n  try {\n    const authStore = useAuthStore();\n    const token = authStore.token;\n    const params = {\n      authenticity: token,\n      startTime,\n      endTime\n    };\n    const response = await instance.get('/checkout/popular-dishes', {\n      params\n    });\n    return response;\n  } catch (error) {\n    throw error.response?.data?.message || '获取热门菜品失败';\n  }\n};\n\n// 获取营收统计\nexport const getRevenue = async (startTime, endTime) => {\n  try {\n    const authStore = useAuthStore();\n    const token = authStore.token;\n    const params = {\n      authenticity: token,\n      startTime,\n      endTime\n    };\n    const response = await instance.get('/checkout/revenue', {\n      params\n    });\n    return response;\n  } catch (error) {\n    throw error.response?.data?.message || '获取营收统计失败';\n  }\n};","map":{"version":3,"names":["instance","useAuthStore","createOrder","tableId","customerId","peopleCount","authStore","token","params","authenticity","response","post","error","data","message","addDishToOrder","orderId","dishId","quantity","removeDishFromOrder","delete","updateDishQuantity","put","checkoutOrder","getOrderById","get","getOrderIdWithDishId","getOrderDetails","getAllOrdersWithDetails","getPopularDishes","startTime","endTime","getRevenue"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/api/checkout.js"],"sourcesContent":["//这里严格参照。/api/menu.js的格式，利用request.js中的instance，参考CheckoutController以及后端的数据结构\r\n\r\nimport instance from '@/utils/request';\r\nimport { useAuthStore } from '@/stores/auth';\r\n\r\n// 创建订单\r\nexport const createOrder = async ({ tableId, customerId, peopleCount }) => {\r\n    try {\r\n        const authStore = useAuthStore();\r\n        const token = authStore.token;\r\n        const params = {\r\n            authenticity: token,\r\n            tableId,\r\n            customerId,\r\n            peopleCount\r\n        };\r\n        const response = await instance.post('/checkout/create-order', null, { params });\r\n        return response;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '创建订单失败';\r\n    }\r\n};\r\n\r\n// 添加菜品到订单\r\nexport const addDishToOrder = async ({ orderId, dishId, quantity }) => {\r\n    try {\r\n        const authStore = useAuthStore();\r\n        const token = authStore.token;\r\n        const params = {\r\n            authenticity: token,\r\n            orderId,\r\n            dishId,\r\n            quantity\r\n        };\r\n        const response = await instance.post('/checkout/add-dish', null, { params });\r\n        return response;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '添加菜品失败';\r\n    }\r\n};\r\n\r\n// 从订单中移除菜品\r\nexport const removeDishFromOrder = async ({ orderId, dishId }) => {\r\n    try {\r\n        const authStore = useAuthStore();\r\n        const token = authStore.token;\r\n        const params = {\r\n            authenticity: token,\r\n            orderId,\r\n            dishId\r\n        };\r\n        const response = await instance.delete('/checkout/remove-dish', { params });\r\n        return response;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '移除菜品失败';\r\n    }\r\n};\r\n\r\n// 修改菜品数量\r\nexport const updateDishQuantity = async ({ orderId, dishId, quantity }) => {\r\n    try {\r\n        const authStore = useAuthStore();\r\n        const token = authStore.token;\r\n        const params = {\r\n            authenticity: token,\r\n            orderId,\r\n            dishId,\r\n            quantity\r\n        };\r\n        const response = await instance.put('/checkout/update-dish-quantity', null, { params });\r\n        return response;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '修改菜品数量失败';\r\n    }\r\n};\r\n\r\n// 结账\r\nexport const checkoutOrder = async (orderId) => {\r\n    try {\r\n        const authStore = useAuthStore();\r\n        const token = authStore.token;\r\n        const params = {\r\n            authenticity: token,\r\n            orderId\r\n        };\r\n        const response = await instance.post('/checkout/checkout', null, { params });\r\n        return response;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '结账失败';\r\n    }\r\n};\r\n\r\n// 根据订单ID获取订单信息\r\nexport const getOrderById = async (orderId) => {\r\n    try {\r\n        const authStore = useAuthStore();\r\n        const token = authStore.token;\r\n        const params = {\r\n            authenticity: token,\r\n            orderId\r\n        };\r\n        const response = await instance.get('/orders/getOrderByID', { params });\r\n        return response;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '根据订单ID获取订单信息失败';\r\n    }\r\n};\r\n\r\n// 根据 tableId 查询订单和菜品\r\nexport const getOrderIdWithDishId = async (tableId) => {\r\n    try {\r\n        const authStore = useAuthStore();\r\n        const token = authStore.token;\r\n        const params = {\r\n            authenticity: token\r\n        };\r\n        const response = await instance.post(`/checkout/table/${tableId}`, null, { params });\r\n        return response;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '根据餐桌查询订单失败';\r\n    }\r\n};\r\n\r\n// 根据 orderId 查询订单菜品信息\r\nexport const getOrderDetails = async (orderId) => {\r\n    try {\r\n        const authStore = useAuthStore();\r\n        const token = authStore.token;\r\n        const params = {\r\n            authenticity: token\r\n        };\r\n        const response = await instance.get(`/checkout/order-details/${orderId}`, { params });\r\n        return response;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '获取订单菜品信息失败';\r\n    }\r\n};\r\n\r\n// 获取所有订单详情（order_summary 视图）\r\nexport const getAllOrdersWithDetails = async () => {\r\n    try {\r\n        const authStore = useAuthStore();\r\n        const token = authStore.token;\r\n        const params = {\r\n            authenticity: token\r\n        };\r\n        const response = await instance.get('/orders/allWithDetails', { params });\r\n        return response;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '获取所有订单详情失败';\r\n    }\r\n};\r\n\r\n// 获取热门菜品\r\nexport const getPopularDishes = async (startTime, endTime) => {\r\n    try {\r\n        const authStore = useAuthStore();\r\n        const token = authStore.token;\r\n        const params = {\r\n            authenticity: token,\r\n            startTime,\r\n            endTime\r\n        };\r\n        const response = await instance.get('/checkout/popular-dishes', { params });\r\n        return response;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '获取热门菜品失败';\r\n    }\r\n};\r\n\r\n// 获取营收统计\r\nexport const getRevenue = async (startTime, endTime) => {\r\n    try {\r\n        const authStore = useAuthStore();\r\n        const token = authStore.token;\r\n        const params = {\r\n            authenticity: token,\r\n            startTime,\r\n            endTime\r\n        };\r\n        const response = await instance.get('/checkout/revenue', { params });\r\n        return response;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '获取营收统计失败';\r\n    }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,QAAQ,MAAM,iBAAiB;AACtC,SAASC,YAAY,QAAQ,eAAe;;AAE5C;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAY,CAAC,KAAK;EACvE,IAAI;IACA,MAAMC,SAAS,GAAGL,YAAY,CAAC,CAAC;IAChC,MAAMM,KAAK,GAAGD,SAAS,CAACC,KAAK;IAC7B,MAAMC,MAAM,GAAG;MACXC,YAAY,EAAEF,KAAK;MACnBJ,OAAO;MACPC,UAAU;MACVC;IACJ,CAAC;IACD,MAAMK,QAAQ,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,wBAAwB,EAAE,IAAI,EAAE;MAAEH;IAAO,CAAC,CAAC;IAChF,OAAOE,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACF,QAAQ,EAAEG,IAAI,EAAEC,OAAO,IAAI,QAAQ;EACnD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EACnE,IAAI;IACA,MAAMZ,SAAS,GAAGL,YAAY,CAAC,CAAC;IAChC,MAAMM,KAAK,GAAGD,SAAS,CAACC,KAAK;IAC7B,MAAMC,MAAM,GAAG;MACXC,YAAY,EAAEF,KAAK;MACnBS,OAAO;MACPC,MAAM;MACNC;IACJ,CAAC;IACD,MAAMR,QAAQ,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,oBAAoB,EAAE,IAAI,EAAE;MAAEH;IAAO,CAAC,CAAC;IAC5E,OAAOE,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACF,QAAQ,EAAEG,IAAI,EAAEC,OAAO,IAAI,QAAQ;EACnD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,mBAAmB,GAAG,MAAAA,CAAO;EAAEH,OAAO;EAAEC;AAAO,CAAC,KAAK;EAC9D,IAAI;IACA,MAAMX,SAAS,GAAGL,YAAY,CAAC,CAAC;IAChC,MAAMM,KAAK,GAAGD,SAAS,CAACC,KAAK;IAC7B,MAAMC,MAAM,GAAG;MACXC,YAAY,EAAEF,KAAK;MACnBS,OAAO;MACPC;IACJ,CAAC;IACD,MAAMP,QAAQ,GAAG,MAAMV,QAAQ,CAACoB,MAAM,CAAC,uBAAuB,EAAE;MAAEZ;IAAO,CAAC,CAAC;IAC3E,OAAOE,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACF,QAAQ,EAAEG,IAAI,EAAEC,OAAO,IAAI,QAAQ;EACnD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMO,kBAAkB,GAAG,MAAAA,CAAO;EAAEL,OAAO;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EACvE,IAAI;IACA,MAAMZ,SAAS,GAAGL,YAAY,CAAC,CAAC;IAChC,MAAMM,KAAK,GAAGD,SAAS,CAACC,KAAK;IAC7B,MAAMC,MAAM,GAAG;MACXC,YAAY,EAAEF,KAAK;MACnBS,OAAO;MACPC,MAAM;MACNC;IACJ,CAAC;IACD,MAAMR,QAAQ,GAAG,MAAMV,QAAQ,CAACsB,GAAG,CAAC,gCAAgC,EAAE,IAAI,EAAE;MAAEd;IAAO,CAAC,CAAC;IACvF,OAAOE,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACF,QAAQ,EAAEG,IAAI,EAAEC,OAAO,IAAI,UAAU;EACrD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMS,aAAa,GAAG,MAAOP,OAAO,IAAK;EAC5C,IAAI;IACA,MAAMV,SAAS,GAAGL,YAAY,CAAC,CAAC;IAChC,MAAMM,KAAK,GAAGD,SAAS,CAACC,KAAK;IAC7B,MAAMC,MAAM,GAAG;MACXC,YAAY,EAAEF,KAAK;MACnBS;IACJ,CAAC;IACD,MAAMN,QAAQ,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,oBAAoB,EAAE,IAAI,EAAE;MAAEH;IAAO,CAAC,CAAC;IAC5E,OAAOE,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACF,QAAQ,EAAEG,IAAI,EAAEC,OAAO,IAAI,MAAM;EACjD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMU,YAAY,GAAG,MAAOR,OAAO,IAAK;EAC3C,IAAI;IACA,MAAMV,SAAS,GAAGL,YAAY,CAAC,CAAC;IAChC,MAAMM,KAAK,GAAGD,SAAS,CAACC,KAAK;IAC7B,MAAMC,MAAM,GAAG;MACXC,YAAY,EAAEF,KAAK;MACnBS;IACJ,CAAC;IACD,MAAMN,QAAQ,GAAG,MAAMV,QAAQ,CAACyB,GAAG,CAAC,sBAAsB,EAAE;MAAEjB;IAAO,CAAC,CAAC;IACvE,OAAOE,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACF,QAAQ,EAAEG,IAAI,EAAEC,OAAO,IAAI,gBAAgB;EAC3D;AACJ,CAAC;;AAED;AACA,OAAO,MAAMY,oBAAoB,GAAG,MAAOvB,OAAO,IAAK;EACnD,IAAI;IACA,MAAMG,SAAS,GAAGL,YAAY,CAAC,CAAC;IAChC,MAAMM,KAAK,GAAGD,SAAS,CAACC,KAAK;IAC7B,MAAMC,MAAM,GAAG;MACXC,YAAY,EAAEF;IAClB,CAAC;IACD,MAAMG,QAAQ,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,mBAAmBR,OAAO,EAAE,EAAE,IAAI,EAAE;MAAEK;IAAO,CAAC,CAAC;IACpF,OAAOE,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACF,QAAQ,EAAEG,IAAI,EAAEC,OAAO,IAAI,YAAY;EACvD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMa,eAAe,GAAG,MAAOX,OAAO,IAAK;EAC9C,IAAI;IACA,MAAMV,SAAS,GAAGL,YAAY,CAAC,CAAC;IAChC,MAAMM,KAAK,GAAGD,SAAS,CAACC,KAAK;IAC7B,MAAMC,MAAM,GAAG;MACXC,YAAY,EAAEF;IAClB,CAAC;IACD,MAAMG,QAAQ,GAAG,MAAMV,QAAQ,CAACyB,GAAG,CAAC,2BAA2BT,OAAO,EAAE,EAAE;MAAER;IAAO,CAAC,CAAC;IACrF,OAAOE,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACF,QAAQ,EAAEG,IAAI,EAAEC,OAAO,IAAI,YAAY;EACvD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMc,uBAAuB,GAAG,MAAAA,CAAA,KAAY;EAC/C,IAAI;IACA,MAAMtB,SAAS,GAAGL,YAAY,CAAC,CAAC;IAChC,MAAMM,KAAK,GAAGD,SAAS,CAACC,KAAK;IAC7B,MAAMC,MAAM,GAAG;MACXC,YAAY,EAAEF;IAClB,CAAC;IACD,MAAMG,QAAQ,GAAG,MAAMV,QAAQ,CAACyB,GAAG,CAAC,wBAAwB,EAAE;MAAEjB;IAAO,CAAC,CAAC;IACzE,OAAOE,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACF,QAAQ,EAAEG,IAAI,EAAEC,OAAO,IAAI,YAAY;EACvD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMe,gBAAgB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,OAAO,KAAK;EAC1D,IAAI;IACA,MAAMzB,SAAS,GAAGL,YAAY,CAAC,CAAC;IAChC,MAAMM,KAAK,GAAGD,SAAS,CAACC,KAAK;IAC7B,MAAMC,MAAM,GAAG;MACXC,YAAY,EAAEF,KAAK;MACnBuB,SAAS;MACTC;IACJ,CAAC;IACD,MAAMrB,QAAQ,GAAG,MAAMV,QAAQ,CAACyB,GAAG,CAAC,0BAA0B,EAAE;MAAEjB;IAAO,CAAC,CAAC;IAC3E,OAAOE,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACF,QAAQ,EAAEG,IAAI,EAAEC,OAAO,IAAI,UAAU;EACrD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMkB,UAAU,GAAG,MAAAA,CAAOF,SAAS,EAAEC,OAAO,KAAK;EACpD,IAAI;IACA,MAAMzB,SAAS,GAAGL,YAAY,CAAC,CAAC;IAChC,MAAMM,KAAK,GAAGD,SAAS,CAACC,KAAK;IAC7B,MAAMC,MAAM,GAAG;MACXC,YAAY,EAAEF,KAAK;MACnBuB,SAAS;MACTC;IACJ,CAAC;IACD,MAAMrB,QAAQ,GAAG,MAAMV,QAAQ,CAACyB,GAAG,CAAC,mBAAmB,EAAE;MAAEjB;IAAO,CAAC,CAAC;IACpE,OAAOE,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACF,QAAQ,EAAEG,IAAI,EAAEC,OAAO,IAAI,UAAU;EACrD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}