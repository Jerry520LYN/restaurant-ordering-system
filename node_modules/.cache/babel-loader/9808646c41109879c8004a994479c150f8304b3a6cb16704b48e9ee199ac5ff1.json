{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { defineStore } from 'pinia';\nimport { getOrderList, getOrderSummaryList, deleteOrderById, getOrderById, addDishToOrder } from '@/api/order';\nimport { ElMessage } from 'element-plus';\nexport const useOrderStore = defineStore('order', {\n  state: () => ({\n    orderList: [],\n    summaryList: [],\n    loading: false,\n    error: null\n  }),\n  actions: {\n    async fetchOrderList() {\n      this.loading = true;\n      try {\n        this.orderList = await getOrderList();\n        this.error = null;\n      } catch (err) {\n        this.error = err.message || '获取订单列表失败';\n        ElMessage.error(this.error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async fetchOrderSummaryList() {\n      this.loading = true;\n      try {\n        this.summaryList = await getOrderSummaryList();\n        this.error = null;\n      } catch (err) {\n        this.error = err.message || '获取订单汇总失败';\n        ElMessage.error(this.error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async deleteOrder(orderId) {\n      try {\n        await deleteOrderById(orderId);\n        ElMessage.success('删除订单成功');\n        await this.fetchOrderList();\n      } catch (err) {\n        ElMessage.error(err.message || '删除订单失败');\n      }\n    },\n    // 时间段筛选和营收统计在前端处理\n    getOrdersByDateRange(startDate, endDate) {\n      return this.orderList.filter(order => {\n        const date = order.orderDate || order.checkoutTime || order.createTime;\n        return date >= startDate && date <= endDate;\n      });\n    },\n    getRevenueByDateRange(startDate, endDate) {\n      const orders = this.getOrdersByDateRange(startDate, endDate);\n      return orders.reduce((sum, o) => sum + Number(o.totalAmount || o.amount || 0), 0);\n    },\n    async editOrderDishes(orderId, dishId, quantity) {\n      try {\n        await addDishToOrder({\n          orderId,\n          dishId,\n          quantity\n        });\n        ElMessage.success('添加菜品成功');\n        await this.fetchOrderList();\n      } catch (err) {\n        ElMessage.error(err.message || '添加菜品失败');\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","getOrderList","getOrderSummaryList","deleteOrderById","getOrderById","addDishToOrder","ElMessage","useOrderStore","state","orderList","summaryList","loading","error","actions","fetchOrderList","err","message","fetchOrderSummaryList","deleteOrder","orderId","success","getOrdersByDateRange","startDate","endDate","filter","order","date","orderDate","checkoutTime","createTime","getRevenueByDateRange","orders","reduce","sum","o","Number","totalAmount","amount","editOrderDishes","dishId","quantity"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/stores/order.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport { getOrderList, getOrderSummaryList, deleteOrderById, getOrderById, addDishToOrder } from '@/api/order';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nexport const useOrderStore = defineStore('order', {\r\n  state: () => ({\r\n    orderList: [],\r\n    summaryList: [],\r\n    loading: false,\r\n    error: null\r\n  }),\r\n  actions: {\r\n    async fetchOrderList() {\r\n      this.loading = true;\r\n      try {\r\n        this.orderList = await getOrderList();\r\n        this.error = null;\r\n      } catch (err) {\r\n        this.error = err.message || '获取订单列表失败';\r\n        ElMessage.error(this.error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async fetchOrderSummaryList() {\r\n      this.loading = true;\r\n      try {\r\n        this.summaryList = await getOrderSummaryList();\r\n        this.error = null;\r\n      } catch (err) {\r\n        this.error = err.message || '获取订单汇总失败';\r\n        ElMessage.error(this.error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async deleteOrder(orderId) {\r\n      try {\r\n        await deleteOrderById(orderId);\r\n        ElMessage.success('删除订单成功');\r\n        await this.fetchOrderList();\r\n      } catch (err) {\r\n        ElMessage.error(err.message || '删除订单失败');\r\n      }\r\n    },\r\n    // 时间段筛选和营收统计在前端处理\r\n    getOrdersByDateRange(startDate, endDate) {\r\n      return this.orderList.filter(order => {\r\n        const date = order.orderDate || order.checkoutTime || order.createTime;\r\n        return date >= startDate && date <= endDate;\r\n      });\r\n    },\r\n    getRevenueByDateRange(startDate, endDate) {\r\n      const orders = this.getOrdersByDateRange(startDate, endDate);\r\n      return orders.reduce((sum, o) => sum + Number(o.totalAmount || o.amount || 0), 0);\r\n    },\r\n    async editOrderDishes(orderId, dishId, quantity) {\r\n      try {\r\n        await addDishToOrder({ orderId, dishId, quantity });\r\n        ElMessage.success('添加菜品成功');\r\n        await this.fetchOrderList();\r\n      } catch (err) {\r\n        ElMessage.error(err.message || '添加菜品失败');\r\n      }\r\n    }\r\n  }\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}