{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { userLogin } from '@/api/auth';\nexport default {\n  __name: 'UserLoginForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const form = ref({\n      userId: '',\n      phone: ''\n    });\n    const error = ref(null);\n    const handleSubmit = async () => {\n      error.value = null;\n      try {\n        const result = await userLogin(form.value);\n        if (result.success) {\n          ElMessage.success(\"用户登录成功\");\n          router.push('/user-dashboard');\n        } else {\n          ElMessage.error(\"登录失败，请检查用户ID或手机号\");\n        }\n      } catch (err) {\n        error.value = err.message || '登录失败';\n        ElMessage.error(error.value);\n      }\n    };\n    const __returned__ = {\n      router,\n      form,\n      error,\n      handleSubmit,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get userLogin() {\n        return userLogin;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","ElMessage","userLogin","router","form","userId","phone","error","handleSubmit","value","result","success","push","err","message"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/components/auth/UserLoginForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"handleSubmit\">\r\n    <div class=\"mb-4\">\r\n      <label for=\"userId\" class=\"block mb-2\">用户ID</label>\r\n      <input\r\n        id=\"userId\"\r\n        v-model=\"form.userId\"\r\n        type=\"text\"\r\n        required\r\n        placeholder=\"请输入用户ID\"\r\n        class=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"mb-4\">\r\n      <label for=\"phone\" class=\"block mb-2\">手机号</label>\r\n      <input\r\n        id=\"phone\"\r\n        v-model=\"form.phone\"\r\n        type=\"tel\"\r\n        required\r\n        placeholder=\"请输入手机号\"\r\n        class=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n      />\r\n    </div>\r\n\r\n    <div v-if=\"error\" class=\"text-red-500 mb-4\">\r\n      {{ error }}\r\n    </div>\r\n\r\n    <div class=\"flex justify-center\">\r\n      <button \r\n        type=\"submit\" \r\n        class=\"bg-green-500 hover:bg-green-600 disabled:bg-gray-400 disabled:cursor-not-allowed text-white px-4 py-2 rounded-md cursor-pointer\"\r\n      >\r\n        用户登录\r\n      </button>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { userLogin } from '@/api/auth'\r\n\r\nconst router = useRouter()\r\n\r\nconst form = ref({\r\n  userId: '',\r\n  phone: ''\r\n})\r\n\r\nconst error = ref(null)\r\n\r\nconst handleSubmit = async () => {\r\n  error.value = null\r\n  try {\r\n    const result = await userLogin(form.value)\r\n    if (result.success) {\r\n      ElMessage.success(\"用户登录成功\")\r\n      router.push('/user-dashboard')\r\n    } else {\r\n      ElMessage.error(\"登录失败，请检查用户ID或手机号\")\r\n    }\r\n  } catch (err) {\r\n    error.value = err.message || '登录失败'\r\n    ElMessage.error(error.value)\r\n  }\r\n}\r\n</script> "],"mappings":";AA0CA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;IAE1B,MAAMI,IAAI,GAAGL,GAAG,CAAC;MACfM,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE;IACT,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGR,GAAG,CAAC,IAAI,CAAC;IAEvB,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BD,KAAK,CAACE,KAAK,GAAG,IAAI;MAClB,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMR,SAAS,CAACE,IAAI,CAACK,KAAK,CAAC;QAC1C,IAAIC,MAAM,CAACC,OAAO,EAAE;UAClBV,SAAS,CAACU,OAAO,CAAC,QAAQ,CAAC;UAC3BR,MAAM,CAACS,IAAI,CAAC,iBAAiB,CAAC;QAChC,CAAC,MAAM;UACLX,SAAS,CAACM,KAAK,CAAC,kBAAkB,CAAC;QACrC;MACF,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZN,KAAK,CAACE,KAAK,GAAGI,GAAG,CAACC,OAAO,IAAI,MAAM;QACnCb,SAAS,CAACM,KAAK,CAACA,KAAK,CAACE,KAAK,CAAC;MAC9B;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}