{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport LoginView from '@/views/auth/LoginView.vue';\nimport DashboardView from '@/views/DashboardView.vue';\nimport { useAuthStore } from '@/stores/auth';\nconst router = createRouter({\n  history: createWebHistory(import.meta.env.BASE_URL),\n  routes: [{\n    path: '/',\n    redirect: '/login'\n  }, {\n    path: '/login',\n    name: 'login',\n    component: LoginView,\n    meta: {\n      requiresGuest: true\n    }\n  }, {\n    path: '/dashboard',\n    name: 'dashboard',\n    component: DashboardView,\n    meta: {\n      requiresAuth: true\n    }\n  }\n  // 其他路由...\n  ]\n});\nrouter.beforeEach((to, from, next) => {\n  const authStore = useAuthStore();\n  if (to.meta.requiresAuth && !authStore.isAuthenticated) {\n    next('/login');\n  } else if (to.meta.requiresGuest && authStore.isAuthenticated) {\n    next('/dashboard');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginView","DashboardView","useAuthStore","router","history","import","meta","env","BASE_URL","routes","path","redirect","name","component","requiresGuest","requiresAuth","beforeEach","to","from","next","authStore","isAuthenticated"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport LoginView from '@/views/auth/LoginView.vue'\r\nimport DashboardView from '@/views/DashboardView.vue'\r\nimport { useAuthStore } from '@/stores/auth'\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(import.meta.env.BASE_URL),\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      redirect: '/login'\r\n    },\r\n    {\r\n      path: '/login',\r\n      name: 'login',\r\n      component: LoginView,\r\n      meta: { requiresGuest: true }\r\n    },\r\n    {\r\n      path: '/dashboard',\r\n      name: 'dashboard',\r\n      component: DashboardView,\r\n      meta: { requiresAuth: true }\r\n    }\r\n    // 其他路由...\r\n  ]\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const authStore = useAuthStore()\r\n  \r\n  if (to.meta.requiresAuth && !authStore.isAuthenticated) {\r\n    next('/login')\r\n  } else if (to.meta.requiresGuest && authStore.isAuthenticated) {\r\n    next('/dashboard')\r\n  } else {\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,aAAa,MAAM,2BAA2B;AACrD,SAASC,YAAY,QAAQ,eAAe;AAE5C,MAAMC,MAAM,GAAGL,YAAY,CAAC;EAC1BM,OAAO,EAAEL,gBAAgB,CAACM,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAAC;EACnDC,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,GAAG;IACTC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,IAAI,EAAE,QAAQ;IACdE,IAAI,EAAE,OAAO;IACbC,SAAS,EAAEb,SAAS;IACpBM,IAAI,EAAE;MAAEQ,aAAa,EAAE;IAAK;EAC9B,CAAC,EACD;IACEJ,IAAI,EAAE,YAAY;IAClBE,IAAI,EAAE,WAAW;IACjBC,SAAS,EAAEZ,aAAa;IACxBK,IAAI,EAAE;MAAES,YAAY,EAAE;IAAK;EAC7B;EACA;EAAA;AAEJ,CAAC,CAAC;AAEFZ,MAAM,CAACa,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,SAAS,GAAGlB,YAAY,CAAC,CAAC;EAEhC,IAAIe,EAAE,CAACX,IAAI,CAACS,YAAY,IAAI,CAACK,SAAS,CAACC,eAAe,EAAE;IACtDF,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM,IAAIF,EAAE,CAACX,IAAI,CAACQ,aAAa,IAAIM,SAAS,CAACC,eAAe,EAAE;IAC7DF,IAAI,CAAC,YAAY,CAAC;EACpB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAehB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}