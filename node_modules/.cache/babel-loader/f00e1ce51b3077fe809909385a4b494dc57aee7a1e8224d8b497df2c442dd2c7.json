{"ast":null,"code":"import { useCustomerStore } from '@/stores/customer';\nimport CustomerCard from './CustomerUpdateCard.vue';\nexport default {\n  components: {\n    CustomerCard\n  },\n  name: 'CustomerForm',\n  data() {\n    return {\n      customerStore: useCustomerStore(),\n      customerList: []\n    };\n  },\n  mounted() {\n    this.customerStore.fetchCustomerList();\n    this.customerList = this.customerStore.customerList;\n  },\n  methods: {\n    handleEdit(row) {\n      this.customerStore.updateCustomer(row);\n    },\n    handleDelete(row) {\n      this.customerStore.deleteCustomer(row.phone);\n    }\n  }\n};","map":{"version":3,"names":["useCustomerStore","CustomerCard","components","name","data","customerStore","customerList","mounted","fetchCustomerList","methods","handleEdit","row","updateCustomer","handleDelete","deleteCustomer","phone"],"sources":["D:\\数据库课程设计（饭店系统）\\restaurant-ordering-system\\src\\components\\customer\\CustomerForm.vue"],"sourcesContent":["<template>\r\n    <el-table :data=\"customerList\" style=\"width: 100%\" stripe border>\r\n        <el-table-column prop=\"customerId\" label=\"顾客ID\" />\r\n        <el-table-column prop=\"customerName\" label=\"顾客姓名\" />\r\n        <el-table-column prop=\"customerPhone\" label=\"顾客电话\" />\r\n        <el-table-column prop=\"customerEmail\" label=\"顾客创建账号时间\" />\r\n        <el-table-column label=\"操作\">\r\n            <template #default=\"scope\">\r\n                <el-button type=\"primary\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n                <el-button type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n            </template>\r\n        </el-table-column>\r\n        <el-dialog v-model=\"dialogVisible\" title=\"添加顾客\" width=\"500px\">\r\n            <CustomerCard />\r\n        </el-dialog>\r\n    </el-table>\r\n    \r\n</template>\r\n<script>\r\nimport { useCustomerStore } from '@/stores/customer';\r\nimport CustomerCard from './CustomerUpdateCard.vue';\r\nexport default {\r\n    components: {\r\n        CustomerCard\r\n    },\r\n    name: 'CustomerForm',\r\n    data() {\r\n        return {\r\n            customerStore: useCustomerStore(),\r\n            customerList: []\r\n        }\r\n    },\r\n    mounted() {\r\n        this.customerStore.fetchCustomerList();\r\n        this.customerList = this.customerStore.customerList;\r\n    },\r\n    methods: {\r\n        handleEdit(row) {\r\n            this.customerStore.updateCustomer(row);\r\n        },\r\n        handleDelete(row) {\r\n            this.customerStore.deleteCustomer(row.phone);\r\n        }\r\n    },\r\n    \r\n}\r\n</script>"],"mappings":"AAmBA,SAASA,gBAAe,QAAS,mBAAmB;AACpD,OAAOC,YAAW,MAAO,0BAA0B;AACnD,eAAe;EACXC,UAAU,EAAE;IACRD;EACJ,CAAC;EACDE,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,aAAa,EAAEL,gBAAgB,CAAC,CAAC;MACjCM,YAAY,EAAE;IAClB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACF,aAAa,CAACG,iBAAiB,CAAC,CAAC;IACtC,IAAI,CAACF,YAAW,GAAI,IAAI,CAACD,aAAa,CAACC,YAAY;EACvD,CAAC;EACDG,OAAO,EAAE;IACLC,UAAUA,CAACC,GAAG,EAAE;MACZ,IAAI,CAACN,aAAa,CAACO,cAAc,CAACD,GAAG,CAAC;IAC1C,CAAC;IACDE,YAAYA,CAACF,GAAG,EAAE;MACd,IAAI,CAACN,aAAa,CAACS,cAAc,CAACH,GAAG,CAACI,KAAK,CAAC;IAChD;EACJ;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}