{"ast":null,"code":"import { useOrderStore } from '@/stores/order';\nexport default {\n  name: 'DetailedCard',\n  props: {\n    order: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      form: {\n        orderId: '',\n        customerId: '',\n        customerName: '',\n        customerPhone: '',\n        tableId: '',\n        orderTime: '',\n        totalAmount: '',\n        finalAmount: '',\n        discount: '',\n        status: '',\n        dishes: ''\n      }\n    };\n  },\n  methods: {\n    async getOrderById() {\n      if (!this.order || !this.order.orderId) {\n        this.$message.error('订单信息不存在或订单ID为空');\n        return;\n      }\n      const response = await useOrderStore().getOrderById(this.order.orderId);\n      this.form = response;\n    },\n    async deleteOrder() {\n      await useOrderStore().deleteOrder(this.order.orderId);\n    }\n  }\n};","map":{"version":3,"names":["useOrderStore","name","props","order","type","Object","required","data","form","orderId","customerId","customerName","customerPhone","tableId","orderTime","totalAmount","finalAmount","discount","status","dishes","methods","getOrderById","$message","error","response","deleteOrder"],"sources":["D:\\数据库课程设计（饭店系统）\\restaurant-ordering-system\\src\\components\\order\\DetailedCard.vue"],"sourcesContent":["<template>\r\n    <div class=\"detailed-card\">\r\n        <el-form :model=\"form\" label-width=\"120px\">\r\n            <el-form-item label=\"订单ID\">\r\n                <el-input v-model=\"form.orderId\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"顾客ID\">\r\n                <el-input v-model=\"form.customerId\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"顾客电话\">\r\n                <el-input v-model=\"form.customerPhone\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"顾客名称\">\r\n                <el-input v-model=\"form.customerName\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"餐桌Id\">\r\n                <el-input v-model=\"form.tableId\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"订单时间\">\r\n                <el-input v-model=\"form.orderTime\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"订单金额\">\r\n                <el-input v-model=\"form.totalAmount\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"结账金额\">\r\n                <el-input v-model=\"form.finalAmount\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"折扣\">\r\n                <el-input v-model=\"form.discount\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"订单状态\">\r\n                <el-input v-model=\"form.status\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"菜品\">\r\n                <el-input v-model=\"form.dishes\" />\r\n            </el-form-item>\r\n        </el-form>\r\n        <el-button type=\"primary\" @click=\"getOrderById\">获取订单</el-button>\r\n        <el-button type=\"primary\" @click=\"deleteOrder\">删除订单</el-button>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { useOrderStore } from '@/stores/order';\r\nexport default {\r\n    name: 'DetailedCard',\r\n    props: {\r\n        order: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            form: {\r\n                orderId: '',\r\n                customerId: '',\r\n                customerName: '',\r\n                customerPhone: '',\r\n                tableId: '',\r\n                orderTime: '',\r\n                totalAmount: '',\r\n                finalAmount: '',\r\n                discount: '',\r\n                status: '',\r\n                dishes: ''\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        async getOrderById() {\r\n            if (!this.order || !this.order.orderId) {\r\n                this.$message.error('订单信息不存在或订单ID为空');\r\n                return;\r\n            }\r\n            const response = await useOrderStore().getOrderById(this.order.orderId);\r\n            this.form = response;\r\n        },\r\n        async deleteOrder() {\r\n            await useOrderStore().deleteOrder(this.order.orderId);\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":"AA0CA,SAASA,aAAY,QAAS,gBAAgB;AAC9C,eAAe;EACXC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACHC,KAAK,EAAE;MACHC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,OAAO,EAAE,EAAE;QACXC,UAAU,EAAE,EAAE;QACdC,YAAY,EAAE,EAAE;QAChBC,aAAa,EAAE,EAAE;QACjBC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE,EAAE;QACbC,WAAW,EAAE,EAAE;QACfC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE;MACZ;IACJ;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,YAAYA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAAClB,KAAI,IAAK,CAAC,IAAI,CAACA,KAAK,CAACM,OAAO,EAAE;QACpC,IAAI,CAACa,QAAQ,CAACC,KAAK,CAAC,gBAAgB,CAAC;QACrC;MACJ;MACA,MAAMC,QAAO,GAAI,MAAMxB,aAAa,CAAC,CAAC,CAACqB,YAAY,CAAC,IAAI,CAAClB,KAAK,CAACM,OAAO,CAAC;MACvE,IAAI,CAACD,IAAG,GAAIgB,QAAQ;IACxB,CAAC;IACD,MAAMC,WAAWA,CAAA,EAAG;MAChB,MAAMzB,aAAa,CAAC,CAAC,CAACyB,WAAW,CAAC,IAAI,CAACtB,KAAK,CAACM,OAAO,CAAC;IACzD;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}