{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { getMenuList } from '@/api/menu';\nimport { createOrder, addDishToOrder, removeDishFromOrder, updateDishQuantity, getOrderIdWithDishId, checkoutOrder } from '@/api/checkout';\nimport { getOrderById, updateOrder } from '@/api/order';\n\n// 订单创建区\n\nexport default {\n  __name: 'CheckoutForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const customerId = ref('');\n    const tableId = ref('');\n    const peopleCount = ref('');\n    const orderId = ref('');\n    const selectedDishes = ref([]);\n\n    // 订单更新区\n    const editOrderId = ref('');\n    const editCustomerId = ref('');\n    const editTableId = ref('');\n    const editPeopleCount = ref('');\n    const editSelectedDishes = ref([]);\n\n    // 查询区\n    const queryTableId = ref('');\n    const queryOrderId = ref('');\n    const orderInfo = ref(null);\n\n    // 结账区\n    const checkoutOrderId = ref('');\n\n    // 其他\n    const menuList = ref([]);\n    const message = ref('');\n    const error = ref('');\n\n    // 计算属性\n    const isEditMode = computed(() => editOrderId.value !== '');\n    onMounted(async () => {\n      await fetchMenuList();\n    });\n    async function fetchMenuList() {\n      try {\n        const res = await getMenuList();\n        menuList.value = Array.isArray(res) ? res : res.data || [];\n      } catch (err) {\n        error.value = err;\n      }\n    }\n\n    // 订单创建相关方法\n    async function handleCreateOrder() {\n      message.value = '';\n      error.value = '';\n      try {\n        const res = await createOrder({\n          tableId: Number(tableId.value),\n          customerId: Number(customerId.value),\n          peopleCount: Number(peopleCount.value)\n        });\n        orderId.value = res.data?.orderId ? String(res.data.orderId) : '';\n        if (orderId.value) {\n          ElMessage.success('订单创建成功，ID: ' + orderId.value);\n        } else {\n          ElMessage.warning('订单创建成功，但未返回订单ID');\n        }\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    function handleDishDblClick(row) {\n      if (!orderId.value) {\n        ElMessage.warning('请先创建订单');\n        return;\n      }\n      // 检查是否已添加\n      const exist = selectedDishes.value.find(d => d.dishId === row.dishId);\n      if (exist) {\n        exist.quantity++;\n        handleUpdateQuantity(exist, exist.quantity);\n        return;\n      }\n      // 添加到订单\n      addDishToOrder({\n        orderId: orderId.value,\n        dishId: row.dishId,\n        quantity: 1\n      }).then(() => {\n        selectedDishes.value.push({\n          ...row,\n          quantity: 1\n        });\n        ElMessage.success('已添加菜品: ' + row.dishName);\n      }).catch(err => {\n        error.value = err;\n      });\n    }\n    function removeDish(row) {\n      if (!orderId.value) return;\n      removeDishFromOrder({\n        orderId: orderId.value,\n        dishId: row.dishId\n      }).then(() => {\n        selectedDishes.value = selectedDishes.value.filter(d => d.dishId !== row.dishId);\n        ElMessage.success('已移除菜品: ' + row.dishName);\n      }).catch(err => {\n        error.value = err;\n      });\n    }\n    function handleUpdateQuantity(row, quantity) {\n      if (!orderId.value) return;\n      updateDishQuantity({\n        orderId: orderId.value,\n        dishId: row.dishId,\n        quantity\n      }).then(() => {\n        ElMessage.success('数量更新成功');\n      }).catch(err => {\n        error.value = err;\n      });\n    }\n    function handleExitEdit() {\n      orderId.value = '';\n      selectedDishes.value = [];\n      customerId.value = '';\n      tableId.value = '';\n      peopleCount.value = '';\n    }\n\n    // 订单更新相关方法\n    async function handleEditQueryOrder() {\n      message.value = '';\n      error.value = '';\n      try {\n        const res = await getOrderById(editOrderId.value);\n        const orderData = res.data;\n        editCustomerId.value = String(orderData.customer_id || '');\n        editTableId.value = String(orderData.table_id || '');\n        editPeopleCount.value = String(orderData.people_count || '');\n\n        // 解析菜品信息\n        if (orderData.dishes) {\n          let dishesArray = [];\n          if (typeof orderData.dishes === 'string') {\n            try {\n              dishesArray = JSON.parse(orderData.dishes);\n            } catch (e) {\n              // 如果不是JSON，尝试其他解析方式\n              dishesArray = orderData.dishes.split(',').map(dish => {\n                const [dishId, dishName, quantity] = dish.split(':');\n                return {\n                  dishId,\n                  dishName,\n                  quantity: Number(quantity)\n                };\n              });\n            }\n          } else if (Array.isArray(orderData.dishes)) {\n            dishesArray = orderData.dishes;\n          }\n          editSelectedDishes.value = dishesArray;\n        } else {\n          editSelectedDishes.value = [];\n        }\n        ElMessage.success('订单查询成功');\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    async function handleEditSaveOrder() {\n      message.value = '';\n      error.value = '';\n      try {\n        const orderData = {\n          orderId: editOrderId.value,\n          customerId: editCustomerId.value,\n          tableId: editTableId.value,\n          peopleCount: editPeopleCount.value,\n          dishes: editSelectedDishes.value\n        };\n        await updateOrder(orderData);\n        ElMessage.success('订单更新成功');\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    function handleEditExit() {\n      editOrderId.value = '';\n      editCustomerId.value = '';\n      editTableId.value = '';\n      editPeopleCount.value = '';\n      editSelectedDishes.value = [];\n    }\n    function editRemoveDish(row) {\n      editSelectedDishes.value = editSelectedDishes.value.filter(d => d.dishId !== row.dishId);\n    }\n    function handleEditUpdateQuantity(row, quantity) {\n      // 本地更新数量\n      row.quantity = quantity;\n    }\n\n    // 订单查询相关方法\n    async function handleQueryOrderByTableId() {\n      message.value = '';\n      error.value = '';\n      try {\n        const res = await getOrderIdWithDishId(queryTableId.value);\n        orderInfo.value = res.data;\n\n        // 如果查询到订单，也更新订单创建表单\n        if (orderInfo.value) {\n          customerId.value = String(orderInfo.value.customer_id || '');\n          tableId.value = String(orderInfo.value.table_id || '');\n          peopleCount.value = '';\n\n          // 解析菜品信息到已选菜品\n          if (orderInfo.value.dishes) {\n            let dishesArray = [];\n            if (typeof orderInfo.value.dishes === 'string') {\n              try {\n                dishesArray = JSON.parse(orderInfo.value.dishes);\n              } catch (e) {\n                dishesArray = orderInfo.value.dishes.split(',').map(dish => {\n                  const [dishId, dishName, quantity] = dish.split(':');\n                  return {\n                    dishId,\n                    dishName,\n                    quantity: Number(quantity)\n                  };\n                });\n              }\n            } else if (Array.isArray(orderInfo.value.dishes)) {\n              dishesArray = orderInfo.value.dishes;\n            }\n            selectedDishes.value = dishesArray;\n          }\n        }\n        ElMessage.success('查询成功');\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    async function handleQueryOrderDetails() {\n      message.value = '';\n      error.value = '';\n      try {\n        const res = await getOrderById(queryOrderId.value);\n        orderInfo.value = res.data;\n        ElMessage.success('查询成功');\n      } catch (err) {\n        error.value = err;\n      }\n    }\n\n    // 结账方法\n    async function handleCheckout() {\n      message.value = '';\n      error.value = '';\n      try {\n        await checkoutOrder(checkoutOrderId.value);\n        ElMessage.success('结账成功');\n        checkoutOrderId.value = '';\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    const __returned__ = {\n      customerId,\n      tableId,\n      peopleCount,\n      orderId,\n      selectedDishes,\n      editOrderId,\n      editCustomerId,\n      editTableId,\n      editPeopleCount,\n      editSelectedDishes,\n      queryTableId,\n      queryOrderId,\n      orderInfo,\n      checkoutOrderId,\n      menuList,\n      message,\n      error,\n      isEditMode,\n      fetchMenuList,\n      handleCreateOrder,\n      handleDishDblClick,\n      removeDish,\n      handleUpdateQuantity,\n      handleExitEdit,\n      handleEditQueryOrder,\n      handleEditSaveOrder,\n      handleEditExit,\n      editRemoveDish,\n      handleEditUpdateQuantity,\n      handleQueryOrderByTableId,\n      handleQueryOrderDetails,\n      handleCheckout,\n      ref,\n      onMounted,\n      computed,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get getMenuList() {\n        return getMenuList;\n      },\n      get createOrder() {\n        return createOrder;\n      },\n      get addDishToOrder() {\n        return addDishToOrder;\n      },\n      get removeDishFromOrder() {\n        return removeDishFromOrder;\n      },\n      get updateDishQuantity() {\n        return updateDishQuantity;\n      },\n      get getOrderIdWithDishId() {\n        return getOrderIdWithDishId;\n      },\n      get checkoutOrder() {\n        return checkoutOrder;\n      },\n      get getOrderById() {\n        return getOrderById;\n      },\n      get updateOrder() {\n        return updateOrder;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","ElMessage","getMenuList","createOrder","addDishToOrder","removeDishFromOrder","updateDishQuantity","getOrderIdWithDishId","checkoutOrder","getOrderById","updateOrder","customerId","tableId","peopleCount","orderId","selectedDishes","editOrderId","editCustomerId","editTableId","editPeopleCount","editSelectedDishes","queryTableId","queryOrderId","orderInfo","checkoutOrderId","menuList","message","error","isEditMode","value","fetchMenuList","res","Array","isArray","data","err","handleCreateOrder","Number","String","success","warning","handleDishDblClick","row","exist","find","d","dishId","quantity","handleUpdateQuantity","then","push","dishName","catch","removeDish","filter","handleExitEdit","handleEditQueryOrder","orderData","customer_id","table_id","people_count","dishes","dishesArray","JSON","parse","e","split","map","dish","handleEditSaveOrder","handleEditExit","editRemoveDish","handleEditUpdateQuantity","handleQueryOrderByTableId","handleQueryOrderDetails","handleCheckout"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/components/checkout/CheckoutForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"checkout-form-container\">\r\n    <div class=\"flex flex-col h-screen\">\r\n      <!-- 上方菜单列表 -->\r\n      <div class=\"h-1/2 border-b border-gray-200 flex flex-col\">\r\n        <div class=\"p-4 border-b border-gray-200\">\r\n          <h2 class=\"text-lg font-bold\">菜单列表</h2>\r\n        </div>\r\n        <div class=\"flex-1 overflow-y-auto\">\r\n          <el-table \r\n            :data=\"menuList\" \r\n            style=\"width: 100%;\" \r\n            size=\"small\" \r\n            layout=\"fixed\"\r\n            @row-dblclick=\"handleDishDblClick\"\r\n            class=\"menu-table\"\r\n          >\r\n            <el-table-column prop=\"dishId\" label=\"菜品ID\" width=\"120\" />\r\n            <el-table-column prop=\"dishName\" label=\"菜品名称\" width=\"200\" />\r\n            <el-table-column prop=\"price\" label=\"价格\" width=\"120\" />\r\n            <el-table-column prop=\"description\" label=\"描述\" />\r\n          </el-table>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 下方订单管理 -->\r\n      <div class=\"h-1/2 flex flex-col overflow-y-auto\">\r\n        <!-- 订单创建 -->\r\n        <div class=\"p-4 border-b border-gray-200\">\r\n          <h2 class=\"text-lg font-bold mb-4\">订单创建</h2>\r\n          <el-form label-width=\"80px\" class=\"mb-4\">\r\n            <el-form-item label=\"顾客ID\">\r\n              <el-input v-model=\"customerId\" type=\"number\" placeholder=\"输入顾客ID\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"桌子ID\">\r\n              <el-input v-model=\"tableId\" type=\"number\" placeholder=\"输入桌子ID\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"人数\">\r\n              <el-input v-model=\"peopleCount\" type=\"number\" min=\"1\" placeholder=\"输入人数\" />\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button \r\n                type=\"primary\" \r\n                @click=\"handleCreateOrder\" \r\n                :disabled=\"!!orderId || isEditMode\"\r\n              >\r\n                创建订单\r\n              </el-button>\r\n              <span v-if=\"orderId\" class=\"ml-4 text-green-600\">订单ID: {{ orderId }}</span>\r\n              <el-button v-if=\"orderId\" type=\"warning\" class=\"ml-4\" @click=\"handleExitEdit\">退出编辑</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          \r\n          <el-divider>已选菜品</el-divider>\r\n          <div class=\"mb-4\">\r\n            <el-table :data=\"selectedDishes\" style=\"width: 100%;\" size=\"small\" layout=\"fixed\">\r\n              <el-table-column prop=\"dishId\" label=\"菜品ID\" width=\"120\" />\r\n              <el-table-column prop=\"dishName\" label=\"菜品名称\" width=\"150\" />\r\n              <el-table-column prop=\"quantity\" label=\"数量\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  <el-input-number \r\n                    v-model=\"scope.row.quantity\" \r\n                    :min=\"1\" \r\n                    @change=\"q => handleUpdateQuantity(scope.row, q)\" \r\n                    style=\"width: 100%;\" \r\n                  />\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"操作\" width=\"100\" align=\"center\">\r\n                <template #default=\"scope\">\r\n                  <el-button size=\"small\" type=\"danger\" @click=\"removeDish(scope.row)\">移除</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 订单更新 -->\r\n        <div class=\"p-4 border-b border-gray-200\">\r\n          <h2 class=\"text-lg font-bold mb-4\">订单更新</h2>\r\n          <el-form label-width=\"80px\" class=\"mb-4\">\r\n            <el-form-item label=\"订单ID\">\r\n              <el-input v-model=\"editOrderId\" type=\"number\" placeholder=\"输入订单ID\" style=\"width: 180px;\" />\r\n              <el-button class=\"ml-2\" @click=\"handleEditQueryOrder\">查询</el-button>\r\n            </el-form-item>\r\n            <el-form-item label=\"顾客ID\">\r\n              <el-input v-model=\"editCustomerId\" type=\"number\" placeholder=\"输入顾客ID\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"桌子ID\">\r\n              <el-input v-model=\"editTableId\" type=\"number\" placeholder=\"输入桌子ID\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"人数\">\r\n              <el-input v-model=\"editPeopleCount\" type=\"number\" min=\"1\" placeholder=\"输入人数\" />\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button \r\n                type=\"primary\" \r\n                @click=\"handleEditSaveOrder\" \r\n                :disabled=\"!editOrderId || !!orderId\"\r\n              >\r\n                保存更新\r\n              </el-button>\r\n              <el-button v-if=\"editOrderId\" type=\"warning\" class=\"ml-4\" @click=\"handleEditExit\">退出编辑</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          \r\n          <el-divider>已选菜品</el-divider>\r\n          <div class=\"mb-4\">\r\n            <el-table :data=\"editSelectedDishes\" style=\"width: 100%;\" size=\"small\" layout=\"fixed\">\r\n              <el-table-column prop=\"dishId\" label=\"菜品ID\" width=\"120\" />\r\n              <el-table-column prop=\"dishName\" label=\"菜品名称\" width=\"150\" />\r\n              <el-table-column prop=\"quantity\" label=\"数量\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  <el-input-number \r\n                    v-model=\"scope.row.quantity\" \r\n                    :min=\"1\" \r\n                    @change=\"q => handleEditUpdateQuantity(scope.row, q)\" \r\n                    style=\"width: 100%;\" \r\n                  />\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"操作\" width=\"100\" align=\"center\">\r\n                <template #default=\"scope\">\r\n                  <el-button size=\"small\" type=\"danger\" @click=\"editRemoveDish(scope.row)\">移除</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 订单查询 -->\r\n        <div class=\"p-4 border-b border-gray-200\">\r\n          <h2 class=\"text-lg font-bold mb-4\">订单查询</h2>\r\n          <el-form label-width=\"160px\" class=\"mb-4\">\r\n            <el-form-item label=\"根据桌号查订单\">\r\n              <el-input v-model=\"queryTableId\" type=\"number\" placeholder=\"输入桌子ID\" style=\"width: 240px;\" />\r\n              <el-button @click=\"handleQueryOrderByTableId\" class=\"ml-2\">查询</el-button>\r\n            </el-form-item>\r\n            <el-form-item label=\"根据订单查菜品\">\r\n              <el-input v-model=\"queryOrderId\" type=\"number\" placeholder=\"输入订单ID\" style=\"width: 240px;\" />\r\n              <el-button @click=\"handleQueryOrderDetails\" class=\"ml-2\">查询</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          \r\n          <!-- 订单详情卡片展示 -->\r\n          <div v-if=\"orderInfo\" class=\"order-info-card p-4 mb-4 bg-gray-50 rounded shadow\">\r\n            <div v-if=\"orderInfo.orderId\"><b>订单ID：</b>{{ orderInfo.orderId }}</div>\r\n            <div v-if=\"orderInfo.customerId\"><b>顾客ID：</b>{{ orderInfo.customerId }}</div>\r\n            <div v-if=\"orderInfo.customerName\"><b>顾客姓名：</b>{{ orderInfo.customerName }}</div>\r\n            <div v-if=\"orderInfo.tableId\"><b>桌号：</b>{{ orderInfo.tableId }}</div>\r\n            <div v-if=\"orderInfo.orderTime\"><b>下单时间：</b>{{ orderInfo.orderTime }}</div>\r\n            <div v-if=\"orderInfo.status\"><b>状态：</b>{{ orderInfo.status }}</div>\r\n            <div v-if=\"orderInfo.finalAmount\"><b>实付金额：</b>{{ orderInfo.finalAmount }}</div>\r\n            <div v-if=\"orderInfo.totalAmount\"><b>总金额：</b>{{ orderInfo.totalAmount }}</div>\r\n            <div v-if=\"orderInfo.phone\"><b>手机号：</b>{{ orderInfo.phone }}</div>\r\n            <div v-if=\"orderInfo.discount\"><b>折扣：</b>{{ orderInfo.discount }}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 结账 -->\r\n        <div class=\"p-4\">\r\n          <h2 class=\"text-lg font-bold mb-4\">结账</h2>\r\n          <el-form label-width=\"160px\">\r\n            <el-form-item label=\"订单ID\">\r\n              <el-input v-model=\"checkoutOrderId\" type=\"number\" placeholder=\"输入订单ID\" style=\"width: 120px;\" />\r\n              <el-button type=\"success\" class=\"ml-2\" @click=\"handleCheckout\">结账</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          <div v-if=\"message\" class=\"mt-2 text-green-600\">{{ message }}</div>\r\n          <div v-if=\"error\" class=\"mt-2 text-red-600\">{{ error }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport { getMenuList } from '@/api/menu';\r\nimport {\r\n  createOrder,\r\n  addDishToOrder,\r\n  removeDishFromOrder,\r\n  updateDishQuantity,\r\n  getOrderIdWithDishId,\r\n  checkoutOrder\r\n} from '@/api/checkout';\r\nimport { getOrderById, updateOrder } from '@/api/order';\r\n\r\n// 订单创建区\r\nconst customerId = ref('');\r\nconst tableId = ref('');\r\nconst peopleCount = ref('');\r\nconst orderId = ref('');\r\nconst selectedDishes = ref([]);\r\n\r\n// 订单更新区\r\nconst editOrderId = ref('');\r\nconst editCustomerId = ref('');\r\nconst editTableId = ref('');\r\nconst editPeopleCount = ref('');\r\nconst editSelectedDishes = ref([]);\r\n\r\n// 查询区\r\nconst queryTableId = ref('');\r\nconst queryOrderId = ref('');\r\nconst orderInfo = ref(null);\r\n\r\n// 结账区\r\nconst checkoutOrderId = ref('');\r\n\r\n// 其他\r\nconst menuList = ref([]);\r\nconst message = ref('');\r\nconst error = ref('');\r\n\r\n// 计算属性\r\nconst isEditMode = computed(() => editOrderId.value !== '');\r\n\r\nonMounted(async () => {\r\n  await fetchMenuList();\r\n});\r\n\r\nasync function fetchMenuList() {\r\n  try {\r\n    const res = await getMenuList();\r\n    menuList.value = Array.isArray(res) ? res : (res.data || []);\r\n  } catch (err) {\r\n    error.value = err;\r\n  }\r\n}\r\n\r\n// 订单创建相关方法\r\nasync function handleCreateOrder() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    const res = await createOrder({\r\n      tableId: Number(tableId.value),\r\n      customerId: Number(customerId.value),\r\n      peopleCount: Number(peopleCount.value)\r\n    });\r\n    orderId.value = res.data?.orderId ? String(res.data.orderId) : '';\r\n    if (orderId.value) {\r\n      ElMessage.success('订单创建成功，ID: ' + orderId.value);\r\n    } else {\r\n      ElMessage.warning('订单创建成功，但未返回订单ID');\r\n    }\r\n  } catch (err) {\r\n    error.value = err;\r\n  }\r\n}\r\n\r\nfunction handleDishDblClick(row) {\r\n  if (!orderId.value) {\r\n    ElMessage.warning('请先创建订单');\r\n    return;\r\n  }\r\n  // 检查是否已添加\r\n  const exist = selectedDishes.value.find(d => d.dishId === row.dishId);\r\n  if (exist) {\r\n    exist.quantity++;\r\n    handleUpdateQuantity(exist, exist.quantity);\r\n    return;\r\n  }\r\n  // 添加到订单\r\n  addDishToOrder({ orderId: orderId.value, dishId: row.dishId, quantity: 1 })\r\n    .then(() => {\r\n      selectedDishes.value.push({ ...row, quantity: 1 });\r\n      ElMessage.success('已添加菜品: ' + row.dishName);\r\n    })\r\n    .catch(err => {\r\n      error.value = err;\r\n    });\r\n}\r\n\r\nfunction removeDish(row) {\r\n  if (!orderId.value) return;\r\n  removeDishFromOrder({ orderId: orderId.value, dishId: row.dishId })\r\n    .then(() => {\r\n      selectedDishes.value = selectedDishes.value.filter(d => d.dishId !== row.dishId);\r\n      ElMessage.success('已移除菜品: ' + row.dishName);\r\n    })\r\n    .catch(err => {\r\n      error.value = err;\r\n    });\r\n}\r\n\r\nfunction handleUpdateQuantity(row, quantity) {\r\n  if (!orderId.value) return;\r\n  updateDishQuantity({ orderId: orderId.value, dishId: row.dishId, quantity })\r\n    .then(() => {\r\n      ElMessage.success('数量更新成功');\r\n    })\r\n    .catch(err => {\r\n      error.value = err;\r\n    });\r\n}\r\n\r\nfunction handleExitEdit() {\r\n  orderId.value = '';\r\n  selectedDishes.value = [];\r\n  customerId.value = '';\r\n  tableId.value = '';\r\n  peopleCount.value = '';\r\n}\r\n\r\n// 订单更新相关方法\r\nasync function handleEditQueryOrder() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    const res = await getOrderById(editOrderId.value);\r\n    const orderData = res.data;\r\n    \r\n    editCustomerId.value = String(orderData.customer_id || '');\r\n    editTableId.value = String(orderData.table_id || '');\r\n    editPeopleCount.value = String(orderData.people_count || '');\r\n    \r\n    // 解析菜品信息\r\n    if (orderData.dishes) {\r\n      let dishesArray = [];\r\n      if (typeof orderData.dishes === 'string') {\r\n        try {\r\n          dishesArray = JSON.parse(orderData.dishes);\r\n        } catch (e) {\r\n          // 如果不是JSON，尝试其他解析方式\r\n          dishesArray = orderData.dishes.split(',').map(dish => {\r\n            const [dishId, dishName, quantity] = dish.split(':');\r\n            return { dishId, dishName, quantity: Number(quantity) };\r\n          });\r\n        }\r\n      } else if (Array.isArray(orderData.dishes)) {\r\n        dishesArray = orderData.dishes;\r\n      }\r\n      editSelectedDishes.value = dishesArray;\r\n    } else {\r\n      editSelectedDishes.value = [];\r\n    }\r\n    \r\n    ElMessage.success('订单查询成功');\r\n  } catch (err) {\r\n    error.value = err;\r\n  }\r\n}\r\n\r\nasync function handleEditSaveOrder() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    const orderData = {\r\n      orderId: editOrderId.value,\r\n      customerId: editCustomerId.value,\r\n      tableId: editTableId.value,\r\n      peopleCount: editPeopleCount.value,\r\n      dishes: editSelectedDishes.value\r\n    };\r\n    \r\n    await updateOrder(orderData);\r\n    ElMessage.success('订单更新成功');\r\n  } catch (err) {\r\n    error.value = err;\r\n  }\r\n}\r\n\r\nfunction handleEditExit() {\r\n  editOrderId.value = '';\r\n  editCustomerId.value = '';\r\n  editTableId.value = '';\r\n  editPeopleCount.value = '';\r\n  editSelectedDishes.value = [];\r\n}\r\n\r\nfunction editRemoveDish(row) {\r\n  editSelectedDishes.value = editSelectedDishes.value.filter(d => d.dishId !== row.dishId);\r\n}\r\n\r\nfunction handleEditUpdateQuantity(row, quantity) {\r\n  // 本地更新数量\r\n  row.quantity = quantity;\r\n}\r\n\r\n// 订单查询相关方法\r\nasync function handleQueryOrderByTableId() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    const res = await getOrderIdWithDishId(queryTableId.value);\r\n    orderInfo.value = res.data;\r\n    \r\n    // 如果查询到订单，也更新订单创建表单\r\n    if (orderInfo.value) {\r\n      customerId.value = String(orderInfo.value.customer_id || '');\r\n      tableId.value = String(orderInfo.value.table_id || '');\r\n      peopleCount.value = '';\r\n      \r\n      // 解析菜品信息到已选菜品\r\n      if (orderInfo.value.dishes) {\r\n        let dishesArray = [];\r\n        if (typeof orderInfo.value.dishes === 'string') {\r\n          try {\r\n            dishesArray = JSON.parse(orderInfo.value.dishes);\r\n          } catch (e) {\r\n            dishesArray = orderInfo.value.dishes.split(',').map(dish => {\r\n              const [dishId, dishName, quantity] = dish.split(':');\r\n              return { dishId, dishName, quantity: Number(quantity) };\r\n            });\r\n          }\r\n        } else if (Array.isArray(orderInfo.value.dishes)) {\r\n          dishesArray = orderInfo.value.dishes;\r\n        }\r\n        selectedDishes.value = dishesArray;\r\n      }\r\n    }\r\n    \r\n    ElMessage.success('查询成功');\r\n  } catch (err) {\r\n    error.value = err;\r\n  }\r\n}\r\n\r\nasync function handleQueryOrderDetails() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    const res = await getOrderById(queryOrderId.value);\r\n    orderInfo.value = res.data;\r\n    ElMessage.success('查询成功');\r\n  } catch (err) {\r\n    error.value = err;\r\n  }\r\n}\r\n\r\n// 结账方法\r\nasync function handleCheckout() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    await checkoutOrder(checkoutOrderId.value);\r\n    ElMessage.success('结账成功');\r\n    checkoutOrderId.value = '';\r\n  } catch (err) {\r\n    error.value = err;\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.checkout-form-container {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n.menu-table {\r\n  height: 100%;\r\n}\r\n\r\n.order-info-card {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}