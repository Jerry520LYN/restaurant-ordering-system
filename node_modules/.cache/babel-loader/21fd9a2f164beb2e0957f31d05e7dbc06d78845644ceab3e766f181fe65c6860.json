{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { getOrderList } from '@/api/order';\nexport default {\n  __name: 'UserOrderingView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loading = ref(false);\n    const orders = ref([]);\n    const searchQuery = ref('');\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n    const totalItems = ref(0);\n    const detailsDialogVisible = ref(false);\n    const selectedOrder = ref(null);\n\n    // 过滤后的订单列表\n    const filteredOrders = computed(() => {\n      if (!searchQuery.value) {\n        return orders.value;\n      }\n      return orders.value.filter(order => order.orderNumber.toLowerCase().includes(searchQuery.value.toLowerCase()) || order.id.toString().includes(searchQuery.value));\n    });\n\n    // 获取订单列表\n    const fetchOrders = async () => {\n      loading.value = true;\n      try {\n        const response = await getOrderList();\n        if (response.success) {\n          orders.value = response.data || [];\n          totalItems.value = orders.value.length;\n        } else {\n          ElMessage.error('获取订单列表失败');\n        }\n      } catch (error) {\n        ElMessage.error('获取订单列表失败');\n        console.error('Error fetching orders:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 获取状态类型\n    const getStatusType = status => {\n      const statusMap = {\n        '待确认': 'warning',\n        '已确认': 'primary',\n        '制作中': 'info',\n        '已完成': 'success',\n        '已取消': 'danger'\n      };\n      return statusMap[status] || 'info';\n    };\n\n    // 查看订单详情\n    const viewOrderDetails = order => {\n      selectedOrder.value = order;\n      detailsDialogVisible.value = true;\n    };\n\n    // 分页处理\n    const handleSizeChange = val => {\n      pageSize.value = val;\n      currentPage.value = 1;\n    };\n    const handleCurrentChange = val => {\n      currentPage.value = val;\n    };\n    onMounted(() => {\n      fetchOrders();\n    });\n    const __returned__ = {\n      loading,\n      orders,\n      searchQuery,\n      currentPage,\n      pageSize,\n      totalItems,\n      detailsDialogVisible,\n      selectedOrder,\n      filteredOrders,\n      fetchOrders,\n      getStatusType,\n      viewOrderDetails,\n      handleSizeChange,\n      handleCurrentChange,\n      ref,\n      computed,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get getOrderList() {\n        return getOrderList;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","ElMessage","getOrderList","loading","orders","searchQuery","currentPage","pageSize","totalItems","detailsDialogVisible","selectedOrder","filteredOrders","value","filter","order","orderNumber","toLowerCase","includes","id","toString","fetchOrders","response","success","data","length","error","console","getStatusType","status","statusMap","viewOrderDetails","handleSizeChange","val","handleCurrentChange"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/views/UserOrderingView.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-white rounded-lg shadow-md p-6\">\r\n    <div class=\"mb-6\">\r\n      <h2 class=\"text-2xl font-bold text-gray-800 mb-2\">点餐系统</h2>\r\n      <p class=\"text-gray-600\">查看订单详情和状态</p>\r\n    </div>\r\n\r\n    <!-- 搜索栏 -->\r\n    <div class=\"mb-6\">\r\n      <el-input\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"搜索订单号或菜品...\"\r\n        class=\"w-full max-w-md\"\r\n        clearable\r\n      >\r\n        <template #prefix>\r\n          <el-icon><search /></el-icon>\r\n        </template>\r\n      </el-input>\r\n    </div>\r\n\r\n    <!-- 订单列表 -->\r\n    <el-table\r\n      :data=\"filteredOrders\"\r\n      style=\"width: 100%\"\r\n      v-loading=\"loading\"\r\n      stripe\r\n    >\r\n      <el-table-column prop=\"id\" label=\"订单ID\" width=\"100\" />\r\n      <el-table-column prop=\"orderNumber\" label=\"订单号\" width=\"150\" />\r\n      <el-table-column prop=\"tableNumber\" label=\"桌号\" width=\"100\" />\r\n      <el-table-column prop=\"totalAmount\" label=\"总金额\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          <span class=\"text-red-500 font-semibold\">¥{{ scope.row.totalAmount }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"status\" label=\"状态\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          <el-tag :type=\"getStatusType(scope.row.status)\">\r\n            {{ scope.row.status }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"180\" />\r\n      <el-table-column label=\"操作\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            @click=\"viewOrderDetails(scope.row)\"\r\n          >\r\n            查看详情\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <div class=\"mt-6 flex justify-center\">\r\n      <el-pagination\r\n        v-model=\"currentPage\"\r\n        :page-size=\"pageSize\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :total=\"totalItems\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 订单详情对话框 -->\r\n    <el-dialog\r\n      v-model=\"detailsDialogVisible\"\r\n      title=\"订单详情\"\r\n      width=\"60%\"\r\n    >\r\n      <div v-if=\"selectedOrder\">\r\n        <div class=\"mb-4\">\r\n          <h3 class=\"text-lg font-semibold mb-2\">订单信息</h3>\r\n          <div class=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <span class=\"font-medium\">订单号：</span>\r\n              <span>{{ selectedOrder.orderNumber }}</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"font-medium\">桌号：</span>\r\n              <span>{{ selectedOrder.tableNumber }}</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"font-medium\">状态：</span>\r\n              <el-tag :type=\"getStatusType(selectedOrder.status)\">\r\n                {{ selectedOrder.status }}\r\n              </el-tag>\r\n            </div>\r\n            <div>\r\n              <span class=\"font-medium\">总金额：</span>\r\n              <span class=\"text-red-500 font-semibold\">¥{{ selectedOrder.totalAmount }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <h3 class=\"text-lg font-semibold mb-2\">菜品详情</h3>\r\n          <el-table :data=\"selectedOrder.orderDetails\" stripe>\r\n            <el-table-column prop=\"menuName\" label=\"菜品名称\" />\r\n            <el-table-column prop=\"quantity\" label=\"数量\" width=\"100\" />\r\n            <el-table-column prop=\"unitPrice\" label=\"单价\" width=\"120\">\r\n              <template #default=\"scope\">\r\n                <span>¥{{ scope.row.unitPrice }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"subtotal\" label=\"小计\" width=\"120\">\r\n              <template #default=\"scope\">\r\n                <span class=\"text-red-500\">¥{{ scope.row.subtotal }}</span>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { getOrderList } from '@/api/order'\r\n\r\nconst loading = ref(false)\r\nconst orders = ref([])\r\nconst searchQuery = ref('')\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst totalItems = ref(0)\r\nconst detailsDialogVisible = ref(false)\r\nconst selectedOrder = ref(null)\r\n\r\n// 过滤后的订单列表\r\nconst filteredOrders = computed(() => {\r\n  if (!searchQuery.value) {\r\n    return orders.value\r\n  }\r\n  return orders.value.filter(order =>\r\n    order.orderNumber.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\r\n    order.id.toString().includes(searchQuery.value)\r\n  )\r\n})\r\n\r\n// 获取订单列表\r\nconst fetchOrders = async () => {\r\n  loading.value = true\r\n  try {\r\n    const response = await getOrderList()\r\n    if (response.success) {\r\n      orders.value = response.data || []\r\n      totalItems.value = orders.value.length\r\n    } else {\r\n      ElMessage.error('获取订单列表失败')\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('获取订单列表失败')\r\n    console.error('Error fetching orders:', error)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 获取状态类型\r\nconst getStatusType = (status) => {\r\n  const statusMap = {\r\n    '待确认': 'warning',\r\n    '已确认': 'primary',\r\n    '制作中': 'info',\r\n    '已完成': 'success',\r\n    '已取消': 'danger'\r\n  }\r\n  return statusMap[status] || 'info'\r\n}\r\n\r\n// 查看订单详情\r\nconst viewOrderDetails = (order) => {\r\n  selectedOrder.value = order\r\n  detailsDialogVisible.value = true\r\n}\r\n\r\n// 分页处理\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  currentPage.value = 1\r\n}\r\n\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n}\r\n\r\nonMounted(() => {\r\n  fetchOrders()\r\n})\r\n</script> "],"mappings":";;AA4HA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,YAAY,QAAQ,aAAa;;;;;;;IAE1C,MAAMC,OAAO,GAAGL,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMM,MAAM,GAAGN,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMO,WAAW,GAAGP,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMQ,WAAW,GAAGR,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMS,QAAQ,GAAGT,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMU,UAAU,GAAGV,GAAG,CAAC,CAAC,CAAC;IACzB,MAAMW,oBAAoB,GAAGX,GAAG,CAAC,KAAK,CAAC;IACvC,MAAMY,aAAa,GAAGZ,GAAG,CAAC,IAAI,CAAC;;IAE/B;IACA,MAAMa,cAAc,GAAGZ,QAAQ,CAAC,MAAM;MACpC,IAAI,CAACM,WAAW,CAACO,KAAK,EAAE;QACtB,OAAOR,MAAM,CAACQ,KAAK;MACrB;MACA,OAAOR,MAAM,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,IAC9BA,KAAK,CAACC,WAAW,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACZ,WAAW,CAACO,KAAK,CAACI,WAAW,CAAC,CAAC,CAAC,IACzEF,KAAK,CAACI,EAAE,CAACC,QAAQ,CAAC,CAAC,CAACF,QAAQ,CAACZ,WAAW,CAACO,KAAK,CAChD,CAAC;IACH,CAAC,CAAC;;IAEF;IACA,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BjB,OAAO,CAACS,KAAK,GAAG,IAAI;MACpB,IAAI;QACF,MAAMS,QAAQ,GAAG,MAAMnB,YAAY,CAAC,CAAC;QACrC,IAAImB,QAAQ,CAACC,OAAO,EAAE;UACpBlB,MAAM,CAACQ,KAAK,GAAGS,QAAQ,CAACE,IAAI,IAAI,EAAE;UAClCf,UAAU,CAACI,KAAK,GAAGR,MAAM,CAACQ,KAAK,CAACY,MAAM;QACxC,CAAC,MAAM;UACLvB,SAAS,CAACwB,KAAK,CAAC,UAAU,CAAC;QAC7B;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdxB,SAAS,CAACwB,KAAK,CAAC,UAAU,CAAC;QAC3BC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,SAAS;QACRtB,OAAO,CAACS,KAAK,GAAG,KAAK;MACvB;IACF,CAAC;;IAED;IACA,MAAMe,aAAa,GAAIC,MAAM,IAAK;MAChC,MAAMC,SAAS,GAAG;QAChB,KAAK,EAAE,SAAS;QAChB,KAAK,EAAE,SAAS;QAChB,KAAK,EAAE,MAAM;QACb,KAAK,EAAE,SAAS;QAChB,KAAK,EAAE;MACT,CAAC;MACD,OAAOA,SAAS,CAACD,MAAM,CAAC,IAAI,MAAM;IACpC,CAAC;;IAED;IACA,MAAME,gBAAgB,GAAIhB,KAAK,IAAK;MAClCJ,aAAa,CAACE,KAAK,GAAGE,KAAK;MAC3BL,oBAAoB,CAACG,KAAK,GAAG,IAAI;IACnC,CAAC;;IAED;IACA,MAAMmB,gBAAgB,GAAIC,GAAG,IAAK;MAChCzB,QAAQ,CAACK,KAAK,GAAGoB,GAAG;MACpB1B,WAAW,CAACM,KAAK,GAAG,CAAC;IACvB,CAAC;IAED,MAAMqB,mBAAmB,GAAID,GAAG,IAAK;MACnC1B,WAAW,CAACM,KAAK,GAAGoB,GAAG;IACzB,CAAC;IAEDhC,SAAS,CAAC,MAAM;MACdoB,WAAW,CAAC,CAAC;IACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}