{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { useCustomerStore } from '@/stores/customer';\nimport CustomerUpdateCard from './CustomerUpdateCard.vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nexport default {\n  components: {\n    CustomerUpdateCard\n  },\n  name: 'VipCustomerForm',\n  data() {\n    return {\n      customerStore: useCustomerStore(),\n      customerList: [],\n      updateDialogVisible: false,\n      currentCustomer: null,\n      addVipCustomerDialogVisible: false\n    };\n  },\n  mounted() {\n    this.customerStore.fetchCustomerList();\n    // 筛选出不以0开头的顾客ID\n    this.customerList = this.customerStore.customerList.filter(customer => {\n      const customerId = customer.customerId?.toString() || '';\n      return !customerId.startsWith('0');\n    });\n  },\n  methods: {\n    getVipCustomerList() {\n      this.customerStore.fetchCustomerList();\n      // 筛选出不以0开头的顾客ID\n      this.customerList = this.customerStore.customerList.filter(customer => {\n        const customerId = customer.customerId?.toString() || '';\n        return !customerId.startsWith('0');\n      });\n      ElMessage.success('刷新VIP顾客列表成功');\n    },\n    addVipCustomer() {\n      this.addVipCustomerDialogVisible = true;\n    },\n    handleEdit(row) {\n      this.updateDialogVisible = true;\n      this.currentCustomer = row;\n    },\n    handleDelete(row) {\n      ElMessageBox.confirm('确定删除该顾客吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.customerStore.deleteCustomer(row.customerPhone);\n      });\n    },\n    handleUpdateSuccess() {\n      this.updateDialogVisible = false;\n      this.customerStore.fetchCustomerList();\n      // 重新筛选数据\n      this.customerList = this.customerStore.customerList.filter(customer => {\n        const customerId = customer.customerId?.toString() || '';\n        return !customerId.startsWith('0');\n      });\n      this.currentCustomer = null;\n    }\n  }\n};","map":{"version":3,"names":["useCustomerStore","CustomerUpdateCard","ElMessage","ElMessageBox","components","name","data","customerStore","customerList","updateDialogVisible","currentCustomer","addVipCustomerDialogVisible","mounted","fetchCustomerList","filter","customer","customerId","toString","startsWith","methods","getVipCustomerList","success","addVipCustomer","handleEdit","row","handleDelete","confirm","confirmButtonText","cancelButtonText","type","then","deleteCustomer","customerPhone","handleUpdateSuccess"],"sources":["D:\\数据库课程设计（饭店系统）\\restaurant-ordering-system\\src\\components\\customer\\VipCustomerForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"vip-customer-form\">\r\n        <div class=\"vip-customer-form-title mt-7\">\r\n            <div class=\"flex justify-between items-center\">\r\n                <h1 class=\"m-0 text-gray-800 text-xl font-bold\">VIP顾客信息</h1>\r\n                <div>\r\n                    <el-button type=\"primary\" @click=\"getVipCustomerList\">刷新VIP顾客列表</el-button>\r\n                    <el-button type=\"primary\" @click=\"addVipCustomer\">添加VIP顾客</el-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <el-table :data=\"customerList\" style=\"width: 100%; margin-top: 1rem\" stripe border>\r\n            <!--这里给table添加一个margin-top: 1rem-->\r\n            <el-table-column prop=\"customerId\" label=\"顾客ID\" />\r\n            <el-table-column prop=\"customerName\" label=\"顾客姓名\" />\r\n            <el-table-column prop=\"customerPhone\" label=\"顾客电话\" />\r\n            <el-table-column prop=\"customerEmail\" label=\"顾客创建账号时间\" />\r\n\r\n            <el-table-column label=\"操作\">\r\n                <template #default=\"scope\">\r\n                    <el-button type=\"primary\" @click=\"handleEdit(scope.row)\">更新</el-button>\r\n                    <el-button type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        \r\n        <el-dialog v-model=\"updateDialogVisible\" title=\"更新顾客\" width=\"500px\">\r\n            <CustomerUpdateCard v-if=\"currentCustomer\" :customer=\"currentCustomer\" @update-success=\"handleUpdateSuccess\" @close=\"updateDialogVisible = false\" />\r\n        </el-dialog>\r\n        <el-dialog v-model=\"addVipCustomerDialogVisible\" title=\"添加VIP顾客\" width=\"500px\">\r\n            <CustomerAddCard v-if=\"addVipCustomerDialogVisible\" @add-success=\"handleAddSuccess\" @close=\"addVipCustomerDialogVisible = false\" />\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { useCustomerStore } from '@/stores/customer';\r\nimport CustomerUpdateCard from './CustomerUpdateCard.vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nexport default {\r\n    components: {\r\n        CustomerUpdateCard\r\n    },\r\n    name: 'VipCustomerForm',\r\n    data() {\r\n        return {\r\n            customerStore: useCustomerStore(),\r\n            customerList: [],\r\n            updateDialogVisible: false,\r\n            currentCustomer: null,\r\n            addVipCustomerDialogVisible: false\r\n        }\r\n    },\r\n    mounted() {\r\n        this.customerStore.fetchCustomerList();\r\n        // 筛选出不以0开头的顾客ID\r\n        this.customerList = this.customerStore.customerList.filter(customer => {\r\n            const customerId = customer.customerId?.toString() || '';\r\n            return !customerId.startsWith('0');\r\n        });\r\n    },\r\n    methods: {\r\n        getVipCustomerList() {\r\n            this.customerStore.fetchCustomerList();\r\n            // 筛选出不以0开头的顾客ID\r\n            this.customerList = this.customerStore.customerList.filter(customer => {\r\n                const customerId = customer.customerId?.toString() || '';\r\n                return !customerId.startsWith('0');\r\n            });\r\n            ElMessage.success('刷新VIP顾客列表成功');\r\n        },\r\n        addVipCustomer() {\r\n            this.addVipCustomerDialogVisible = true;\r\n        },\r\n        handleEdit(row) {\r\n            this.updateDialogVisible = true;\r\n            this.currentCustomer = row;\r\n        },\r\n        handleDelete(row) {\r\n            ElMessageBox.confirm('确定删除该顾客吗？', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning',\r\n            }).then(() => {\r\n                this.customerStore.deleteCustomer(row.customerPhone);   \r\n            });\r\n            \r\n        },\r\n        handleUpdateSuccess() {\r\n            this.updateDialogVisible = false;\r\n            this.customerStore.fetchCustomerList();\r\n            // 重新筛选数据\r\n            this.customerList = this.customerStore.customerList.filter(customer => {\r\n                const customerId = customer.customerId?.toString() || '';\r\n                return !customerId.startsWith('0');\r\n            });\r\n            this.currentCustomer = null;\r\n        }\r\n    },\r\n    \r\n}\r\n</script>"],"mappings":";;AAmCA,SAASA,gBAAe,QAAS,mBAAmB;AACpD,OAAOC,kBAAiB,MAAO,0BAA0B;AACzD,SAASC,SAAS,EAAEC,YAAW,QAAS,cAAc;AACtD,eAAe;EACXC,UAAU,EAAE;IACRH;EACJ,CAAC;EACDI,IAAI,EAAE,iBAAiB;EACvBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,aAAa,EAAEP,gBAAgB,CAAC,CAAC;MACjCQ,YAAY,EAAE,EAAE;MAChBC,mBAAmB,EAAE,KAAK;MAC1BC,eAAe,EAAE,IAAI;MACrBC,2BAA2B,EAAE;IACjC;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACL,aAAa,CAACM,iBAAiB,CAAC,CAAC;IACtC;IACA,IAAI,CAACL,YAAW,GAAI,IAAI,CAACD,aAAa,CAACC,YAAY,CAACM,MAAM,CAACC,QAAO,IAAK;MACnE,MAAMC,UAAS,GAAID,QAAQ,CAACC,UAAU,EAAEC,QAAQ,CAAC,KAAK,EAAE;MACxD,OAAO,CAACD,UAAU,CAACE,UAAU,CAAC,GAAG,CAAC;IACtC,CAAC,CAAC;EACN,CAAC;EACDC,OAAO,EAAE;IACLC,kBAAkBA,CAAA,EAAG;MACjB,IAAI,CAACb,aAAa,CAACM,iBAAiB,CAAC,CAAC;MACtC;MACA,IAAI,CAACL,YAAW,GAAI,IAAI,CAACD,aAAa,CAACC,YAAY,CAACM,MAAM,CAACC,QAAO,IAAK;QACnE,MAAMC,UAAS,GAAID,QAAQ,CAACC,UAAU,EAAEC,QAAQ,CAAC,KAAK,EAAE;QACxD,OAAO,CAACD,UAAU,CAACE,UAAU,CAAC,GAAG,CAAC;MACtC,CAAC,CAAC;MACFhB,SAAS,CAACmB,OAAO,CAAC,aAAa,CAAC;IACpC,CAAC;IACDC,cAAcA,CAAA,EAAG;MACb,IAAI,CAACX,2BAA0B,GAAI,IAAI;IAC3C,CAAC;IACDY,UAAUA,CAACC,GAAG,EAAE;MACZ,IAAI,CAACf,mBAAkB,GAAI,IAAI;MAC/B,IAAI,CAACC,eAAc,GAAIc,GAAG;IAC9B,CAAC;IACDC,YAAYA,CAACD,GAAG,EAAE;MACdrB,YAAY,CAACuB,OAAO,CAAC,WAAW,EAAE,IAAI,EAAE;QACpCC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBC,IAAI,EAAE;MACV,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;QACV,IAAI,CAACvB,aAAa,CAACwB,cAAc,CAACP,GAAG,CAACQ,aAAa,CAAC;MACxD,CAAC,CAAC;IAEN,CAAC;IACDC,mBAAmBA,CAAA,EAAG;MAClB,IAAI,CAACxB,mBAAkB,GAAI,KAAK;MAChC,IAAI,CAACF,aAAa,CAACM,iBAAiB,CAAC,CAAC;MACtC;MACA,IAAI,CAACL,YAAW,GAAI,IAAI,CAACD,aAAa,CAACC,YAAY,CAACM,MAAM,CAACC,QAAO,IAAK;QACnE,MAAMC,UAAS,GAAID,QAAQ,CAACC,UAAU,EAAEC,QAAQ,CAAC,KAAK,EAAE;QACxD,OAAO,CAACD,UAAU,CAACE,UAAU,CAAC,GAAG,CAAC;MACtC,CAAC,CAAC;MACF,IAAI,CAACR,eAAc,GAAI,IAAI;IAC/B;EACJ;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}