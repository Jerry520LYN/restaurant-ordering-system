{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { getMenuList } from '@/api/menu';\nimport { createOrder, addDishToOrder, removeDishFromOrder, updateDishQuantity, getOrderIdWithDishId, checkoutOrder } from '@/api/checkout';\nimport { getOrderById, updateOrder } from '@/api/order';\n\n// 订单创建区\n\nexport default {\n  __name: 'CheckoutForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const customerId = ref('');\n    const tableId = ref('');\n    const peopleCount = ref('');\n    const orderId = ref('');\n    const selectedDishes = ref([]);\n\n    // 订单更新区\n    const editOrderId = ref('');\n    const editCustomerId = ref('');\n    const editTableId = ref('');\n    const editPeopleCount = ref('');\n    const editSelectedDishes = ref([]);\n    const menuList = ref([]);\n    const message = ref('');\n    const error = ref('');\n    const orderDetails = ref([]);\n    const queryTableId = ref('');\n    const queryOrderId = ref('');\n    const checkoutOrderId = ref('');\n    const orderInfo = ref(null);\n    onMounted(async () => {\n      await fetchMenuList();\n    });\n    async function fetchMenuList() {\n      try {\n        const res = await getMenuList();\n        menuList.value = Array.isArray(res) ? res : res.data || [];\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    async function handleCreateOrder() {\n      message.value = '';\n      error.value = '';\n      try {\n        const res = await createOrder({\n          tableId: Number(tableId.value),\n          customerId: Number(customerId.value),\n          peopleCount: Number(peopleCount.value)\n        });\n        orderId.value = res.orderId;\n        if (orderId.value) {\n          ElMessage.success('订单创建成功，ID: ' + orderId.value);\n        } else {\n          ElMessage.warning('订单创建成功，但未返回订单ID');\n        }\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    function handleDishDblClick(row) {\n      if (!orderId.value) {\n        ElMessage.warning('请先创建订单');\n        return;\n      }\n      // 检查是否已添加\n      const exist = selectedDishes.value.find(d => d.dishId === row.dishId);\n      if (exist) {\n        exist.quantity++;\n        handleUpdateQuantity(exist, exist.quantity);\n        return;\n      }\n      // 添加到订单\n      addDishToOrder({\n        orderId: orderId.value,\n        dishId: row.dishId,\n        quantity: 1\n      }).then(() => {\n        selectedDishes.value.push({\n          ...row,\n          quantity: 1\n        });\n        ElMessage.success('已添加菜品: ' + row.dishName);\n      }).catch(err => {\n        error.value = err;\n      });\n    }\n    function removeDish(row) {\n      if (!orderId.value) return;\n      removeDishFromOrder({\n        orderId: orderId.value,\n        dishId: row.dishId\n      }).then(() => {\n        selectedDishes.value = selectedDishes.value.filter(d => d.dishId !== row.dishId);\n        ElMessage.success('已移除菜品');\n      }).catch(err => {\n        error.value = err;\n      });\n    }\n    function handleUpdateQuantity(row, quantity) {\n      if (!orderId.value) return;\n      updateDishQuantity({\n        orderId: orderId.value,\n        dishId: row.dishId,\n        quantity\n      }).then(() => {\n        row.quantity = quantity;\n        ElMessage.success('数量已更新');\n      }).catch(err => {\n        error.value = err;\n      });\n    }\n    async function handleQueryOrderByTableId() {\n      message.value = '';\n      error.value = '';\n      try {\n        const res = await getOrderIdWithDishId(Number(queryTableId.value));\n        orderInfo.value = res.data || null;\n        orderDetails.value = [];\n        // 自动填充到订单操作区\n        if (orderInfo.value) {\n          orderId.value = String(orderInfo.value.orderId || orderInfo.value.order_id || '');\n          tableId.value = String(orderInfo.value.tableId || orderInfo.value.table_id || '');\n          customerId.value = String(orderInfo.value.customerId || orderInfo.value.customer_id || '');\n          peopleCount.value = '';\n          // 处理菜品\n          if (orderInfo.value.dishes) {\n            if (Array.isArray(orderInfo.value.dishes)) {\n              selectedDishes.value = orderInfo.value.dishes.map(dish => ({\n                dishId: dish.dishId || dish.dish_id || '',\n                dishName: dish.dishName || dish.dish_name || dish,\n                quantity: dish.quantity || 1\n              }));\n            } else if (typeof orderInfo.value.dishes === 'string') {\n              selectedDishes.value = [{\n                dishId: '',\n                dishName: orderInfo.value.dishes,\n                quantity: 1\n              }];\n            }\n          } else {\n            selectedDishes.value = [];\n          }\n        }\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    async function handleQueryOrderDetails() {\n      message.value = '';\n      error.value = '';\n      try {\n        const res = await getOrderById(Number(queryOrderId.value));\n        orderInfo.value = res.data || null;\n        orderDetails.value = [];\n        // 自动填充到订单操作区\n        if (orderInfo.value) {\n          orderId.value = String(orderInfo.value.orderId || orderInfo.value.order_id || '');\n          tableId.value = String(orderInfo.value.tableId || orderInfo.value.table_id || '');\n          customerId.value = String(orderInfo.value.customerId || orderInfo.value.customer_id || '');\n          peopleCount.value = '';\n          if (orderInfo.value.dishes) {\n            if (Array.isArray(orderInfo.value.dishes)) {\n              selectedDishes.value = orderInfo.value.dishes.map(dish => ({\n                dishId: dish.dishId || dish.dish_id || '',\n                dishName: dish.dishName || dish.dish_name || dish,\n                quantity: dish.quantity || 1\n              }));\n            } else if (typeof orderInfo.value.dishes === 'string') {\n              selectedDishes.value = [{\n                dishId: '',\n                dishName: orderInfo.value.dishes,\n                quantity: 1\n              }];\n            }\n          } else {\n            selectedDishes.value = [];\n          }\n        }\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    function handleExitEdit() {\n      orderId.value = '';\n      tableId.value = '';\n      customerId.value = '';\n      peopleCount.value = '';\n      selectedDishes.value = [];\n      orderInfo.value = null;\n      orderDetails.value = [];\n      message.value = '';\n      error.value = '';\n      queryTableId.value = '';\n      queryOrderId.value = '';\n      checkoutOrderId.value = '';\n    }\n    async function handleCheckout() {\n      message.value = '';\n      error.value = '';\n      try {\n        await checkoutOrder(Number(checkoutOrderId.value));\n        message.value = '结账成功！';\n        ElMessage.success('结账成功！');\n      } catch (err) {\n        error.value = err;\n      }\n    }\n\n    // 订单更新区逻辑\n    async function handleEditQueryOrder() {\n      message.value = '';\n      error.value = '';\n      try {\n        const res = await getOrderById(Number(editOrderId.value));\n        const info = res.data || null;\n        if (info) {\n          editCustomerId.value = String(info.customerId || info.customer_id || '');\n          editTableId.value = String(info.tableId || info.table_id || '');\n          editPeopleCount.value = '';\n          if (info.dishes) {\n            if (Array.isArray(info.dishes)) {\n              editSelectedDishes.value = info.dishes.map(dish => ({\n                dishId: dish.dishId || dish.dish_id || '',\n                dishName: dish.dishName || dish.dish_name || dish,\n                quantity: dish.quantity || 1\n              }));\n            } else if (typeof info.dishes === 'string') {\n              editSelectedDishes.value = [{\n                dishId: '',\n                dishName: info.dishes,\n                quantity: 1\n              }];\n            }\n          } else {\n            editSelectedDishes.value = [];\n          }\n        }\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    function handleEditUpdateQuantity(row, quantity) {\n      row.quantity = quantity;\n    }\n    function editRemoveDish(row) {\n      editSelectedDishes.value = editSelectedDishes.value.filter(d => d !== row);\n    }\n    function handleEditSaveOrder() {\n      // 组装参数\n      const dishes = editSelectedDishes.value.map(d => ({\n        dishId: d.dishId,\n        dishName: d.dishName,\n        quantity: d.quantity\n      }));\n      updateOrder({\n        orderId: editOrderId.value,\n        customerId: editCustomerId.value,\n        tableId: editTableId.value,\n        peopleCount: editPeopleCount.value,\n        dishes\n      }).then(() => {\n        ElMessage.success('订单已更新！');\n      }).catch(err => {\n        ElMessage.error('更新失败: ' + (err.message || err));\n      });\n    }\n    function handleEditExit() {\n      editOrderId.value = '';\n      editCustomerId.value = '';\n      editTableId.value = '';\n      editPeopleCount.value = '';\n      editSelectedDishes.value = [];\n    }\n    const __returned__ = {\n      customerId,\n      tableId,\n      peopleCount,\n      orderId,\n      selectedDishes,\n      editOrderId,\n      editCustomerId,\n      editTableId,\n      editPeopleCount,\n      editSelectedDishes,\n      menuList,\n      message,\n      error,\n      orderDetails,\n      queryTableId,\n      queryOrderId,\n      checkoutOrderId,\n      orderInfo,\n      fetchMenuList,\n      handleCreateOrder,\n      handleDishDblClick,\n      removeDish,\n      handleUpdateQuantity,\n      handleQueryOrderByTableId,\n      handleQueryOrderDetails,\n      handleExitEdit,\n      handleCheckout,\n      handleEditQueryOrder,\n      handleEditUpdateQuantity,\n      editRemoveDish,\n      handleEditSaveOrder,\n      handleEditExit,\n      ref,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get getMenuList() {\n        return getMenuList;\n      },\n      get createOrder() {\n        return createOrder;\n      },\n      get addDishToOrder() {\n        return addDishToOrder;\n      },\n      get removeDishFromOrder() {\n        return removeDishFromOrder;\n      },\n      get updateDishQuantity() {\n        return updateDishQuantity;\n      },\n      get getOrderIdWithDishId() {\n        return getOrderIdWithDishId;\n      },\n      get checkoutOrder() {\n        return checkoutOrder;\n      },\n      get getOrderById() {\n        return getOrderById;\n      },\n      get updateOrder() {\n        return updateOrder;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","ElMessage","getMenuList","createOrder","addDishToOrder","removeDishFromOrder","updateDishQuantity","getOrderIdWithDishId","checkoutOrder","getOrderById","updateOrder","customerId","tableId","peopleCount","orderId","selectedDishes","editOrderId","editCustomerId","editTableId","editPeopleCount","editSelectedDishes","menuList","message","error","orderDetails","queryTableId","queryOrderId","checkoutOrderId","orderInfo","fetchMenuList","res","value","Array","isArray","data","err","handleCreateOrder","Number","success","warning","handleDishDblClick","row","exist","find","d","dishId","quantity","handleUpdateQuantity","then","push","dishName","catch","removeDish","filter","handleQueryOrderByTableId","String","order_id","table_id","customer_id","dishes","map","dish","dish_id","dish_name","handleQueryOrderDetails","handleExitEdit","handleCheckout","handleEditQueryOrder","info","handleEditUpdateQuantity","editRemoveDish","handleEditSaveOrder","handleEditExit"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/components/checkout/CheckoutForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex gap-8\">\r\n    <!-- 左侧：菜品列表 -->\r\n    <div class=\"w-1/2\">\r\n      <h2 class=\"text-lg font-bold mb-2\">菜品列表（双击添加）</h2>\r\n      <el-table\r\n        :data=\"menuList\"\r\n        style=\"width: 100%; font-size: 18px;\"\r\n        height=\"850\"\r\n        @row-dblclick=\"handleDishDblClick\"\r\n        highlight-current-row>\r\n        <el-table-column prop=\"dishId\" label=\"菜品ID\" width=\"120\" align=\"center\" />\r\n        <el-table-column prop=\"dishName\" label=\"菜品名称\" width=\"200\" align=\"center\" />\r\n        <el-table-column prop=\"price\" label=\"价格\" width=\"120\" align=\"center\">\r\n          <template #default=\"scope\">¥{{ scope.row.price }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"description\" label=\"描述\" min-width=\"200\" />\r\n      </el-table>\r\n    </div>\r\n\r\n    <!-- 右侧：订单创建与更新 -->\r\n    <div class=\"w-1/2\">\r\n      <!-- 订单创建 -->\r\n      <h2 class=\"text-lg font-bold mb-2\">订单创建</h2>\r\n      <el-form label-width=\"80px\" class=\"mb-4\">\r\n        <el-form-item label=\"顾客ID\">\r\n          <el-input v-model=\"customerId\" type=\"number\" placeholder=\"输入顾客ID\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"桌子ID\">\r\n          <el-input v-model=\"tableId\" type=\"number\" placeholder=\"输入桌子ID\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"人数\">\r\n          <el-input v-model=\"peopleCount\" type=\"number\" min=\"1\" placeholder=\"输入人数\" />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleCreateOrder\" :disabled=\"orderId\">创建订单</el-button>\r\n          <span v-if=\"orderId\" class=\"ml-4 text-green-600\">订单ID: {{ orderId }}</span>\r\n          <el-button v-if=\"orderId\" type=\"warning\" class=\"ml-4\" @click=\"handleExitEdit\">退出编辑</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-divider>已选菜品</el-divider>\r\n      <div style=\"display: flex; flex-direction: column; width: 100%;\">\r\n        <el-table :data=\"selectedDishes\" style=\"flex: 1 1 auto; width: 100%;\" size=\"small\" layout=\"fixed\">\r\n          <el-table-column prop=\"dishId\" label=\"菜品ID\" width=\"150%\"  />\r\n          <el-table-column prop=\"dishName\" label=\"菜品名称\" width=\"200%\" />\r\n          <el-table-column prop=\"quantity\" label=\"数量\" width=\"200%\">\r\n            <template #default=\"scope\">\r\n              <el-input-number v-model=\"scope.row.quantity\" :min=\"1\" @change=\"q => handleUpdateQuantity(scope.row, q)\" style=\"width: 100%;\" />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" width=\"150%\" align=\"center\">\r\n            <template #default=\"scope\">\r\n              <el-button size=\"small\" type=\"danger\" @click=\"removeDish(scope.row)\">移除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n\r\n      <!-- 订单更新 -->\r\n      <el-divider class=\"my-6\" />\r\n      <h2 class=\"text-lg font-bold mb-2\">订单更新</h2>\r\n      <el-form label-width=\"80px\" class=\"mb-4\">\r\n        <el-form-item label=\"订单ID\">\r\n          <el-input v-model=\"editOrderId\" type=\"number\" placeholder=\"输入订单ID\" style=\"width: 180px;\" />\r\n          <el-button class=\"ml-2\" @click=\"handleEditQueryOrder\">查询</el-button>\r\n        </el-form-item>\r\n        <el-form-item label=\"顾客ID\">\r\n          <el-input v-model=\"editCustomerId\" type=\"number\" placeholder=\"输入顾客ID\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"桌子ID\">\r\n          <el-input v-model=\"editTableId\" type=\"number\" placeholder=\"输入桌子ID\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"人数\">\r\n          <el-input v-model=\"editPeopleCount\" type=\"number\" min=\"1\" placeholder=\"输入人数\" />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleEditSaveOrder\" :disabled=\"!editOrderId\">保存更新</el-button>\r\n          <el-button v-if=\"editOrderId\" type=\"warning\" class=\"ml-4\" @click=\"handleEditExit\">退出编辑</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-divider>已选菜品</el-divider>\r\n      <div style=\"display: flex; flex-direction: column; width: 100%;\">\r\n        <el-table :data=\"editSelectedDishes\" style=\"flex: 1 1 auto; width: 100%;\" size=\"small\" layout=\"fixed\">\r\n          <el-table-column prop=\"dishId\" label=\"菜品ID\" width=\"150%\"  />\r\n          <el-table-column prop=\"dishName\" label=\"菜品名称\" width=\"200%\" />\r\n          <el-table-column prop=\"quantity\" label=\"数量\" width=\"200%\">\r\n            <template #default=\"scope\">\r\n              <el-input-number v-model=\"scope.row.quantity\" :min=\"1\" @change=\"q => handleEditUpdateQuantity(scope.row, q)\" style=\"width: 100%;\" />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" width=\"150%\" align=\"center\">\r\n            <template #default=\"scope\">\r\n              <el-button size=\"small\" type=\"danger\" @click=\"editRemoveDish(scope.row)\">移除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n\r\n      <el-divider class=\"my-6\" />\r\n      <el-divider>订单菜品信息</el-divider>\r\n      <el-form label-width=\"160px\" class=\"mb-2\">\r\n        <el-form-item label=\"根据桌号查订单\">\r\n          <el-input v-model=\"queryTableId\" type=\"number\" placeholder=\"输入桌子ID\" style=\"width: 240px;\" />\r\n          <el-button @click=\"handleQueryOrderByTableId\" class=\"ml-2\">查询</el-button>\r\n        </el-form-item>\r\n        <el-form-item label=\"根据订单查菜品\">\r\n          <el-input v-model=\"queryOrderId\" type=\"number\" placeholder=\"输入订单ID\" style=\"width: 240px;\" />\r\n          <el-button @click=\"handleQueryOrderDetails\" class=\"ml-2\">查询</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- 订单详情卡片展示（根据订单ID或桌号查询都可用） -->\r\n      <div v-if=\"orderInfo\" class=\"order-info-card p-4 mb-4 bg-gray-50 rounded shadow\">\r\n        <div v-if=\"orderInfo.orderId\"><b>订单ID：</b>{{ orderInfo.orderId }}</div>\r\n        <div v-if=\"orderInfo.customerId\"><b>顾客ID：</b>{{ orderInfo.customerId }}</div>\r\n        <div v-if=\"orderInfo.customerName\"><b>顾客姓名：</b>{{ orderInfo.customerName }}</div>\r\n        <div v-if=\"orderInfo.tableId\"><b>桌号：</b>{{ orderInfo.tableId }}</div>\r\n        <div v-if=\"orderInfo.orderTime\"><b>下单时间：</b>{{ orderInfo.orderTime }}</div>\r\n        <div v-if=\"orderInfo.status\"><b>状态：</b>{{ orderInfo.status }}</div>\r\n        <div v-if=\"orderInfo.finalAmount\"><b>实付金额：</b>{{ orderInfo.finalAmount }}</div>\r\n        <div v-if=\"orderInfo.totalAmount\"><b>总金额：</b>{{ orderInfo.totalAmount }}</div>\r\n        <div v-if=\"orderInfo.phone\"><b>手机号：</b>{{ orderInfo.phone }}</div>\r\n        <div v-if=\"orderInfo.discount\"><b>折扣：</b>{{ orderInfo.discount }}</div>\r\n      </div>\r\n\r\n      <el-divider>结账</el-divider>\r\n      <el-form label-width=\"160px\">\r\n        <el-form-item label=\"订单ID\">\r\n          <el-input v-model=\"checkoutOrderId\" type=\"number\" placeholder=\"输入订单ID\" style=\"width: 120px;\" />\r\n          <el-button type=\"success\" class=\"ml-2\" @click=\"handleCheckout\">结账</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div v-if=\"message\" class=\"mt-2 text-green-600\">{{ message }}</div>\r\n      <div v-if=\"error\" class=\"mt-2 text-red-600\">{{ error }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport { getMenuList } from '@/api/menu';\r\nimport {\r\n  createOrder,\r\n  addDishToOrder,\r\n  removeDishFromOrder,\r\n  updateDishQuantity,\r\n  getOrderIdWithDishId,\r\n  checkoutOrder\r\n} from '@/api/checkout';\r\nimport { getOrderById, updateOrder } from '@/api/order';\r\n\r\n// 订单创建区\r\nconst customerId = ref('');\r\nconst tableId = ref('');\r\nconst peopleCount = ref('');\r\nconst orderId = ref('');\r\nconst selectedDishes = ref([]);\r\n\r\n// 订单更新区\r\nconst editOrderId = ref('');\r\nconst editCustomerId = ref('');\r\nconst editTableId = ref('');\r\nconst editPeopleCount = ref('');\r\nconst editSelectedDishes = ref([]);\r\n\r\nconst menuList = ref([]);\r\nconst message = ref('');\r\nconst error = ref('');\r\nconst orderDetails = ref([]);\r\nconst queryTableId = ref('');\r\nconst queryOrderId = ref('');\r\nconst checkoutOrderId = ref('');\r\nconst orderInfo = ref(null);\r\n\r\nonMounted(async () => {\r\n  await fetchMenuList();\r\n});\r\n\r\nasync function fetchMenuList() {\r\n  try {\r\n    const res = await getMenuList();\r\n    menuList.value = Array.isArray(res) ? res : (res.data || []);\r\n  } catch (err) {\r\n    error.value = err;\r\n  }\r\n}\r\n\r\nasync function handleCreateOrder() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    const res = await createOrder({\r\n      tableId: Number(tableId.value),\r\n      customerId: Number(customerId.value),\r\n      peopleCount: Number(peopleCount.value)\r\n    });\r\n    orderId.value = res.orderId;\r\n    if (orderId.value) {\r\n      ElMessage.success('订单创建成功，ID: ' + orderId.value);\r\n    } else {\r\n      ElMessage.warning('订单创建成功，但未返回订单ID');\r\n    }\r\n  } catch (err) {\r\n    error.value = err;\r\n  }\r\n}\r\n\r\nfunction handleDishDblClick(row) {\r\n  if (!orderId.value) {\r\n    ElMessage.warning('请先创建订单');\r\n    return;\r\n  }\r\n  // 检查是否已添加\r\n  const exist = selectedDishes.value.find(d => d.dishId === row.dishId);\r\n  if (exist) {\r\n    exist.quantity++;\r\n    handleUpdateQuantity(exist, exist.quantity);\r\n    return;\r\n  }\r\n  // 添加到订单\r\n  addDishToOrder({ orderId: orderId.value, dishId: row.dishId, quantity: 1 })\r\n    .then(() => {\r\n      selectedDishes.value.push({ ...row, quantity: 1 });\r\n      ElMessage.success('已添加菜品: ' + row.dishName);\r\n    })\r\n    .catch(err => {\r\n      error.value = err;\r\n    });\r\n}\r\n\r\nfunction removeDish(row) {\r\n  if (!orderId.value) return;\r\n  removeDishFromOrder({ orderId: orderId.value, dishId: row.dishId })\r\n    .then(() => {\r\n      selectedDishes.value = selectedDishes.value.filter(d => d.dishId !== row.dishId);\r\n      ElMessage.success('已移除菜品');\r\n    })\r\n    .catch(err => {\r\n      error.value = err;\r\n    });\r\n}\r\n\r\nfunction handleUpdateQuantity(row, quantity) {\r\n  if (!orderId.value) return;\r\n  updateDishQuantity({ orderId: orderId.value, dishId: row.dishId, quantity })\r\n    .then(() => {\r\n      row.quantity = quantity;\r\n      ElMessage.success('数量已更新');\r\n    })\r\n    .catch(err => {\r\n      error.value = err;\r\n    });\r\n}\r\n\r\nasync function handleQueryOrderByTableId() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    const res = await getOrderIdWithDishId(Number(queryTableId.value));\r\n    orderInfo.value = res.data || null;\r\n    orderDetails.value = [];\r\n    // 自动填充到订单操作区\r\n    if (orderInfo.value) {\r\n      orderId.value = String(orderInfo.value.orderId || orderInfo.value.order_id || '');\r\n      tableId.value = String(orderInfo.value.tableId || orderInfo.value.table_id || '');\r\n      customerId.value = String(orderInfo.value.customerId || orderInfo.value.customer_id || '');\r\n      peopleCount.value = '';\r\n      // 处理菜品\r\n      if (orderInfo.value.dishes) {\r\n        if (Array.isArray(orderInfo.value.dishes)) {\r\n          selectedDishes.value = orderInfo.value.dishes.map(dish => ({\r\n            dishId: dish.dishId || dish.dish_id || '',\r\n            dishName: dish.dishName || dish.dish_name || dish,\r\n            quantity: dish.quantity || 1\r\n          }));\r\n        } else if (typeof orderInfo.value.dishes === 'string') {\r\n          selectedDishes.value = [{ dishId: '', dishName: orderInfo.value.dishes, quantity: 1 }];\r\n        }\r\n      } else {\r\n        selectedDishes.value = [];\r\n      }\r\n    }\r\n  } catch (err) {\r\n    error.value = err;\r\n  }\r\n}\r\n\r\nasync function handleQueryOrderDetails() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    const res = await getOrderById(Number(queryOrderId.value));\r\n    orderInfo.value = res.data || null;\r\n    orderDetails.value = [];\r\n    // 自动填充到订单操作区\r\n    if (orderInfo.value) {\r\n      orderId.value = String(orderInfo.value.orderId || orderInfo.value.order_id || '');\r\n      tableId.value = String(orderInfo.value.tableId || orderInfo.value.table_id || '');\r\n      customerId.value = String(orderInfo.value.customerId || orderInfo.value.customer_id || '');\r\n      peopleCount.value = '';\r\n      if (orderInfo.value.dishes) {\r\n        if (Array.isArray(orderInfo.value.dishes)) {\r\n          selectedDishes.value = orderInfo.value.dishes.map(dish => ({\r\n            dishId: dish.dishId || dish.dish_id || '',\r\n            dishName: dish.dishName || dish.dish_name || dish,\r\n            quantity: dish.quantity || 1\r\n          }));\r\n        } else if (typeof orderInfo.value.dishes === 'string') {\r\n          selectedDishes.value = [{ dishId: '', dishName: orderInfo.value.dishes, quantity: 1 }];\r\n        }\r\n      } else {\r\n        selectedDishes.value = [];\r\n      }\r\n    }\r\n  } catch (err) {\r\n    error.value = err;\r\n  }\r\n}\r\n\r\nfunction handleExitEdit() {\r\n  orderId.value = '';\r\n  tableId.value = '';\r\n  customerId.value = '';\r\n  peopleCount.value = '';\r\n  selectedDishes.value = [];\r\n  orderInfo.value = null;\r\n  orderDetails.value = [];\r\n  message.value = '';\r\n  error.value = '';\r\n  queryTableId.value = '';\r\n  queryOrderId.value = '';\r\n  checkoutOrderId.value = '';\r\n}\r\n\r\nasync function handleCheckout() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    await checkoutOrder(Number(checkoutOrderId.value));\r\n    message.value = '结账成功！';\r\n    ElMessage.success('结账成功！');\r\n  } catch (err) {\r\n    error.value = err;\r\n  }\r\n}\r\n\r\n// 订单更新区逻辑\r\nasync function handleEditQueryOrder() {\r\n  message.value = '';\r\n  error.value = '';\r\n  try {\r\n    const res = await getOrderById(Number(editOrderId.value));\r\n    const info = res.data || null;\r\n    if (info) {\r\n      editCustomerId.value = String(info.customerId || info.customer_id || '');\r\n      editTableId.value = String(info.tableId || info.table_id || '');\r\n      editPeopleCount.value = '';\r\n      if (info.dishes) {\r\n        if (Array.isArray(info.dishes)) {\r\n          editSelectedDishes.value = info.dishes.map(dish => ({\r\n            dishId: dish.dishId || dish.dish_id || '',\r\n            dishName: dish.dishName || dish.dish_name || dish,\r\n            quantity: dish.quantity || 1\r\n          }));\r\n        } else if (typeof info.dishes === 'string') {\r\n          editSelectedDishes.value = [{ dishId: '', dishName: info.dishes, quantity: 1 }];\r\n        }\r\n      } else {\r\n        editSelectedDishes.value = [];\r\n      }\r\n    }\r\n  } catch (err) {\r\n    error.value = err;\r\n  }\r\n}\r\n\r\nfunction handleEditUpdateQuantity(row, quantity) {\r\n  row.quantity = quantity;\r\n}\r\n\r\nfunction editRemoveDish(row) {\r\n  editSelectedDishes.value = editSelectedDishes.value.filter(d => d !== row);\r\n}\r\n\r\nfunction handleEditSaveOrder() {\r\n  // 组装参数\r\n  const dishes = editSelectedDishes.value.map(d => ({\r\n    dishId: d.dishId,\r\n    dishName: d.dishName,\r\n    quantity: d.quantity\r\n  }));\r\n  updateOrder({\r\n    orderId: editOrderId.value,\r\n    customerId: editCustomerId.value,\r\n    tableId: editTableId.value,\r\n    peopleCount: editPeopleCount.value,\r\n    dishes\r\n  })\r\n    .then(() => {\r\n      ElMessage.success('订单已更新！');\r\n    })\r\n    .catch(err => {\r\n      ElMessage.error('更新失败: ' + (err.message || err));\r\n    });\r\n}\r\n\r\nfunction handleEditExit() {\r\n  editOrderId.value = '';\r\n  editCustomerId.value = '';\r\n  editTableId.value = '';\r\n  editPeopleCount.value = '';\r\n  editSelectedDishes.value = [];\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.flex { display: flex; }\r\n.gap-8 { gap: 2rem; }\r\n.w-1\\/2 { width: 50%; }\r\n.ml-2 { margin-left: 0.5rem; }\r\n.ml-4 { margin-left: 1rem; }\r\n.mt-2 { margin-top: 0.5rem; }\r\n.text-green-600 { color: #16a34a; }\r\n.text-red-600 { color: #dc2626; }\r\n.el-table {\r\n  font-size: 18px;\r\n}\r\n.order-info-card {\r\n  background: #f9fafb;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.04);\r\n  margin-bottom: 1rem;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}