{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { getOrderSummaryList, deleteOrderById, getOrderById, getOrderDetailById } from '@/api/order';\nimport { ElMessage } from 'element-plus';\nexport const useOrderStore = defineStore('order', {\n  state: () => ({\n    orderList: [],\n    summaryList: [],\n    loading: false,\n    error: null\n  }),\n  actions: {\n    async fetchOrderSummaryList() {\n      this.loading = true;\n      try {\n        const response = await getOrderSummaryList();\n        this.summaryList = response;\n        this.error = null;\n      } catch (err) {\n        this.error = err.message || '获取订单汇总失败';\n        ElMessage.error(this.error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async deleteOrder(orderId) {\n      try {\n        const response = await deleteOrderById(orderId);\n        if (response.code === 200) {\n          ElMessage.success('删除订单成功');\n          await this.fetchOrderList();\n        } else {\n          ElMessage.error(response.message || '删除订单失败');\n        }\n      } catch (err) {\n        ElMessage.error(err.message || '删除订单失败');\n      }\n    },\n    async getOrderById(orderId) {\n      const response = await getOrderById(orderId);\n      return response;\n    },\n    async getOrderDetailById(orderId) {\n      const response = await getOrderDetailById(orderId);\n      return response;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","getOrderSummaryList","deleteOrderById","getOrderById","getOrderDetailById","ElMessage","useOrderStore","state","orderList","summaryList","loading","error","actions","fetchOrderSummaryList","response","err","message","deleteOrder","orderId","code","success","fetchOrderList"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/stores/order.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport { getOrderSummaryList, deleteOrderById, getOrderById, getOrderDetailById } from '@/api/order';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nexport const useOrderStore = defineStore('order', {\r\n  state: () => ({\r\n    orderList: [],\r\n    summaryList: [],\r\n    loading: false,\r\n    error: null\r\n  }),\r\n  actions: {\r\n    async fetchOrderSummaryList() {\r\n      this.loading = true;\r\n      try {\r\n        const response = await getOrderSummaryList();\r\n        this.summaryList = response;\r\n        this.error = null;\r\n      } catch (err) {\r\n        this.error = err.message || '获取订单汇总失败';\r\n        ElMessage.error(this.error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async deleteOrder(orderId) {\r\n      try {\r\n        const response = await deleteOrderById(orderId);\r\n        if (response.code === 200) {\r\n        ElMessage.success('删除订单成功');\r\n          await this.fetchOrderList();\r\n        } else {\r\n          ElMessage.error(response.message || '删除订单失败');\r\n        }\r\n      } catch (err) {\r\n        ElMessage.error(err.message || '删除订单失败');\r\n      }\r\n    },\r\n    async getOrderById(orderId) {\r\n      const response = await getOrderById(orderId);\r\n      return response;\r\n    },\r\n    async getOrderDetailById(orderId) {\r\n      const response = await getOrderDetailById(orderId);\r\n      return response;\r\n    }\r\n  }\r\n});\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,mBAAmB,EAAEC,eAAe,EAAEC,YAAY,EAAEC,kBAAkB,QAAQ,aAAa;AACpG,SAASC,SAAS,QAAQ,cAAc;AAExC,OAAO,MAAMC,aAAa,GAAGN,WAAW,CAAC,OAAO,EAAE;EAChDO,KAAK,EAAEA,CAAA,MAAO;IACZC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,qBAAqBA,CAAA,EAAG;MAC5B,IAAI,CAACH,OAAO,GAAG,IAAI;MACnB,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAMb,mBAAmB,CAAC,CAAC;QAC5C,IAAI,CAACQ,WAAW,GAAGK,QAAQ;QAC3B,IAAI,CAACH,KAAK,GAAG,IAAI;MACnB,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZ,IAAI,CAACJ,KAAK,GAAGI,GAAG,CAACC,OAAO,IAAI,UAAU;QACtCX,SAAS,CAACM,KAAK,CAAC,IAAI,CAACA,KAAK,CAAC;MAC7B,CAAC,SAAS;QACR,IAAI,CAACD,OAAO,GAAG,KAAK;MACtB;IACF,CAAC;IACD,MAAMO,WAAWA,CAACC,OAAO,EAAE;MACzB,IAAI;QACF,MAAMJ,QAAQ,GAAG,MAAMZ,eAAe,CAACgB,OAAO,CAAC;QAC/C,IAAIJ,QAAQ,CAACK,IAAI,KAAK,GAAG,EAAE;UAC3Bd,SAAS,CAACe,OAAO,CAAC,QAAQ,CAAC;UACzB,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;QAC7B,CAAC,MAAM;UACLhB,SAAS,CAACM,KAAK,CAACG,QAAQ,CAACE,OAAO,IAAI,QAAQ,CAAC;QAC/C;MACF,CAAC,CAAC,OAAOD,GAAG,EAAE;QACZV,SAAS,CAACM,KAAK,CAACI,GAAG,CAACC,OAAO,IAAI,QAAQ,CAAC;MAC1C;IACF,CAAC;IACD,MAAMb,YAAYA,CAACe,OAAO,EAAE;MAC1B,MAAMJ,QAAQ,GAAG,MAAMX,YAAY,CAACe,OAAO,CAAC;MAC5C,OAAOJ,QAAQ;IACjB,CAAC;IACD,MAAMV,kBAAkBA,CAACc,OAAO,EAAE;MAChC,MAAMJ,QAAQ,GAAG,MAAMV,kBAAkB,CAACc,OAAO,CAAC;MAClD,OAAOJ,QAAQ;IACjB;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}