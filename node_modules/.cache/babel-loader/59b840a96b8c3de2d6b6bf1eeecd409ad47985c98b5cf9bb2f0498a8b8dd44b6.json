{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"vip-customer-form\"\n};\nconst _hoisted_2 = {\n  class: \"vip-customer-form-title\"\n};\nconst _hoisted_3 = {\n  class: \"flex justify-between items-center mb-5\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_CustomerUpdateCard = _resolveComponent(\"CustomerUpdateCard\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"VIP顾客信息\", -1 /* HOISTED */)), _createElementVNode(\"div\", null, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.getVipCustomerList\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"刷新VIP顾客列表\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.addVipCustomer\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"添加VIP顾客\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])])]), _createCommentVNode(\"-布局问题：span 默认是行内元素，子元素会垂直排列而不是水平排列\\r\\n        间距问题：没有 margin-bottom，标题和表格之间没有间距\\r\\n        对齐问题：没有 justify-content: space-between，标题和按钮会挤在一起\\r\\n        解决方法：将span改为div，并添加justify-between和items-center类\"), _createVNode(_component_el_table, {\n    data: $data.customerList,\n    style: {\n      \"width\": \"100%\"\n    },\n    stripe: \"\",\n    border: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"customerId\",\n      label: \"顾客ID\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"customerName\",\n      label: \"顾客姓名\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"customerPhone\",\n      label: \"顾客电话\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"customerEmail\",\n      label: \"顾客创建账号时间\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $event => $options.handleEdit(scope.row)\n      }, {\n        default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"更新\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"danger\",\n        onClick: $event => $options.handleDelete(scope.row)\n      }, {\n        default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"删除\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_dialog, {\n      modelValue: $data.updateDialogVisible,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.updateDialogVisible = $event),\n      title: \"更新顾客\",\n      width: \"500px\"\n    }, {\n      default: _withCtx(() => [$data.currentCustomer ? (_openBlock(), _createBlock(_component_CustomerUpdateCard, {\n        key: 0,\n        customer: $data.currentCustomer,\n        onUpdateSuccess: $options.handleUpdateSuccess,\n        onClose: _cache[0] || (_cache[0] = $event => $data.updateDialogVisible = false)\n      }, null, 8 /* PROPS */, [\"customer\", \"onUpdateSuccess\"])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_el_button","type","onClick","$options","getVipCustomerList","default","_withCtx","_cache","_createTextVNode","_","addVipCustomer","_createCommentVNode","_component_el_table","data","$data","customerList","style","stripe","border","_component_el_table_column","prop","label","scope","$event","handleEdit","row","handleDelete","_component_el_dialog","modelValue","updateDialogVisible","title","width","currentCustomer","_createBlock","_component_CustomerUpdateCard","key","customer","onUpdateSuccess","handleUpdateSuccess","onClose"],"sources":["D:\\数据库课程设计（饭店系统）\\restaurant-ordering-system\\src\\components\\customer\\VipCustomerForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"vip-customer-form\">\r\n    <div class=\"vip-customer-form-title\">\r\n        <div class=\"flex justify-between items-center mb-5\">\r\n            <h1>VIP顾客信息</h1>\r\n            <div>\r\n                <el-button type=\"primary\" @click=\"getVipCustomerList\">刷新VIP顾客列表</el-button>\r\n                <el-button type=\"primary\" @click=\"addVipCustomer\">添加VIP顾客</el-button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!---布局问题：span 默认是行内元素，子元素会垂直排列而不是水平排列\r\n        间距问题：没有 margin-bottom，标题和表格之间没有间距\r\n        对齐问题：没有 justify-content: space-between，标题和按钮会挤在一起\r\n        解决方法：将span改为div，并添加justify-between和items-center类-->\r\n    <el-table :data=\"customerList\" style=\"width: 100%\" stripe border>\r\n        <el-table-column prop=\"customerId\" label=\"顾客ID\" />\r\n        <el-table-column prop=\"customerName\" label=\"顾客姓名\" />\r\n        <el-table-column prop=\"customerPhone\" label=\"顾客电话\" />\r\n        <el-table-column prop=\"customerEmail\" label=\"顾客创建账号时间\" />\r\n\r\n        <el-table-column label=\"操作\">\r\n            <template #default=\"scope\">\r\n                <el-button type=\"primary\" @click=\"handleEdit(scope.row)\">更新</el-button>\r\n                <el-button type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n            </template>\r\n        </el-table-column>\r\n        <el-dialog v-model=\"updateDialogVisible\" title=\"更新顾客\" width=\"500px\">\r\n            <CustomerUpdateCard v-if=\"currentCustomer\" :customer=\"currentCustomer\" @update-success=\"handleUpdateSuccess\" @close=\"updateDialogVisible = false\" />\r\n        </el-dialog>\r\n    </el-table>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { useCustomerStore } from '@/stores/customer';\r\nimport CustomerUpdateCard from './CustomerUpdateCard.vue';\r\nexport default {\r\n    components: {\r\n        CustomerUpdateCard\r\n    },\r\n    name: 'VipCustomerForm',\r\n    data() {\r\n        return {\r\n            customerStore: useCustomerStore(),\r\n            customerList: [],\r\n            updateDialogVisible: false,\r\n            currentCustomer: null,\r\n            addVipCustomerDialogVisible: false\r\n        }\r\n    },\r\n    mounted() {\r\n        this.customerStore.fetchCustomerList();\r\n        // 筛选出不以0开头的顾客ID\r\n        this.customerList = this.customerStore.customerList.filter(customer => {\r\n            const customerId = customer.customerId?.toString() || '';\r\n            return !customerId.startsWith('0');\r\n        });\r\n    },\r\n    methods: {\r\n        getVipCustomerList() {\r\n            this.customerStore.fetchCustomerList();\r\n            // 筛选出不以0开头的顾客ID\r\n            this.customerList = this.customerStore.customerList.filter(customer => {\r\n                const customerId = customer.customerId?.toString() || '';\r\n                return !customerId.startsWith('0');\r\n            });\r\n        },\r\n        addVipCustomer() {\r\n            this.addVipCustomerDialogVisible = true;\r\n        },\r\n        handleEdit(row) {\r\n            this.updateDialogVisible = true;\r\n            this.currentCustomer = row;\r\n        },\r\n        handleDelete(row) {\r\n            this.customerStore.deleteCustomer(row.customerPhone);   \r\n            this.customerStore.fetchCustomerList();\r\n            // 重新筛选数据\r\n            this.customerList = this.customerStore.customerList.filter(customer => {\r\n                const customerId = customer.customerId?.toString() || '';\r\n                return !customerId.startsWith('0');\r\n            });\r\n        },\r\n        handleUpdateSuccess() {\r\n            this.updateDialogVisible = false;\r\n            this.customerStore.fetchCustomerList();\r\n            // 重新筛选数据\r\n            this.customerList = this.customerStore.customerList.filter(customer => {\r\n                const customerId = customer.customerId?.toString() || '';\r\n                return !customerId.startsWith('0');\r\n            });\r\n            this.currentCustomer = null;\r\n        }\r\n    },\r\n    \r\n}\r\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAmB;;EACzBA,KAAK,EAAC;AAAyB;;EAC3BA,KAAK,EAAC;AAAwC;;;;;;;uBAFvDC,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BNC,mBAAA,CAQM,OARNC,UAQM,GAPFD,mBAAA,CAMM,OANNE,UAMM,G,0BALFF,mBAAA,CAAgB,YAAZ,SAAO,sBACXA,mBAAA,CAGM,cAFFG,YAAA,CAA2EC,oBAAA;IAAhEC,IAAI,EAAC,SAAS;IAAEC,OAAK,EAAEC,QAAA,CAAAC;;IANlDC,OAAA,EAAAC,QAAA,CAMsE,MAASC,MAAA,QAAAA,MAAA,OAN/EC,gBAAA,CAMsE,WAAS,E;IAN/EC,CAAA;kCAOgBV,YAAA,CAAqEC,oBAAA;IAA1DC,IAAI,EAAC,SAAS;IAAEC,OAAK,EAAEC,QAAA,CAAAO;;IAPlDL,OAAA,EAAAC,QAAA,CAOkE,MAAOC,MAAA,QAAAA,MAAA,OAPzEC,gBAAA,CAOkE,SAAO,E;IAPzEC,CAAA;wCAWIE,mBAAA,4MAGuD,EACvDZ,YAAA,CAeWa,mBAAA;IAfAC,IAAI,EAAEC,KAAA,CAAAC,YAAY;IAAEC,KAAmB,EAAnB;MAAA;IAAA,CAAmB;IAACC,MAAM,EAAN,EAAM;IAACC,MAAM,EAAN;;IAf9Db,OAAA,EAAAC,QAAA,CAgBQ,MAAkD,CAAlDP,YAAA,CAAkDoB,0BAAA;MAAjCC,IAAI,EAAC,YAAY;MAACC,KAAK,EAAC;QACzCtB,YAAA,CAAoDoB,0BAAA;MAAnCC,IAAI,EAAC,cAAc;MAACC,KAAK,EAAC;QAC3CtB,YAAA,CAAqDoB,0BAAA;MAApCC,IAAI,EAAC,eAAe;MAACC,KAAK,EAAC;QAC5CtB,YAAA,CAAyDoB,0BAAA;MAAxCC,IAAI,EAAC,eAAe;MAACC,KAAK,EAAC;QAE5CtB,YAAA,CAKkBoB,0BAAA;MALDE,KAAK,EAAC;IAAI;MACZhB,OAAO,EAAAC,QAAA,CACyDgB,KADlD,KACrBvB,YAAA,CAAuEC,oBAAA;QAA5DC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAAqB,MAAA,IAAEpB,QAAA,CAAAqB,UAAU,CAACF,KAAK,CAACG,GAAG;;QAvBtEpB,OAAA,EAAAC,QAAA,CAuByE,MAAEC,MAAA,QAAAA,MAAA,OAvB3EC,gBAAA,CAuByE,IAAE,E;QAvB3EC,CAAA;wDAwBgBV,YAAA,CAAwEC,oBAAA;QAA7DC,IAAI,EAAC,QAAQ;QAAEC,OAAK,EAAAqB,MAAA,IAAEpB,QAAA,CAAAuB,YAAY,CAACJ,KAAK,CAACG,GAAG;;QAxBvEpB,OAAA,EAAAC,QAAA,CAwB0E,MAAEC,MAAA,QAAAA,MAAA,OAxB5EC,gBAAA,CAwB0E,IAAE,E;QAxB5EC,CAAA;;MAAAA,CAAA;QA2BQV,YAAA,CAEY4B,oBAAA;MA7BpBC,UAAA,EA2B4Bd,KAAA,CAAAe,mBAAmB;MA3B/C,uBAAAtB,MAAA,QAAAA,MAAA,MAAAgB,MAAA,IA2B4BT,KAAA,CAAAe,mBAAmB,GAAAN,MAAA;MAAEO,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;;MA3BpE1B,OAAA,EAAAC,QAAA,CA4BY,MAAoJ,CAA1HQ,KAAA,CAAAkB,eAAe,I,cAAzCC,YAAA,CAAoJC,6BAAA;QA5BhKC,GAAA;QA4BwDC,QAAQ,EAAEtB,KAAA,CAAAkB,eAAe;QAAGK,eAAc,EAAElC,QAAA,CAAAmC,mBAAmB;QAAGC,OAAK,EAAAhC,MAAA,QAAAA,MAAA,MAAAgB,MAAA,IAAET,KAAA,CAAAe,mBAAmB;kEA5BpJlB,mBAAA,e;MAAAF,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}