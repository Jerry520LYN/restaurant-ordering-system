{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { login, userLogin } from '@/api/auth';\nimport { register } from '@/api/auth';\nexport const useAuthStore = defineStore('auth', {\n  state: () => {\n    return {\n      isAuthenticated: false,\n      isUserAuthenticated: false,\n      token: null,\n      userToken: null,\n      user: null,\n      error: null\n    };\n  },\n  actions: {\n    async login(credentials) {\n      try {\n        console.log('开始登录，凭证:', credentials);\n        const result = await login(credentials);\n        console.log('登录API返回结果:', result);\n        this.token = result;\n        this.isAuthenticated = true;\n        this.error = null;\n        console.log('Token已保存到store:', this.token);\n        console.log('认证状态:', this.isAuthenticated);\n        return true;\n      } catch (error) {\n        console.error('登录失败:', error);\n        this.isAuthenticated = false;\n        this.token = null;\n        this.error = error;\n        return false;\n      }\n    },\n    async userLogin(credentials) {\n      try {\n        console.log('开始用户登录，凭证:', credentials);\n        const result = await userLogin(credentials);\n        console.log('用户登录API返回结果:', result);\n        this.userToken = result.token;\n        this.user = result.user;\n        this.isUserAuthenticated = true;\n        this.error = null;\n        console.log('用户Token已保存到store:', this.userToken);\n        console.log('用户认证状态:', this.isUserAuthenticated);\n        return true;\n      } catch (error) {\n        console.error('用户登录失败:', error);\n        this.isUserAuthenticated = false;\n        this.userToken = null;\n        this.user = null;\n        this.error = error;\n        return false;\n      }\n    },\n    logout() {\n      this.isAuthenticated = false;\n      this.isUserAuthenticated = false;\n      this.token = null;\n      this.userToken = null;\n      this.user = null;\n      this.error = null;\n    }\n  }\n});\nexport const useRegisterStore = defineStore('register', {\n  state: () => {\n    return {\n      isRegistering: false,\n      error: null\n    };\n  },\n  actions: {\n    async register(form) {\n      try {\n        await register(form);\n        this.isRegistering = true;\n        this.error = null;\n        return true;\n      } catch (error) {\n        this.error = error;\n        this.isRegistering = false;\n        this.error = error;\n        return false;\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","login","userLogin","register","useAuthStore","state","isAuthenticated","isUserAuthenticated","token","userToken","user","error","actions","credentials","console","log","result","logout","useRegisterStore","isRegistering","form"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/stores/auth.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport { login, userLogin } from '@/api/auth';\r\nimport { register } from '@/api/auth';\r\nexport const useAuthStore = defineStore('auth',{\r\n  state: () => {\r\n    return {\r\n      isAuthenticated: false,\r\n      isUserAuthenticated: false,\r\n      token: null,\r\n      userToken: null,\r\n      user: null,\r\n      error: null\r\n    }\r\n  },\r\n  actions:{\r\n    async login(credentials){\r\n      try{\r\n        console.log('开始登录，凭证:', credentials);\r\n        const result = await login(credentials);\r\n        console.log('登录API返回结果:', result);\r\n        this.token = result;\r\n        this.isAuthenticated = true;\r\n        this.error = null;\r\n        console.log('Token已保存到store:', this.token);\r\n        console.log('认证状态:', this.isAuthenticated);\r\n        return true;\r\n      }catch(error){ \r\n        console.error('登录失败:', error);\r\n        this.isAuthenticated = false;\r\n        this.token = null;\r\n        this.error = error;\r\n        return false;\r\n      }\r\n    },\r\n    async userLogin(credentials) {\r\n      try {\r\n        console.log('开始用户登录，凭证:', credentials);\r\n        const result = await userLogin(credentials);\r\n        console.log('用户登录API返回结果:', result);\r\n        this.userToken = result.token;\r\n        this.user = result.user;\r\n        this.isUserAuthenticated = true;\r\n        this.error = null;\r\n        console.log('用户Token已保存到store:', this.userToken);\r\n        console.log('用户认证状态:', this.isUserAuthenticated);\r\n        return true;\r\n      } catch (error) {\r\n        console.error('用户登录失败:', error);\r\n        this.isUserAuthenticated = false;\r\n        this.userToken = null;\r\n        this.user = null;\r\n        this.error = error;\r\n        return false;\r\n      }\r\n    },\r\n    logout() {\r\n      this.isAuthenticated = false;\r\n      this.isUserAuthenticated = false;\r\n      this.token = null;\r\n      this.userToken = null;\r\n      this.user = null;\r\n      this.error = null;\r\n    }\r\n  },\r\n});\r\n\r\nexport const useRegisterStore = defineStore('register',{\r\n  state: () => {\r\n    return {\r\n      isRegistering: false,\r\n      error: null\r\n    }\r\n  },\r\n  actions: {\r\n    async register(form) {\r\n      try {\r\n        await register(form);\r\n        this.isRegistering = true;\r\n        this.error = null;\r\n        return true;\r\n      } catch (error) {\r\n        this.error = error;\r\n        this.isRegistering = false;\r\n        this.error = error;\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}