{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { getMenuList } from '@/api/menu';\nexport default {\n  __name: 'UserMenuListView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loading = ref(false);\n    const menuItems = ref([]);\n    const searchQuery = ref('');\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n    const totalItems = ref(0);\n\n    // 过滤后的菜品列表\n    const filteredMenuItems = computed(() => {\n      if (!searchQuery.value) {\n        return menuItems.value;\n      }\n      return menuItems.value.filter(item => item.name.toLowerCase().includes(searchQuery.value.toLowerCase()) || item.description.toLowerCase().includes(searchQuery.value.toLowerCase()));\n    });\n\n    // 获取菜品列表\n    const fetchMenuItems = async () => {\n      loading.value = true;\n      try {\n        const response = await getMenuList();\n        if (response.success) {\n          menuItems.value = response.data || [];\n          totalItems.value = menuItems.value.length;\n        } else {\n          ElMessage.error('获取菜品列表失败');\n        }\n      } catch (error) {\n        ElMessage.error('获取菜品列表失败');\n        console.error('Error fetching menu items:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 分页处理\n    const handleSizeChange = val => {\n      pageSize.value = val;\n      currentPage.value = 1;\n    };\n    const handleCurrentChange = val => {\n      currentPage.value = val;\n    };\n    onMounted(() => {\n      fetchMenuItems();\n    });\n    const __returned__ = {\n      loading,\n      menuItems,\n      searchQuery,\n      currentPage,\n      pageSize,\n      totalItems,\n      filteredMenuItems,\n      fetchMenuItems,\n      handleSizeChange,\n      handleCurrentChange,\n      ref,\n      computed,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get getMenuList() {\n        return getMenuList;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","ElMessage","getMenuList","loading","menuItems","searchQuery","currentPage","pageSize","totalItems","filteredMenuItems","value","filter","item","name","toLowerCase","includes","description","fetchMenuItems","response","success","data","length","error","console","handleSizeChange","val","handleCurrentChange"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/views/UserMenuListView.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-white rounded-lg shadow-md p-6\">\r\n    <div class=\"mb-6\">\r\n      <h2 class=\"text-2xl font-bold text-gray-800 mb-2\">菜品列表</h2>\r\n      <p class=\"text-gray-600\">浏览所有可用菜品</p>\r\n    </div>\r\n\r\n    <!-- 搜索栏 -->\r\n    <div class=\"mb-6\">\r\n      <el-input\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"搜索菜品名称...\"\r\n        class=\"w-full max-w-md\"\r\n        clearable\r\n      >\r\n        <template #prefix>\r\n          <el-icon><search /></el-icon>\r\n        </template>\r\n      </el-input>\r\n    </div>\r\n\r\n    <!-- 菜品表格 -->\r\n    <el-table\r\n      :data=\"filteredMenuItems\"\r\n      style=\"width: 100%\"\r\n      v-loading=\"loading\"\r\n      stripe\r\n    >\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n      <el-table-column prop=\"name\" label=\"菜品名称\" />\r\n      <el-table-column prop=\"price\" label=\"价格\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          <span class=\"text-red-500 font-semibold\">¥{{ scope.row.price }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"description\" label=\"描述\" show-overflow-tooltip />\r\n      <el-table-column prop=\"category\" label=\"分类\" width=\"120\" />\r\n      <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n        <template #default=\"scope\">\r\n          <el-tag :type=\"scope.row.status === '可用' ? 'success' : 'danger'\">\r\n            {{ scope.row.status }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <div class=\"mt-6 flex justify-center\">\r\n      <el-pagination\r\n        v-model=\"currentPage\"\r\n        :page-size=\"pageSize\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :total=\"totalItems\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { getMenuList } from '@/api/menu'\r\n\r\nconst loading = ref(false)\r\nconst menuItems = ref([])\r\nconst searchQuery = ref('')\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst totalItems = ref(0)\r\n\r\n// 过滤后的菜品列表\r\nconst filteredMenuItems = computed(() => {\r\n  if (!searchQuery.value) {\r\n    return menuItems.value\r\n  }\r\n  return menuItems.value.filter(item =>\r\n    item.name.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\r\n    item.description.toLowerCase().includes(searchQuery.value.toLowerCase())\r\n  )\r\n})\r\n\r\n// 获取菜品列表\r\nconst fetchMenuItems = async () => {\r\n  loading.value = true\r\n  try {\r\n    const response = await getMenuList()\r\n    if (response.success) {\r\n      menuItems.value = response.data || []\r\n      totalItems.value = menuItems.value.length\r\n    } else {\r\n      ElMessage.error('获取菜品列表失败')\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('获取菜品列表失败')\r\n    console.error('Error fetching menu items:', error)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 分页处理\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  currentPage.value = 1\r\n}\r\n\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n}\r\n\r\nonMounted(() => {\r\n  fetchMenuItems()\r\n})\r\n</script> "],"mappings":";;AA8DA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,WAAW,QAAQ,YAAY;;;;;;;IAExC,MAAMC,OAAO,GAAGL,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMM,SAAS,GAAGN,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMO,WAAW,GAAGP,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMQ,WAAW,GAAGR,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMS,QAAQ,GAAGT,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMU,UAAU,GAAGV,GAAG,CAAC,CAAC,CAAC;;IAEzB;IACA,MAAMW,iBAAiB,GAAGV,QAAQ,CAAC,MAAM;MACvC,IAAI,CAACM,WAAW,CAACK,KAAK,EAAE;QACtB,OAAON,SAAS,CAACM,KAAK;MACxB;MACA,OAAON,SAAS,CAACM,KAAK,CAACC,MAAM,CAACC,IAAI,IAChCA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,WAAW,CAACK,KAAK,CAACI,WAAW,CAAC,CAAC,CAAC,IACjEF,IAAI,CAACI,WAAW,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,WAAW,CAACK,KAAK,CAACI,WAAW,CAAC,CAAC,CACzE,CAAC;IACH,CAAC,CAAC;;IAEF;IACA,MAAMG,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjCd,OAAO,CAACO,KAAK,GAAG,IAAI;MACpB,IAAI;QACF,MAAMQ,QAAQ,GAAG,MAAMhB,WAAW,CAAC,CAAC;QACpC,IAAIgB,QAAQ,CAACC,OAAO,EAAE;UACpBf,SAAS,CAACM,KAAK,GAAGQ,QAAQ,CAACE,IAAI,IAAI,EAAE;UACrCZ,UAAU,CAACE,KAAK,GAAGN,SAAS,CAACM,KAAK,CAACW,MAAM;QAC3C,CAAC,MAAM;UACLpB,SAAS,CAACqB,KAAK,CAAC,UAAU,CAAC;QAC7B;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdrB,SAAS,CAACqB,KAAK,CAAC,UAAU,CAAC;QAC3BC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,SAAS;QACRnB,OAAO,CAACO,KAAK,GAAG,KAAK;MACvB;IACF,CAAC;;IAED;IACA,MAAMc,gBAAgB,GAAIC,GAAG,IAAK;MAChClB,QAAQ,CAACG,KAAK,GAAGe,GAAG;MACpBnB,WAAW,CAACI,KAAK,GAAG,CAAC;IACvB,CAAC;IAED,MAAMgB,mBAAmB,GAAID,GAAG,IAAK;MACnCnB,WAAW,CAACI,KAAK,GAAGe,GAAG;IACzB,CAAC;IAEDzB,SAAS,CAAC,MAAM;MACdiB,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}