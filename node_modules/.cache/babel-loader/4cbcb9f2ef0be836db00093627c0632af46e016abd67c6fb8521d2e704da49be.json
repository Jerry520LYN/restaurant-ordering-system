{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"vip-customer-form\"\n};\nconst _hoisted_2 = {\n  class: \"vip-customer-form-title\"\n};\nconst _hoisted_3 = {\n  class: \"header-container\"\n};\nconst _hoisted_4 = {\n  class: \"button-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_CustomerUpdateCard = _resolveComponent(\"CustomerUpdateCard\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"VIP顾客信息\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.getVipCustomerList\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"刷新VIP顾客列表\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.addVipCustomer\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"添加VIP顾客\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])])]), _createVNode(_component_el_table, {\n    data: $data.customerList,\n    style: {\n      \"width\": \"100%\"\n    },\n    stripe: \"\",\n    border: \"\",\n    \"empty-text\": \"暂无VIP顾客信息\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"customerId\",\n      label: \"顾客ID\",\n      width: \"120\",\n      align: \"center\",\n      fixed: \"left\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"name\",\n      label: \"顾客姓名\",\n      width: \"160\",\n      align: \"center\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"phone\",\n      label: \"顾客电话\",\n      width: \"180\",\n      align: \"center\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"createTime\",\n      label: \"注册时间\",\n      width: \"160\",\n      align: \"center\",\n      formatter: $options.formatDate\n    }, null, 8 /* PROPS */, [\"formatter\"]), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"160\",\n      align: \"center\",\n      fixed: \"right\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        icon: \"el-icon-edit\",\n        onClick: $event => $options.handleEdit(scope.row)\n      }, {\n        default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"更新\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"danger\",\n        size: \"small\",\n        icon: \"el-icon-delete\",\n        onClick: $event => $options.handleDelete(scope.row)\n      }, {\n        default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"删除\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_dialog, {\n      modelValue: $data.updateDialogVisible,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.updateDialogVisible = $event),\n      title: \"更新顾客\",\n      width: \"500px\"\n    }, {\n      default: _withCtx(() => [$data.currentCustomer ? (_openBlock(), _createBlock(_component_CustomerUpdateCard, {\n        key: 0,\n        customer: $data.currentCustomer,\n        onUpdateSuccess: $options.handleUpdateSuccess,\n        onClose: _cache[0] || (_cache[0] = $event => $data.updateDialogVisible = false)\n      }, null, 8 /* PROPS */, [\"customer\", \"onUpdateSuccess\"])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_el_button","type","onClick","$options","getVipCustomerList","default","_withCtx","_cache","_createTextVNode","_","addVipCustomer","_component_el_table","data","$data","customerList","style","stripe","border","_component_el_table_column","prop","label","width","align","fixed","formatter","formatDate","scope","size","icon","$event","handleEdit","row","handleDelete","_component_el_dialog","modelValue","updateDialogVisible","title","currentCustomer","_createBlock","_component_CustomerUpdateCard","key","customer","onUpdateSuccess","handleUpdateSuccess","onClose","_createCommentVNode"],"sources":["D:\\数据库课程设计（饭店系统）\\restaurant-ordering-system\\src\\components\\customer\\VipCustomerForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"vip-customer-form\">\r\n        <div class=\"vip-customer-form-title\">\r\n            <div class=\"header-container\">\r\n                <h2>VIP顾客信息</h2>\r\n                <div class=\"button-group\">\r\n                    <el-button type=\"primary\" @click=\"getVipCustomerList\">刷新VIP顾客列表</el-button>\r\n                    <el-button type=\"primary\" @click=\"addVipCustomer\">添加VIP顾客</el-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <el-table :data=\"customerList\" style=\"width: 100%\" stripe border empty-text=\"暂无VIP顾客信息\">\r\n            <el-table-column prop=\"customerId\" label=\"顾客ID\" width=\"120\" align=\"center\" fixed=\"left\" />\r\n            <el-table-column prop=\"name\" label=\"顾客姓名\" width=\"160\" align=\"center\" />\r\n            <el-table-column prop=\"phone\" label=\"顾客电话\" width=\"180\" align=\"center\" />\r\n            <el-table-column prop=\"createTime\" label=\"注册时间\" width=\"160\" align=\"center\"\r\n                :formatter=\"formatDate\" />\r\n            <el-table-column label=\"操作\" width=\"160\" align=\"center\" fixed=\"right\">\r\n                <template #default=\"scope\">\r\n                    <el-button type=\"primary\" size=\"small\" icon=\"el-icon-edit\" @click=\"handleEdit(scope.row)\">更新</el-button>\r\n                    <el-button type=\"danger\" size=\"small\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n            <el-dialog v-model=\"updateDialogVisible\" title=\"更新顾客\" width=\"500px\">\r\n                <CustomerUpdateCard v-if=\"currentCustomer\" :customer=\"currentCustomer\" @update-success=\"handleUpdateSuccess\" @close=\"updateDialogVisible = false\" />\r\n            </el-dialog>\r\n        </el-table>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { useCustomerStore } from '@/stores/customer';\r\nimport CustomerUpdateCard from './CustomerUpdateCard.vue';\r\nexport default {\r\n    components: {\r\n        CustomerUpdateCard\r\n    },\r\n    name: 'VipCustomerForm',\r\n    data() {\r\n        return {\r\n            customerStore: useCustomerStore(),\r\n            customerList: [],\r\n            updateDialogVisible: false,\r\n            currentCustomer: null,\r\n            addVipCustomerDialogVisible: false\r\n        }\r\n    },\r\n    mounted() {\r\n        this.customerStore.fetchCustomerList();\r\n        // 筛选出不以0开头的顾客ID\r\n        this.customerList = this.customerStore.customerList.filter(customer => {\r\n            const customerId = customer.customerId?.toString() || '';\r\n            return !customerId.startsWith('0');\r\n        });\r\n    },\r\n    methods: {\r\n        getVipCustomerList() {\r\n            this.customerStore.fetchCustomerList();\r\n            // 筛选出不以0开头的顾客ID\r\n            this.customerList = this.customerStore.customerList.filter(customer => {\r\n                const customerId = customer.customerId?.toString() || '';\r\n                return !customerId.startsWith('0');\r\n            });\r\n        },\r\n        addVipCustomer() {\r\n            this.addVipCustomerDialogVisible = true;\r\n        },\r\n        handleEdit(row) {\r\n            this.updateDialogVisible = true;\r\n            this.currentCustomer = row;\r\n        },\r\n        handleDelete(row) {\r\n            this.customerStore.deleteCustomer(row.phone);   \r\n            this.customerStore.fetchCustomerList();\r\n            // 重新筛选数据\r\n            this.customerList = this.customerStore.customerList.filter(customer => {\r\n                const customerId = customer.customerId?.toString() || '';\r\n                return !customerId.startsWith('0');\r\n            });\r\n        },\r\n        handleUpdateSuccess() {\r\n            this.updateDialogVisible = false;\r\n            this.customerStore.fetchCustomerList();\r\n            // 重新筛选数据\r\n            this.customerList = this.customerStore.customerList.filter(customer => {\r\n                const customerId = customer.customerId?.toString() || '';\r\n                return !customerId.startsWith('0');\r\n            });\r\n            this.currentCustomer = null;\r\n        },\r\n        formatDate(row, column, cellValue) {\r\n            if (!cellValue) return '';\r\n            // 只保留年月日\r\n            return cellValue.toString().slice(0, 10);\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.header-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 1.25rem;\r\n}\r\n\r\n.button-group {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n}\r\n\r\n.vip-customer-form-title h2 {\r\n    margin: 0;\r\n    color: #374151;\r\n    font-size: 1.25rem;\r\n    font-weight: bold;\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAmB;;EACrBA,KAAK,EAAC;AAAyB;;EAC3BA,KAAK,EAAC;AAAkB;;EAEpBA,KAAK,EAAC;AAAc;;;;;;;uBAJrCC,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBFC,mBAAA,CAQM,OARNC,UAQM,GAPFD,mBAAA,CAMM,OANNE,UAMM,G,0BALFF,mBAAA,CAAgB,YAAZ,SAAO,sBACXA,mBAAA,CAGM,OAHNG,UAGM,GAFFC,YAAA,CAA2EC,oBAAA;IAAhEC,IAAI,EAAC,SAAS;IAAEC,OAAK,EAAEC,QAAA,CAAAC;;IANtDC,OAAA,EAAAC,QAAA,CAM0E,MAASC,MAAA,QAAAA,MAAA,OANnFC,gBAAA,CAM0E,WAAS,E;IANnFC,CAAA;kCAOoBV,YAAA,CAAqEC,oBAAA;IAA1DC,IAAI,EAAC,SAAS;IAAEC,OAAK,EAAEC,QAAA,CAAAO;;IAPtDL,OAAA,EAAAC,QAAA,CAOsE,MAAOC,MAAA,QAAAA,MAAA,OAP7EC,gBAAA,CAOsE,SAAO,E;IAP7EC,CAAA;wCAWQV,YAAA,CAeWY,mBAAA;IAfAC,IAAI,EAAEC,KAAA,CAAAC,YAAY;IAAEC,KAAmB,EAAnB;MAAA;IAAA,CAAmB;IAACC,MAAM,EAAN,EAAM;IAACC,MAAM,EAAN,EAAM;IAAC,YAAU,EAAC;;IAXpFZ,OAAA,EAAAC,QAAA,CAYY,MAA0F,CAA1FP,YAAA,CAA0FmB,0BAAA;MAAzEC,IAAI,EAAC,YAAY;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC,QAAQ;MAACC,KAAK,EAAC;QACjFxB,YAAA,CAAuEmB,0BAAA;MAAtDC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC;QAC5DvB,YAAA,CAAwEmB,0BAAA;MAAvDC,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC;QAC7DvB,YAAA,CAC8BmB,0BAAA;MADbC,IAAI,EAAC,YAAY;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC,QAAQ;MACrEE,SAAS,EAAErB,QAAA,CAAAsB;4CAChB1B,YAAA,CAKkBmB,0BAAA;MALDE,KAAK,EAAC,IAAI;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC,QAAQ;MAACC,KAAK,EAAC;;MAC9ClB,OAAO,EAAAC,QAAA,CAC0FoB,KADnF,KACrB3B,YAAA,CAAwGC,oBAAA;QAA7FC,IAAI,EAAC,SAAS;QAAC0B,IAAI,EAAC,OAAO;QAACC,IAAI,EAAC,cAAc;QAAE1B,OAAK,EAAA2B,MAAA,IAAE1B,QAAA,CAAA2B,UAAU,CAACJ,KAAK,CAACK,GAAG;;QAnB3G1B,OAAA,EAAAC,QAAA,CAmB8G,MAAEC,MAAA,QAAAA,MAAA,OAnBhHC,gBAAA,CAmB8G,IAAE,E;QAnBhHC,CAAA;wDAoBoBV,YAAA,CAA2GC,oBAAA;QAAhGC,IAAI,EAAC,QAAQ;QAAC0B,IAAI,EAAC,OAAO;QAACC,IAAI,EAAC,gBAAgB;QAAE1B,OAAK,EAAA2B,MAAA,IAAE1B,QAAA,CAAA6B,YAAY,CAACN,KAAK,CAACK,GAAG;;QApB9G1B,OAAA,EAAAC,QAAA,CAoBiH,MAAEC,MAAA,QAAAA,MAAA,OApBnHC,gBAAA,CAoBiH,IAAE,E;QApBnHC,CAAA;;MAAAA,CAAA;QAuBYV,YAAA,CAEYkC,oBAAA;MAzBxBC,UAAA,EAuBgCrB,KAAA,CAAAsB,mBAAmB;MAvBnD,uBAAA5B,MAAA,QAAAA,MAAA,MAAAsB,MAAA,IAuBgChB,KAAA,CAAAsB,mBAAmB,GAAAN,MAAA;MAAEO,KAAK,EAAC,MAAM;MAACf,KAAK,EAAC;;MAvBxEhB,OAAA,EAAAC,QAAA,CAwBgB,MAAoJ,CAA1HO,KAAA,CAAAwB,eAAe,I,cAAzCC,YAAA,CAAoJC,6BAAA;QAxBpKC,GAAA;QAwB4DC,QAAQ,EAAE5B,KAAA,CAAAwB,eAAe;QAAGK,eAAc,EAAEvC,QAAA,CAAAwC,mBAAmB;QAAGC,OAAK,EAAArC,MAAA,QAAAA,MAAA,MAAAsB,MAAA,IAAEhB,KAAA,CAAAsB,mBAAmB;kEAxBxJU,mBAAA,e;MAAApC,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}