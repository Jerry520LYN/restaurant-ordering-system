{"ast":null,"code":"import { useCustomerStore } from '@/stores/customer';\nimport { ref, watch } from 'vue';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'CustomerUpdateCard',\n  props: {\n    customer: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: ['close', 'update-success'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const customerStore = useCustomerStore();\n    const oldPhone = ref(props.customer.phone);\n    const emit = __emit;\n    watch(props.customer, newVal => {\n      if (newVal) {\n        customerForm.value.id = newVal.id;\n        customerForm.value.name = newVal.name;\n        customerForm.value.phone = newVal.phone;\n        oldPhone.value = newVal.phone;\n      }\n    });\n    const handleCancel = () => {\n      ElMessage.info('取消更新');\n      emit('close');\n    };\n    const handleUpdate = async () => {\n      if (!customerForm.value.name || !customerForm.value.phone) {\n        alert('请填写完整信息');\n        return;\n      }\n      await customerStore.updateCustomer({\n        id: customerForm.value.id,\n        name: customerForm.value.name,\n        phone: customerForm.value.phone,\n        oldphone: oldPhone.value\n      });\n      emit('update-success');\n    };\n    const __returned__ = {\n      props,\n      customerStore,\n      oldPhone,\n      emit,\n      handleCancel,\n      handleUpdate,\n      get useCustomerStore() {\n        return useCustomerStore;\n      },\n      ref,\n      watch,\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useCustomerStore","ref","watch","ElMessage","props","__props","customerStore","oldPhone","customer","phone","emit","__emit","newVal","customerForm","value","id","name","handleCancel","info","handleUpdate","alert","updateCustomer","oldphone"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/components/customer/CustomerUpdateCard.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <el-form :model=\"customerForm\" label-width=\"120px\">\r\n            <el-form-item label=\"顾客ID\">\r\n                <el-input v-model=\"customerForm.id\"/>\r\n            </el-form-item>\r\n            <el-form-item label=\"顾客姓名\">\r\n                <el-input v-model=\"customerForm.name\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"顾客电话\">\r\n                <el-input v-model=\"customerForm.phone\" />\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"handleUpdate\">更新</el-button>\r\n                <el-button @click=\"handleCancel\">取消</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </el-card>\r\n</template>\r\n\r\n<script setup>\r\nimport { useCustomerStore } from '@/stores/customer';\r\nimport { ref, watch, defineEmits, defineProps } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nconst props = defineProps({\r\n    customer: {\r\n        type: Object,\r\n        default: () => ({})\r\n    }\r\n});\r\n\r\nconst customerStore = useCustomerStore();\r\n\r\nconst oldPhone = ref(props.customer.phone);\r\n\r\n\r\nconst emit = defineEmits(['close', 'update-success']);\r\n\r\n\r\nwatch(props.customer, (newVal) => {\r\n    if (newVal) {\r\n        customerForm.value.id = newVal.id;\r\n        customerForm.value.name = newVal.name;\r\n        customerForm.value.phone = newVal.phone;\r\n\r\n        oldPhone.value = newVal.phone;\r\n    }\r\n});\r\n\r\nconst handleCancel = () => {\r\n    ElMessage.info('取消更新');\r\n    emit('close');\r\n};\r\n\r\nconst handleUpdate = async () => {\r\n    if (!customerForm.value.name || !customerForm.value.phone ) {\r\n        alert('请填写完整信息');\r\n        return;\r\n    }\r\n    await customerStore.updateCustomer({\r\n        id: customerForm.value.id,\r\n        name: customerForm.value.name,\r\n        phone: customerForm.value.phone,\r\n        oldphone: oldPhone.value\r\n    });\r\n    emit('update-success');\r\n};\r\n</script>"],"mappings":"AAqBA,SAASA,gBAAgB,QAAQ,mBAAmB;AACpD,SAASC,GAAG,EAAEC,KAA+B,QAAQ,KAAK;AAC1D,SAASC,SAAS,QAAQ,cAAc;;;;;;;;;;;;;;;IACxC,MAAMC,KAAK,GAAGC,OAKZ;IAEF,MAAMC,aAAa,GAAGN,gBAAgB,CAAC,CAAC;IAExC,MAAMO,QAAQ,GAAGN,GAAG,CAACG,KAAK,CAACI,QAAQ,CAACC,KAAK,CAAC;IAG1C,MAAMC,IAAI,GAAGC,MAAwC;IAGrDT,KAAK,CAACE,KAAK,CAACI,QAAQ,EAAGI,MAAM,IAAK;MAC9B,IAAIA,MAAM,EAAE;QACRC,YAAY,CAACC,KAAK,CAACC,EAAE,GAAGH,MAAM,CAACG,EAAE;QACjCF,YAAY,CAACC,KAAK,CAACE,IAAI,GAAGJ,MAAM,CAACI,IAAI;QACrCH,YAAY,CAACC,KAAK,CAACL,KAAK,GAAGG,MAAM,CAACH,KAAK;QAEvCF,QAAQ,CAACO,KAAK,GAAGF,MAAM,CAACH,KAAK;MACjC;IACJ,CAAC,CAAC;IAEF,MAAMQ,YAAY,GAAGA,CAAA,KAAM;MACvBd,SAAS,CAACe,IAAI,CAAC,MAAM,CAAC;MACtBR,IAAI,CAAC,OAAO,CAAC;IACjB,CAAC;IAED,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI,CAACN,YAAY,CAACC,KAAK,CAACE,IAAI,IAAI,CAACH,YAAY,CAACC,KAAK,CAACL,KAAK,EAAG;QACxDW,KAAK,CAAC,SAAS,CAAC;QAChB;MACJ;MACA,MAAMd,aAAa,CAACe,cAAc,CAAC;QAC/BN,EAAE,EAAEF,YAAY,CAACC,KAAK,CAACC,EAAE;QACzBC,IAAI,EAAEH,YAAY,CAACC,KAAK,CAACE,IAAI;QAC7BP,KAAK,EAAEI,YAAY,CAACC,KAAK,CAACL,KAAK;QAC/Ba,QAAQ,EAAEf,QAAQ,CAACO;MACvB,CAAC,CAAC;MACFJ,IAAI,CAAC,gBAAgB,CAAC;IAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}