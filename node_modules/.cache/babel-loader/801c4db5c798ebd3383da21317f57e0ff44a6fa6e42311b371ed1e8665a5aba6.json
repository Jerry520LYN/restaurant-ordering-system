{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"menu-form\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_image = _resolveComponent(\"el-image\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: $data.menuData,\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"dishId\",\n      label: \"菜品ID\",\n      width: \"100\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"dishName\",\n      label: \"菜品名称\",\n      width: \"150\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"price\",\n      label: \"价格\",\n      width: \"120\"\n    }, {\n      default: _withCtx(scope => [_createTextVNode(\" ¥\" + _toDisplayString(scope.row.price), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      prop: \"description\",\n      label: \"描述\",\n      width: \"200\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"imageUrl\",\n      label: \"图片\",\n      width: \"150\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_image, {\n        src: scope.row.imageUrl,\n        style: {\n          \"width\": \"50px\",\n          \"height\": \"50px\"\n        },\n        fit: \"cover\"\n      }, null, 8 /* PROPS */, [\"src\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $data.loading]])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createBlock","_component_el_table","data","$data","menuData","style","default","_withCtx","_createVNode","_component_el_table_column","prop","label","width","scope","_createTextVNode","_toDisplayString","row","price","_","_component_el_image","src","imageUrl","fit","loading"],"sources":["D:\\数据库课程设计（饭店系统）\\restaurant-ordering-system\\src\\components\\menu\\MenuForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"menu-form\">\r\n    <el-table\r\n      :data=\"menuData\"\r\n      style=\"width: 100%\"\r\n      v-loading=\"loading\">\r\n      <el-table-column\r\n        prop=\"dishId\"\r\n        label=\"菜品ID\"\r\n        width=\"100\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"dishName\"\r\n        label=\"菜品名称\"\r\n        width=\"150\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"price\"\r\n        label=\"价格\"\r\n        width=\"120\">\r\n        <template #default=\"scope\">\r\n          ¥{{ scope.row.price }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"description\"\r\n        label=\"描述\"\r\n        width=\"200\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"imageUrl\"\r\n        label=\"图片\"\r\n        width=\"150\">\r\n        <template #default=\"scope\">\r\n          <el-image\r\n            :src=\"scope.row.imageUrl\"\r\n            style=\"width: 50px; height: 50px\"\r\n            fit=\"cover\">\r\n          </el-image>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useMenuStore } from '@/stores/menu'\r\n\r\nexport default {\r\n  name: 'MenuForm',\r\n  data() {\r\n    return {\r\n      menuData: [],\r\n      loading: false\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getMenuList()\r\n  },\r\n  methods: {\r\n    async getMenuList() {\r\n      this.loading = true\r\n      try {\r\n        const result = await useMenuStore.get('/menu/list')\r\n        // 检查返回的数据是否为数组格式 [{}，{}，{}]\r\n        if (Array.isArray(result) && result.length > 0) {\r\n          this.menuData = result\r\n        } else {\r\n          this.$message.error('获取菜单失败：数据格式不正确')\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取菜单失败')\r\n        console.error('获取菜单失败:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.menu-form {\r\n  padding: 20px;\r\n}\r\n</style>\r\n\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;;;;;uBAAtBC,mBAAA,CAyCM,OAzCNC,UAyCM,G,+BAxCJC,YAAA,CAuCWC,mBAAA;IAtCRC,IAAI,EAAEC,KAAA,CAAAC,QAAQ;IACfC,KAAmB,EAAnB;MAAA;IAAA;;IAJNC,OAAA,EAAAC,QAAA,CAMM,MAIkB,CAJlBC,YAAA,CAIkBC,0BAAA;MAHhBC,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAC,MAAM;MACZC,KAAK,EAAC;QAERJ,YAAA,CAIkBC,0BAAA;MAHhBC,IAAI,EAAC,UAAU;MACfC,KAAK,EAAC,MAAM;MACZC,KAAK,EAAC;QAERJ,YAAA,CAOkBC,0BAAA;MANhBC,IAAI,EAAC,OAAO;MACZC,KAAK,EAAC,IAAI;MACVC,KAAK,EAAC;;MACKN,OAAO,EAAAC,QAAA,CACfM,KADsB,KApBjCC,gBAAA,CAoBmC,IACxB,GAAAC,gBAAA,CAAGF,KAAK,CAACG,GAAG,CAACC,KAAK,iB;MArB7BC,CAAA;QAwBMV,YAAA,CAIkBC,0BAAA;MAHhBC,IAAI,EAAC,aAAa;MAClBC,KAAK,EAAC,IAAI;MACVC,KAAK,EAAC;QAERJ,YAAA,CAWkBC,0BAAA;MAVhBC,IAAI,EAAC,UAAU;MACfC,KAAK,EAAC,IAAI;MACVC,KAAK,EAAC;;MACKN,OAAO,EAAAC,QAAA,CAKLM,KALY,KACvBL,YAAA,CAIWW,mBAAA;QAHRC,GAAG,EAAEP,KAAK,CAACG,GAAG,CAACK,QAAQ;QACxBhB,KAAiC,EAAjC;UAAA;UAAA;QAAA,CAAiC;QACjCiB,GAAG,EAAC;;MArChBJ,CAAA;;IAAAA,CAAA;sDAKiBf,KAAA,CAAAoB,OAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}