{"ast":null,"code":"import instance from '@/utils/request';\nimport { useAuthStore } from '@/stores/auth';\nconst authStore = useAuthStore();\nexport const getCustomerList = async () => {\n  try {\n    const token = authStore.token; // 获取用户token\n    const response = await instance.get('/customers/all', {\n      params: {\n        authenticity: token\n      }\n    });\n    return response;\n  } catch (error) {\n    throw error.response?.data?.message || '获取顾客列表失败';\n  }\n};\nexport const addCustomer = async customerData => {\n  try {\n    const token = authStore.token;\n    const params = new URLSearchParams();\n    for (let key in customerData) {\n      params.append(key, customerData[key]);\n    }\n    const response = await instance.post('/customers/add', null, {\n      params: {\n        authenticity: token,\n        ...params\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data?.message || '添加顾客失败';\n  }\n};\nexport const deleteCustomer = async phone => {\n  try {\n    const token = authStore.token;\n    const params = new URLSearchParams();\n    params.append('phone', phone);\n    const response = await instance.delete(`/customers/delete`, {\n      params: {\n        authenticity: token,\n        ...params\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data?.message || '删除顾客失败';\n  }\n};\nexport const updateCustomer = async customerData => {\n  try {\n    const token = authStore.token;\n    const params = new URLSearchParams();\n    for (let key in customerData) {\n      params.append(key, customerData[key]);\n    }\n    const response = await instance.put('/customers/updateCustomer', null, {\n      params: {\n        authenticity: token,\n        ...params\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data?.message || '更新顾客失败';\n  }\n};","map":{"version":3,"names":["instance","useAuthStore","authStore","getCustomerList","token","response","get","params","authenticity","error","data","message","addCustomer","customerData","URLSearchParams","key","append","post","deleteCustomer","phone","delete","updateCustomer","put"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/api/customer.js"],"sourcesContent":["import instance from '@/utils/request';\r\nimport { useAuthStore } from '@/stores/auth';\r\nconst authStore = useAuthStore();\r\nexport const getCustomerList = async () => {\r\n    try {\r\n    const token = authStore.token;  // 获取用户token\r\n    const response = await instance.get('/customers/all', {\r\n        params: {\r\n            authenticity: token\r\n        }\r\n    });\r\n    return response;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '获取顾客列表失败';\r\n    }\r\n}\r\n\r\nexport const addCustomer = async (customerData) => {\r\n    try {\r\n        const token = authStore.token;\r\n        const params = new URLSearchParams();\r\n        for (let key in customerData) {\r\n            params.append(key, customerData[key]);\r\n        }\r\n        const response = await instance.post('/customers/add', null, {\r\n            params: {\r\n                authenticity: token,\r\n                ...params\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '添加顾客失败';\r\n    }\r\n}\r\nexport const deleteCustomer = async (phone) => {\r\n    try {\r\n        const token = authStore.token;\r\n        const params = new URLSearchParams();\r\n        params.append('phone', phone);\r\n        const response = await instance.delete(`/customers/delete`, {\r\n            params: {\r\n                authenticity: token,\r\n                ...params\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '删除顾客失败';\r\n    }\r\n}\r\nexport const updateCustomer = async (customerData) => {\r\n    try {\r\n        const token = authStore.token;\r\n        const params = new URLSearchParams();\r\n        for (let key in customerData) {\r\n            params.append(key, customerData[key]);\r\n        }\r\n        const response = await instance.put('/customers/updateCustomer', null, {\r\n            params: {\r\n                authenticity: token,\r\n                ...params\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || '更新顾客失败';\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,iBAAiB;AACtC,SAASC,YAAY,QAAQ,eAAe;AAC5C,MAAMC,SAAS,GAAGD,YAAY,CAAC,CAAC;AAChC,OAAO,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACJ,MAAMC,KAAK,GAAGF,SAAS,CAACE,KAAK,CAAC,CAAE;IAChC,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,GAAG,CAAC,gBAAgB,EAAE;MAClDC,MAAM,EAAE;QACJC,YAAY,EAAEJ;MAClB;IACJ,CAAC,CAAC;IACF,OAAOC,QAAQ;EACf,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACJ,QAAQ,EAAEK,IAAI,EAAEC,OAAO,IAAI,UAAU;EACrD;AACJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOC,YAAY,IAAK;EAC/C,IAAI;IACA,MAAMT,KAAK,GAAGF,SAAS,CAACE,KAAK;IAC7B,MAAMG,MAAM,GAAG,IAAIO,eAAe,CAAC,CAAC;IACpC,KAAK,IAAIC,GAAG,IAAIF,YAAY,EAAE;MAC1BN,MAAM,CAACS,MAAM,CAACD,GAAG,EAAEF,YAAY,CAACE,GAAG,CAAC,CAAC;IACzC;IACA,MAAMV,QAAQ,GAAG,MAAML,QAAQ,CAACiB,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE;MACzDV,MAAM,EAAE;QACJC,YAAY,EAAEJ,KAAK;QACnB,GAAGG;MACP;IACJ,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACK,IAAI;EACxB,CAAC,CAAC,OAAOD,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACJ,QAAQ,EAAEK,IAAI,EAAEC,OAAO,IAAI,QAAQ;EACnD;AACJ,CAAC;AACD,OAAO,MAAMO,cAAc,GAAG,MAAOC,KAAK,IAAK;EAC3C,IAAI;IACA,MAAMf,KAAK,GAAGF,SAAS,CAACE,KAAK;IAC7B,MAAMG,MAAM,GAAG,IAAIO,eAAe,CAAC,CAAC;IACpCP,MAAM,CAACS,MAAM,CAAC,OAAO,EAAEG,KAAK,CAAC;IAC7B,MAAMd,QAAQ,GAAG,MAAML,QAAQ,CAACoB,MAAM,CAAC,mBAAmB,EAAE;MACxDb,MAAM,EAAE;QACJC,YAAY,EAAEJ,KAAK;QACnB,GAAGG;MACP;IACJ,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACK,IAAI;EACxB,CAAC,CAAC,OAAOD,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACJ,QAAQ,EAAEK,IAAI,EAAEC,OAAO,IAAI,QAAQ;EACnD;AACJ,CAAC;AACD,OAAO,MAAMU,cAAc,GAAG,MAAOR,YAAY,IAAK;EAClD,IAAI;IACA,MAAMT,KAAK,GAAGF,SAAS,CAACE,KAAK;IAC7B,MAAMG,MAAM,GAAG,IAAIO,eAAe,CAAC,CAAC;IACpC,KAAK,IAAIC,GAAG,IAAIF,YAAY,EAAE;MAC1BN,MAAM,CAACS,MAAM,CAACD,GAAG,EAAEF,YAAY,CAACE,GAAG,CAAC,CAAC;IACzC;IACA,MAAMV,QAAQ,GAAG,MAAML,QAAQ,CAACsB,GAAG,CAAC,2BAA2B,EAAE,IAAI,EAAE;MACnEf,MAAM,EAAE;QACJC,YAAY,EAAEJ,KAAK;QACnB,GAAGG;MACP;IACJ,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACK,IAAI;EACxB,CAAC,CAAC,OAAOD,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACJ,QAAQ,EAAEK,IAAI,EAAEC,OAAO,IAAI,QAAQ;EACnD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}