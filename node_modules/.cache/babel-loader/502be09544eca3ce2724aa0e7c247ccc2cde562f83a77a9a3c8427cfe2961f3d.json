{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { ElMessage, ElLoading } from 'element-plus';\nimport MenuCard from './MenuCard.vue';\nimport { useMenuStore } from '@/stores/menu';\n\n// 响应式数据\n\nexport default {\n  __name: 'MenuCardLayout',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const startDate = ref('');\n    const endDate = ref('');\n    const menuStore = useMenuStore();\n\n    // 设置默认日期（当前日期前后7天）\n    const setDefaultDates = () => {\n      const today = new Date();\n      const sevenDaysAgo = new Date(today);\n      sevenDaysAgo.setDate(today.getDate() - 7);\n      startDate.value = sevenDaysAgo.toISOString().split('T')[0];\n      endDate.value = today.toISOString().split('T')[0];\n    };\n\n    // 确认按钮点击事件\n    const handleConfirm = async () => {\n      if (!startDate.value || !endDate.value) {\n        ElMessage.warning('请选择开始和结束日期');\n        return;\n      }\n      if (new Date(startDate.value) > new Date(endDate.value)) {\n        ElMessage.error('开始日期不能晚于结束日期');\n        return;\n      }\n      await menuStore.fetchHotDishes(startDate.value, endDate.value);\n    };\n\n    // 组件挂载时设置默认日期并获取数据\n    onMounted(() => {\n      setDefaultDates();\n      fetchHotDishes();\n    });\n    const __returned__ = {\n      startDate,\n      endDate,\n      menuStore,\n      setDefaultDates,\n      handleConfirm,\n      ref,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElLoading() {\n        return ElLoading;\n      },\n      MenuCard,\n      get useMenuStore() {\n        return useMenuStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","ElMessage","ElLoading","MenuCard","useMenuStore","startDate","endDate","menuStore","setDefaultDates","today","Date","sevenDaysAgo","setDate","getDate","value","toISOString","split","handleConfirm","warning","error","fetchHotDishes"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/components/menu/MenuCardLayout.vue"],"sourcesContent":["<template>\r\n    <div class=\"menu-card-layout\">\r\n        <div class=\"hot-dishes-header\">\r\n            <h2 class=\"hot-dishes-title\">热品推荐</h2>\r\n            <div class=\"date-picker-container\">\r\n                <el-date-picker\r\n                    v-model=\"startDate\"\r\n                    type=\"date\"\r\n                    placeholder=\"开始日期\"\r\n                    format=\"YYYY-MM-DD\"\r\n                    value-format=\"YYYY-MM-DD\"\r\n                    style=\"margin-right: 10px;\"\r\n                />\r\n                <el-date-picker\r\n                    v-model=\"endDate\"\r\n                    type=\"date\"\r\n                    placeholder=\"结束日期\"\r\n                    format=\"YYYY-MM-DD\"\r\n                    value-format=\"YYYY-MM-DD\"\r\n                    style=\"margin-right: 10px;\"\r\n                />\r\n                <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n            </div>\r\n        </div>\r\n        \r\n        <!-- 加载状态 -->\r\n        <div v-if=\"menuStore.loading\" class=\"loading-container\">\r\n            <el-loading :fullscreen=\"false\" />\r\n        </div>\r\n        \r\n        <!-- 错误信息 -->\r\n        <div v-if=\"menuStore.error\" class=\"error-message\">\r\n            <el-alert :title=\"menuStore.error\" type=\"error\" show-icon />\r\n        </div>\r\n        \r\n        <!-- 菜单卡片列表 -->\r\n        <el-row v-if=\"!menuStore.loading && !menuStore.error\" :gutter=\"20\">\r\n            <el-col \r\n                v-for=\"dish in (menuStore.hotDishes || []).slice(0, 4)\" \r\n                :key=\"dish.dish_id\" \r\n                :xs=\"24\" \r\n                :sm=\"12\" \r\n                :md=\"8\" \r\n                :lg=\"6\"\r\n                style=\"margin-bottom: 20px;\"\r\n            >\r\n                <MenuCard :dish=\"dish\" />\r\n            </el-col>\r\n        </el-row>\r\n        \r\n        <!-- 无数据提示 -->\r\n        <div v-if=\"!menuStore.loading && !menuStore.error && (!menuStore.hotDishes || menuStore.hotDishes.length === 0)\" class=\"no-data\">\r\n            <el-empty description=\"暂无热品推荐数据\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { ElMessage, ElLoading } from 'element-plus';\r\nimport MenuCard from './MenuCard.vue';\r\nimport { useMenuStore } from '@/stores/menu';\r\n\r\n// 响应式数据\r\nconst startDate = ref('');\r\nconst endDate = ref('');\r\nconst menuStore = useMenuStore();\r\n\r\n// 设置默认日期（当前日期前后7天）\r\nconst setDefaultDates = () => {\r\n    const today = new Date();\r\n    const sevenDaysAgo = new Date(today);\r\n    sevenDaysAgo.setDate(today.getDate() - 7);\r\n    \r\n    startDate.value = sevenDaysAgo.toISOString().split('T')[0];\r\n    endDate.value = today.toISOString().split('T')[0];\r\n};\r\n\r\n// 确认按钮点击事件\r\nconst handleConfirm = async () => {\r\n    if (!startDate.value || !endDate.value) {\r\n        ElMessage.warning('请选择开始和结束日期');\r\n        return;\r\n    }\r\n    \r\n    if (new Date(startDate.value) > new Date(endDate.value)) {\r\n        ElMessage.error('开始日期不能晚于结束日期');\r\n        return;\r\n    }\r\n    \r\n    await menuStore.fetchHotDishes(startDate.value, endDate.value);\r\n};\r\n\r\n\r\n// 组件挂载时设置默认日期并获取数据\r\nonMounted(() => {\r\n    setDefaultDates();\r\n    fetchHotDishes();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.menu-card-layout {\r\n    padding: 20px;\r\n}\r\n\r\n.hot-dishes-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n    flex-wrap: wrap;\r\n    gap: 10px;\r\n}\r\n\r\n.hot-dishes-title {\r\n    margin: 0;\r\n    color: #333;\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n}\r\n\r\n.date-picker-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n}\r\n\r\n.loading-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 200px;\r\n}\r\n\r\n.error-message {\r\n    margin: 20px 0;\r\n}\r\n\r\n.no-data {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 200px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .hot-dishes-header {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n    }\r\n    \r\n    .date-picker-container {\r\n        width: 100%;\r\n        flex-wrap: wrap;\r\n    }\r\n}\r\n</style>"],"mappings":"AA0DA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,SAAS,EAAEC,SAAS,QAAQ,cAAc;AACnD,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,SAASC,YAAY,QAAQ,eAAe;;AAE5C;;;;;;;;IACA,MAAMC,SAAS,GAAGN,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMO,OAAO,GAAGP,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMQ,SAAS,GAAGH,YAAY,CAAC,CAAC;;IAEhC;IACA,MAAMI,eAAe,GAAGA,CAAA,KAAM;MAC1B,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;MACxB,MAAMC,YAAY,GAAG,IAAID,IAAI,CAACD,KAAK,CAAC;MACpCE,YAAY,CAACC,OAAO,CAACH,KAAK,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAEzCR,SAAS,CAACS,KAAK,GAAGH,YAAY,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1DV,OAAO,CAACQ,KAAK,GAAGL,KAAK,CAACM,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC;;IAED;IACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI,CAACZ,SAAS,CAACS,KAAK,IAAI,CAACR,OAAO,CAACQ,KAAK,EAAE;QACpCb,SAAS,CAACiB,OAAO,CAAC,YAAY,CAAC;QAC/B;MACJ;MAEA,IAAI,IAAIR,IAAI,CAACL,SAAS,CAACS,KAAK,CAAC,GAAG,IAAIJ,IAAI,CAACJ,OAAO,CAACQ,KAAK,CAAC,EAAE;QACrDb,SAAS,CAACkB,KAAK,CAAC,cAAc,CAAC;QAC/B;MACJ;MAEA,MAAMZ,SAAS,CAACa,cAAc,CAACf,SAAS,CAACS,KAAK,EAAER,OAAO,CAACQ,KAAK,CAAC;IAClE,CAAC;;IAGD;IACAd,SAAS,CAAC,MAAM;MACZQ,eAAe,CAAC,CAAC;MACjBY,cAAc,CAAC,CAAC;IACpB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}