{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted, computed, watch } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { getMenuList } from '@/api/menu';\nimport { useCheckoutStore } from '@/stores/checkout';\n\n// 使用 checkout store\n\nexport default {\n  __name: 'CheckoutForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const checkoutStore = useCheckoutStore();\n\n    // 订单创建区\n    const customerId = ref('');\n    const tableId = ref('');\n    const peopleCount = ref('');\n    const orderId = ref('');\n    const selectedDishes = ref([]);\n\n    // 订单更新区\n    const editOrderId = ref('');\n    const editCustomerId = ref('');\n    const editTableId = ref('');\n    const editPeopleCount = ref('');\n    const editSelectedDishes = ref([]);\n\n    // 查询区\n    const queryTableId = ref('');\n    const queryOrderId = ref('');\n    const orderInfo = ref(null);\n\n    // 结账区\n    const checkoutOrderId = ref('');\n\n    // 其他\n    const menuList = ref([]);\n    const message = ref('');\n    const error = ref('');\n\n    // 计算属性\n    const isEditMode = computed(() => editOrderId.value !== '');\n\n    // 监听 store 中的错误变化\n    watch(() => checkoutStore.error, newError => {\n      if (newError) {\n        error.value = newError;\n        ElMessage.error(newError);\n      }\n    });\n\n    // 监听当前订单变化，同步到本地状态\n    watch(() => checkoutStore.currentOrder, newOrder => {\n      if (newOrder) {\n        orderId.value = String(newOrder.orderId || '');\n        selectedDishes.value = [...(newOrder.dishes || [])];\n      }\n    }, {\n      deep: true\n    });\n    onMounted(async () => {\n      await fetchMenuList();\n    });\n    async function fetchMenuList() {\n      try {\n        const res = await getMenuList();\n        menuList.value = Array.isArray(res) ? res : res.data || [];\n      } catch (err) {\n        error.value = err;\n        ElMessage.error(err);\n      }\n    }\n\n    // 加载订单数据到表单\n    function loadOrderData(orderData) {\n      customerId.value = String(orderData.customer_id || '');\n      tableId.value = String(orderData.table_id || '');\n      peopleCount.value = String(orderData.people_count || '');\n\n      // 解析菜品信息\n      if (orderData.dishes) {\n        let dishesArray = [];\n        if (typeof orderData.dishes === 'string') {\n          try {\n            dishesArray = JSON.parse(orderData.dishes);\n          } catch (e) {\n            // 如果不是JSON，尝试其他解析方式\n            dishesArray = orderData.dishes.split(',').map(dish => {\n              const [dishId, dishName, quantity] = dish.split(':');\n              return {\n                dishId,\n                dishName,\n                quantity: Number(quantity)\n              };\n            });\n          }\n        } else if (Array.isArray(orderData.dishes)) {\n          dishesArray = orderData.dishes;\n        }\n        selectedDishes.value = dishesArray;\n      } else {\n        selectedDishes.value = [];\n      }\n    }\n\n    // 订单创建相关方法\n    async function handleCreateOrder() {\n      message.value = '';\n      error.value = '';\n\n      // 表单验证\n      if (!customerId.value || !tableId.value || !peopleCount.value) {\n        ElMessage.warning('请填写完整的订单信息');\n        return;\n      }\n      try {\n        await checkoutStore.createNewOrder({\n          tableId: Number(tableId.value),\n          customerId: Number(customerId.value),\n          peopleCount: Number(peopleCount.value)\n        });\n        orderId.value = checkoutStore.currentOrder?.orderId ? String(checkoutStore.currentOrder.orderId) : '';\n\n        // 清空表单但保留订单ID\n        customerId.value = '';\n        tableId.value = '';\n        peopleCount.value = '';\n\n        // 从store加载菜品\n        selectedDishes.value = [...checkoutStore.currentOrderDishes];\n        ElMessage.success(`订单创建成功，ID: ${orderId.value}`);\n      } catch (err) {\n        error.value = checkoutStore.error || err;\n        ElMessage.error(error.value);\n      }\n    }\n    async function handleDishDblClick(row) {\n      if (!orderId.value) {\n        ElMessage.warning('请先创建订单');\n        return;\n      }\n      try {\n        await checkoutStore.addDish(orderId.value, row.dishId, 1);\n        // 从store同步最新菜品列表\n        selectedDishes.value = [...checkoutStore.currentOrderDishes];\n        ElMessage.success(`已添加菜品: ${row.dishName}`);\n      } catch (err) {\n        error.value = checkoutStore.error || err;\n        ElMessage.error(error.value);\n      }\n    }\n    async function removeDish(row) {\n      if (!orderId.value) return;\n      try {\n        await checkoutStore.removeDish(orderId.value, row.dishId);\n        // 从store同步最新菜品列表\n        selectedDishes.value = [...checkoutStore.currentOrderDishes];\n        ElMessage.success('已移除菜品: ' + row.dishName);\n      } catch (err) {\n        error.value = checkoutStore.error || err;\n        ElMessage.error(error.value);\n      }\n    }\n    async function handleUpdateQuantity(row, quantity) {\n      if (!orderId.value) return;\n      try {\n        await checkoutStore.updateDishQuantity(orderId.value, row.dishId, quantity);\n        // 从store同步最新菜品列表\n        selectedDishes.value = [...checkoutStore.currentOrderDishes];\n        ElMessage.success('数量更新成功');\n      } catch (err) {\n        error.value = checkoutStore.error || err;\n        ElMessage.error(error.value);\n      }\n    }\n    function handleExitEdit() {\n      orderId.value = '';\n      selectedDishes.value = [];\n      customerId.value = '';\n      tableId.value = '';\n      peopleCount.value = '';\n      checkoutStore.clearCurrentOrder();\n    }\n\n    // 订单更新相关方法\n    async function handleEditQueryOrder() {\n      message.value = '';\n      error.value = '';\n      if (!editOrderId.value) {\n        ElMessage.warning('请输入订单ID');\n        return;\n      }\n      try {\n        await checkoutStore.getOrderById(editOrderId.value);\n        const orderData = checkoutStore.currentOrder;\n        if (orderData) {\n          editCustomerId.value = String(orderData.customer_id || '');\n          editTableId.value = String(orderData.table_id || '');\n          editPeopleCount.value = String(orderData.people_count || '');\n\n          // 解析菜品信息\n          if (orderData.dishes) {\n            let dishesArray = [];\n            if (typeof orderData.dishes === 'string') {\n              try {\n                dishesArray = JSON.parse(orderData.dishes);\n              } catch (e) {\n                dishesArray = orderData.dishes.split(',').map(dish => {\n                  const [dishId, dishName, quantity] = dish.split(':');\n                  return {\n                    dishId,\n                    dishName,\n                    quantity: Number(quantity)\n                  };\n                });\n              }\n            } else if (Array.isArray(orderData.dishes)) {\n              dishesArray = orderData.dishes;\n            }\n            editSelectedDishes.value = dishesArray;\n          } else {\n            editSelectedDishes.value = [];\n          }\n          ElMessage.success('订单查询成功');\n        } else {\n          ElMessage.warning('未找到相关订单');\n        }\n      } catch (err) {\n        error.value = checkoutStore.error || err;\n        ElMessage.error(error.value);\n      }\n    }\n    async function handleEditSaveOrder() {\n      message.value = '';\n      error.value = '';\n\n      // 表单验证\n      if (!editOrderId.value || !editCustomerId.value || !editTableId.value || !editPeopleCount.value) {\n        ElMessage.warning('请填写完整的订单信息');\n        return;\n      }\n      try {\n        const orderData = {\n          orderId: editOrderId.value,\n          customerId: editCustomerId.value,\n          tableId: editTableId.value,\n          peopleCount: editPeopleCount.value,\n          dishes: editSelectedDishes.value\n        };\n        await checkoutStore.updateOrder(orderData);\n        ElMessage.success('订单更新成功');\n        handleEditExit();\n      } catch (err) {\n        error.value = checkoutStore.error || err;\n        ElMessage.error(error.value);\n      }\n    }\n    function handleEditExit() {\n      editOrderId.value = '';\n      editCustomerId.value = '';\n      editTableId.value = '';\n      editPeopleCount.value = '';\n      editSelectedDishes.value = [];\n    }\n    function editRemoveDish(row) {\n      editSelectedDishes.value = editSelectedDishes.value.filter(d => d.dishId !== row.dishId);\n    }\n    function handleEditUpdateQuantity(row, quantity) {\n      // 本地更新数量\n      row.quantity = quantity;\n    }\n\n    // 订单查询相关方法\n    async function handleQueryOrderByTableId() {\n      message.value = '';\n      error.value = '';\n      if (!queryTableId.value) {\n        ElMessage.warning('请输入桌子ID');\n        return;\n      }\n      try {\n        await checkoutStore.getOrderByTableId(queryTableId.value);\n        if (checkoutStore.currentOrder) {\n          orderInfo.value = checkoutStore.currentOrder;\n          loadOrderData(checkoutStore.currentOrder);\n          ElMessage.success('查询成功');\n        } else {\n          ElMessage.warning('未找到相关订单');\n        }\n      } catch (err) {\n        error.value = checkoutStore.error || err;\n        ElMessage.error(error.value);\n      }\n    }\n    async function handleQueryOrderDetails() {\n      message.value = '';\n      error.value = '';\n      if (!queryOrderId.value) {\n        ElMessage.warning('请输入订单ID');\n        return;\n      }\n      try {\n        await checkoutStore.getOrderById(queryOrderId.value);\n        orderInfo.value = checkoutStore.currentOrder;\n        ElMessage.success('查询成功');\n      } catch (err) {\n        error.value = checkoutStore.error || err;\n        ElMessage.error(error.value);\n      }\n    }\n\n    // 结账方法\n    async function handleCheckout() {\n      message.value = '';\n      error.value = '';\n      if (!checkoutOrderId.value) {\n        ElMessage.warning('请输入订单ID');\n        return;\n      }\n      try {\n        await checkoutStore.checkout(checkoutOrderId.value);\n        ElMessage.success('结账成功');\n        checkoutOrderId.value = '';\n\n        // 如果是当前订单则刷新状态\n        if (orderId.value === checkoutOrderId.value) {\n          await checkoutStore.getOrderById(orderId.value);\n        }\n      } catch (err) {\n        error.value = checkoutStore.error || err;\n        ElMessage.error(error.value);\n      }\n    }\n    const __returned__ = {\n      checkoutStore,\n      customerId,\n      tableId,\n      peopleCount,\n      orderId,\n      selectedDishes,\n      editOrderId,\n      editCustomerId,\n      editTableId,\n      editPeopleCount,\n      editSelectedDishes,\n      queryTableId,\n      queryOrderId,\n      orderInfo,\n      checkoutOrderId,\n      menuList,\n      message,\n      error,\n      isEditMode,\n      fetchMenuList,\n      loadOrderData,\n      handleCreateOrder,\n      handleDishDblClick,\n      removeDish,\n      handleUpdateQuantity,\n      handleExitEdit,\n      handleEditQueryOrder,\n      handleEditSaveOrder,\n      handleEditExit,\n      editRemoveDish,\n      handleEditUpdateQuantity,\n      handleQueryOrderByTableId,\n      handleQueryOrderDetails,\n      handleCheckout,\n      ref,\n      onMounted,\n      computed,\n      watch,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get getMenuList() {\n        return getMenuList;\n      },\n      get useCheckoutStore() {\n        return useCheckoutStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","watch","ElMessage","getMenuList","useCheckoutStore","checkoutStore","customerId","tableId","peopleCount","orderId","selectedDishes","editOrderId","editCustomerId","editTableId","editPeopleCount","editSelectedDishes","queryTableId","queryOrderId","orderInfo","checkoutOrderId","menuList","message","error","isEditMode","value","newError","currentOrder","newOrder","String","dishes","deep","fetchMenuList","res","Array","isArray","data","err","loadOrderData","orderData","customer_id","table_id","people_count","dishesArray","JSON","parse","e","split","map","dish","dishId","dishName","quantity","Number","handleCreateOrder","warning","createNewOrder","currentOrderDishes","success","handleDishDblClick","row","addDish","removeDish","handleUpdateQuantity","updateDishQuantity","handleExitEdit","clearCurrentOrder","handleEditQueryOrder","getOrderById","handleEditSaveOrder","updateOrder","handleEditExit","editRemoveDish","filter","d","handleEditUpdateQuantity","handleQueryOrderByTableId","getOrderByTableId","handleQueryOrderDetails","handleCheckout","checkout"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/components/checkout/CheckoutForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"checkout-form-container\">\r\n    <div class=\"flex h-screen\">\r\n      <!-- 左侧菜单列表 -->\r\n      <div class=\"w-1/2 border-r border-gray-200 flex flex-col\">\r\n        <div class=\"p-4 border-b border-gray-200\">\r\n          <h2 class=\"text-lg font-bold\">菜单列表</h2>\r\n        </div>\r\n        <div class=\"flex-1 overflow-y-auto\">\r\n          <el-table \r\n            :data=\"menuList\" \r\n            style=\"width: 100%;\" \r\n            size=\"small\" \r\n            layout=\"fixed\"\r\n            @row-dblclick=\"handleDishDblClick\"\r\n            class=\"menu-table\"\r\n            v-loading=\"checkoutStore.loading\"\r\n          >\r\n            <el-table-column prop=\"dishId\" label=\"菜品ID\" width=\"120\" />\r\n            <el-table-column prop=\"dishName\" label=\"菜品名称\" width=\"200\" />\r\n            <el-table-column prop=\"price\" label=\"价格\" width=\"120\" />\r\n            <el-table-column prop=\"description\" label=\"描述\" />\r\n          </el-table>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右侧订单管理 - 竖着排列 -->\r\n      <div class=\"w-1/2 flex flex-col overflow-y-auto\">\r\n        <!-- 订单创建 -->\r\n        <div class=\"p-4 border-b border-gray-200\">\r\n          <h2 class=\"text-lg font-bold mb-4\">订单创建</h2>\r\n          <el-form label-width=\"80px\" class=\"mb-4\">\r\n            <el-form-item label=\"顾客ID\">\r\n              <el-input v-model=\"customerId\" type=\"number\" placeholder=\"输入顾客ID\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"桌子ID\">\r\n              <el-input v-model=\"tableId\" type=\"number\" placeholder=\"输入桌子ID\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"人数\">\r\n              <el-input v-model=\"peopleCount\" type=\"number\" min=\"1\" placeholder=\"输入人数\" />\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button \r\n                type=\"primary\" \r\n                @click=\"handleCreateOrder\" \r\n                :disabled=\"!!orderId || isEditMode || checkoutStore.loading\"\r\n                :loading=\"checkoutStore.loading\"\r\n              >\r\n                创建订单\r\n              </el-button>\r\n              <span v-if=\"orderId\" class=\"ml-4 text-green-600\">订单ID: {{ orderId }}</span>\r\n              <el-button v-if=\"orderId\" type=\"warning\" class=\"ml-4\" @click=\"handleExitEdit\">退出编辑</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          \r\n          <el-divider>已选菜品</el-divider>\r\n          <div class=\"mb-4\">\r\n            <el-table :data=\"selectedDishes\" style=\"width: 100%;\" size=\"small\" layout=\"fixed\">\r\n              <el-table-column prop=\"dishId\" label=\"菜品ID\" width=\"120\" />\r\n              <el-table-column prop=\"dishName\" label=\"菜品名称\" width=\"150\" />\r\n              <el-table-column prop=\"quantity\" label=\"数量\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  <el-input-number \r\n                    v-model=\"scope.row.quantity\" \r\n                    :min=\"1\" \r\n                    @change=\"q => handleUpdateQuantity(scope.row, q)\" \r\n                    style=\"width: 100%;\" \r\n                    :disabled=\"checkoutStore.loading\"\r\n                  />\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"操作\" width=\"100\" align=\"center\">\r\n                <template #default=\"scope\">\r\n                  <el-button \r\n                    size=\"small\" \r\n                    type=\"danger\" \r\n                    @click=\"removeDish(scope.row)\"\r\n                    :disabled=\"checkoutStore.loading\"\r\n                  >\r\n                    移除\r\n                  </el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 订单更新 -->\r\n        <div class=\"p-4 border-b border-gray-200\">\r\n          <h2 class=\"text-lg font-bold mb-4\">订单更新</h2>\r\n          <el-form label-width=\"80px\" class=\"mb-4\">\r\n            <el-form-item label=\"订单ID\">\r\n              <el-input v-model=\"editOrderId\" type=\"number\" placeholder=\"输入订单ID\" style=\"width: 180px;\" />\r\n              <el-button \r\n                class=\"ml-2\" \r\n                @click=\"handleEditQueryOrder\"\r\n                :disabled=\"checkoutStore.loading\"\r\n                :loading=\"checkoutStore.loading\"\r\n              >\r\n                查询\r\n              </el-button>\r\n            </el-form-item>\r\n            <el-form-item label=\"顾客ID\">\r\n              <el-input v-model=\"editCustomerId\" type=\"number\" placeholder=\"输入顾客ID\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"桌子ID\">\r\n              <el-input v-model=\"editTableId\" type=\"number\" placeholder=\"输入桌子ID\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"人数\">\r\n              <el-input v-model=\"editPeopleCount\" type=\"number\" min=\"1\" placeholder=\"输入人数\" />\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button \r\n                type=\"primary\" \r\n                @click=\"handleEditSaveOrder\" \r\n                :disabled=\"!editOrderId || !!orderId || checkoutStore.loading\"\r\n                :loading=\"checkoutStore.loading\"\r\n              >\r\n                保存更新\r\n              </el-button>\r\n              <el-button v-if=\"editOrderId\" type=\"warning\" class=\"ml-4\" @click=\"handleEditExit\">退出编辑</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          \r\n          <el-divider>已选菜品</el-divider>\r\n          <div class=\"mb-4\">\r\n            <el-table :data=\"editSelectedDishes\" style=\"width: 100%;\" size=\"small\" layout=\"fixed\">\r\n              <el-table-column prop=\"dishId\" label=\"菜品ID\" width=\"120\" />\r\n              <el-table-column prop=\"dishName\" label=\"菜品名称\" width=\"150\" />\r\n              <el-table-column prop=\"quantity\" label=\"数量\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  <el-input-number \r\n                    v-model=\"scope.row.quantity\" \r\n                    :min=\"1\" \r\n                    @change=\"q => handleEditUpdateQuantity(scope.row, q)\" \r\n                    style=\"width: 100%;\" \r\n                  />\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"操作\" width=\"100\" align=\"center\">\r\n                <template #default=\"scope\">\r\n                  <el-button size=\"small\" type=\"danger\" @click=\"editRemoveDish(scope.row)\">移除</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 订单查询 -->\r\n        <div class=\"p-4 border-b border-gray-200\">\r\n          <h2 class=\"text-lg font-bold mb-4\">订单查询</h2>\r\n          <el-form label-width=\"160px\" class=\"mb-4\">\r\n            <el-form-item label=\"根据桌号查订单\">\r\n              <el-input v-model=\"queryTableId\" type=\"number\" placeholder=\"输入桌子ID\" style=\"width: 240px;\" />\r\n              <el-button \r\n                @click=\"handleQueryOrderByTableId\" \r\n                class=\"ml-2\"\r\n                :disabled=\"checkoutStore.loading\"\r\n                :loading=\"checkoutStore.loading\"\r\n              >\r\n                查询\r\n              </el-button>\r\n            </el-form-item>\r\n            <el-form-item label=\"根据订单查菜品\">\r\n              <el-input v-model=\"queryOrderId\" type=\"number\" placeholder=\"输入订单ID\" style=\"width: 240px;\" />\r\n              <el-button \r\n                @click=\"handleQueryOrderDetails\" \r\n                class=\"ml-2\"\r\n                :disabled=\"checkoutStore.loading\"\r\n                :loading=\"checkoutStore.loading\"\r\n              >\r\n                查询\r\n              </el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          \r\n          <!-- 订单详情卡片展示 -->\r\n          <div v-if=\"orderInfo\" class=\"order-info-card p-4 mb-4 bg-gray-50 rounded shadow\">\r\n            <div v-if=\"orderInfo.orderId\"><b>订单ID：</b>{{ orderInfo.orderId }}</div>\r\n            <div v-if=\"orderInfo.customerId\"><b>顾客ID：</b>{{ orderInfo.customerId }}</div>\r\n            <div v-if=\"orderInfo.customerName\"><b>顾客姓名：</b>{{ orderInfo.customerName }}</div>\r\n            <div v-if=\"orderInfo.tableId\"><b>桌号：</b>{{ orderInfo.tableId }}</div>\r\n            <div v-if=\"orderInfo.orderTime\"><b>下单时间：</b>{{ orderInfo.orderTime }}</div>\r\n            <div v-if=\"orderInfo.status\"><b>状态：</b>{{ orderInfo.status }}</div>\r\n            <div v-if=\"orderInfo.finalAmount\"><b>实付金额：</b>{{ orderInfo.finalAmount }}</div>\r\n            <div v-if=\"orderInfo.totalAmount\"><b>总金额：</b>{{ orderInfo.totalAmount }}</div>\r\n            <div v-if=\"orderInfo.phone\"><b>手机号：</b>{{ orderInfo.phone }}</div>\r\n            <div v-if=\"orderInfo.discount\"><b>折扣：</b>{{ orderInfo.discount }}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 结账 -->\r\n        <div class=\"p-4\">\r\n          <h2 class=\"text-lg font-bold mb-4\">结账</h2>\r\n          <el-form label-width=\"160px\">\r\n            <el-form-item label=\"订单ID\">\r\n              <el-input v-model=\"checkoutOrderId\" type=\"number\" placeholder=\"输入订单ID\" style=\"width: 120px;\" />\r\n              <el-button \r\n                type=\"success\" \r\n                class=\"ml-2\" \r\n                @click=\"handleCheckout\"\r\n                :disabled=\"checkoutStore.loading\"\r\n                :loading=\"checkoutStore.loading\"\r\n              >\r\n                结账\r\n              </el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          <div v-if=\"message\" class=\"mt-2 text-green-600\">{{ message }}</div>\r\n          <div v-if=\"error\" class=\"mt-2 text-red-600\">{{ error }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed, watch } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport { getMenuList } from '@/api/menu';\r\nimport { useCheckoutStore } from '@/stores/checkout';\r\n\r\n// 使用 checkout store\r\nconst checkoutStore = useCheckoutStore();\r\n\r\n// 订单创建区\r\nconst customerId = ref('');\r\nconst tableId = ref('');\r\nconst peopleCount = ref('');\r\nconst orderId = ref('');\r\nconst selectedDishes = ref([]);\r\n\r\n// 订单更新区\r\nconst editOrderId = ref('');\r\nconst editCustomerId = ref('');\r\nconst editTableId = ref('');\r\nconst editPeopleCount = ref('');\r\nconst editSelectedDishes = ref([]);\r\n\r\n// 查询区\r\nconst queryTableId = ref('');\r\nconst queryOrderId = ref('');\r\nconst orderInfo = ref(null);\r\n\r\n// 结账区\r\nconst checkoutOrderId = ref('');\r\n\r\n// 其他\r\nconst menuList = ref([]);\r\nconst message = ref('');\r\nconst error = ref('');\r\n\r\n// 计算属性\r\nconst isEditMode = computed(() => editOrderId.value !== '');\r\n\r\n// 监听 store 中的错误变化\r\nwatch(() => checkoutStore.error, (newError) => {\r\n  if (newError) {\r\n    error.value = newError;\r\n    ElMessage.error(newError);\r\n  }\r\n});\r\n\r\n// 监听当前订单变化，同步到本地状态\r\nwatch(() => checkoutStore.currentOrder, (newOrder) => {\r\n  if (newOrder) {\r\n    orderId.value = String(newOrder.orderId || '');\r\n    selectedDishes.value = [...(newOrder.dishes || [])];\r\n  }\r\n}, { deep: true });\r\n\r\nonMounted(async () => {\r\n  await fetchMenuList();\r\n});\r\n\r\nasync function fetchMenuList() {\r\n  try {\r\n    const res = await getMenuList();\r\n    menuList.value = Array.isArray(res) ? res : (res.data || []);\r\n  } catch (err) {\r\n    error.value = err;\r\n    ElMessage.error(err);\r\n  }\r\n}\r\n\r\n// 加载订单数据到表单\r\nfunction loadOrderData(orderData) {\r\n  customerId.value = String(orderData.customer_id || '');\r\n  tableId.value = String(orderData.table_id || '');\r\n  peopleCount.value = String(orderData.people_count || '');\r\n  \r\n  // 解析菜品信息\r\n  if (orderData.dishes) {\r\n    let dishesArray = [];\r\n    if (typeof orderData.dishes === 'string') {\r\n      try {\r\n        dishesArray = JSON.parse(orderData.dishes);\r\n      } catch (e) {\r\n        // 如果不是JSON，尝试其他解析方式\r\n        dishesArray = orderData.dishes.split(',').map(dish => {\r\n          const [dishId, dishName, quantity] = dish.split(':');\r\n          return { dishId, dishName, quantity: Number(quantity) };\r\n        });\r\n      }\r\n    } else if (Array.isArray(orderData.dishes)) {\r\n      dishesArray = orderData.dishes;\r\n    }\r\n    selectedDishes.value = dishesArray;\r\n  } else {\r\n    selectedDishes.value = [];\r\n  }\r\n}\r\n\r\n// 订单创建相关方法\r\nasync function handleCreateOrder() {\r\n  message.value = '';\r\n  error.value = '';\r\n  \r\n  // 表单验证\r\n  if (!customerId.value || !tableId.value || !peopleCount.value) {\r\n    ElMessage.warning('请填写完整的订单信息');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    await checkoutStore.createNewOrder({\r\n      tableId: Number(tableId.value),\r\n      customerId: Number(customerId.value),\r\n      peopleCount: Number(peopleCount.value)\r\n    });\r\n    \r\n    orderId.value = checkoutStore.currentOrder?.orderId ? String(checkoutStore.currentOrder.orderId) : '';\r\n    \r\n    // 清空表单但保留订单ID\r\n    customerId.value = '';\r\n    tableId.value = '';\r\n    peopleCount.value = '';\r\n    \r\n    // 从store加载菜品\r\n    selectedDishes.value = [...checkoutStore.currentOrderDishes];\r\n    \r\n    ElMessage.success(`订单创建成功，ID: ${orderId.value}`);\r\n  } catch (err) {\r\n    error.value = checkoutStore.error || err;\r\n    ElMessage.error(error.value);\r\n  }\r\n}\r\n\r\nasync function handleDishDblClick(row) {\r\n  if (!orderId.value) {\r\n    ElMessage.warning('请先创建订单');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    await checkoutStore.addDish(orderId.value, row.dishId, 1);\r\n    // 从store同步最新菜品列表\r\n    selectedDishes.value = [...checkoutStore.currentOrderDishes];\r\n    ElMessage.success(`已添加菜品: ${row.dishName}`);\r\n  } catch (err) {\r\n    error.value = checkoutStore.error || err;\r\n    ElMessage.error(error.value);\r\n  }\r\n}\r\n\r\nasync function removeDish(row) {\r\n  if (!orderId.value) return;\r\n  \r\n  try {\r\n    await checkoutStore.removeDish(orderId.value, row.dishId);\r\n    // 从store同步最新菜品列表\r\n    selectedDishes.value = [...checkoutStore.currentOrderDishes];\r\n    ElMessage.success('已移除菜品: ' + row.dishName);\r\n  } catch (err) {\r\n    error.value = checkoutStore.error || err;\r\n    ElMessage.error(error.value);\r\n  }\r\n}\r\n\r\nasync function handleUpdateQuantity(row, quantity) {\r\n  if (!orderId.value) return;\r\n  \r\n  try {\r\n    await checkoutStore.updateDishQuantity(orderId.value, row.dishId, quantity);\r\n    // 从store同步最新菜品列表\r\n    selectedDishes.value = [...checkoutStore.currentOrderDishes];\r\n    ElMessage.success('数量更新成功');\r\n  } catch (err) {\r\n    error.value = checkoutStore.error || err;\r\n    ElMessage.error(error.value);\r\n  }\r\n}\r\n\r\nfunction handleExitEdit() {\r\n  orderId.value = '';\r\n  selectedDishes.value = [];\r\n  customerId.value = '';\r\n  tableId.value = '';\r\n  peopleCount.value = '';\r\n  checkoutStore.clearCurrentOrder();\r\n}\r\n\r\n// 订单更新相关方法\r\nasync function handleEditQueryOrder() {\r\n  message.value = '';\r\n  error.value = '';\r\n  \r\n  if (!editOrderId.value) {\r\n    ElMessage.warning('请输入订单ID');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    await checkoutStore.getOrderById(editOrderId.value);\r\n    const orderData = checkoutStore.currentOrder;\r\n    \r\n    if (orderData) {\r\n      editCustomerId.value = String(orderData.customer_id || '');\r\n      editTableId.value = String(orderData.table_id || '');\r\n      editPeopleCount.value = String(orderData.people_count || '');\r\n      \r\n      // 解析菜品信息\r\n      if (orderData.dishes) {\r\n        let dishesArray = [];\r\n        if (typeof orderData.dishes === 'string') {\r\n          try {\r\n            dishesArray = JSON.parse(orderData.dishes);\r\n          } catch (e) {\r\n            dishesArray = orderData.dishes.split(',').map(dish => {\r\n              const [dishId, dishName, quantity] = dish.split(':');\r\n              return { dishId, dishName, quantity: Number(quantity) };\r\n            });\r\n          }\r\n        } else if (Array.isArray(orderData.dishes)) {\r\n          dishesArray = orderData.dishes;\r\n        }\r\n        editSelectedDishes.value = dishesArray;\r\n      } else {\r\n        editSelectedDishes.value = [];\r\n      }\r\n      \r\n      ElMessage.success('订单查询成功');\r\n    } else {\r\n      ElMessage.warning('未找到相关订单');\r\n    }\r\n  } catch (err) {\r\n    error.value = checkoutStore.error || err;\r\n    ElMessage.error(error.value);\r\n  }\r\n}\r\n\r\nasync function handleEditSaveOrder() {\r\n  message.value = '';\r\n  error.value = '';\r\n  \r\n  // 表单验证\r\n  if (!editOrderId.value || !editCustomerId.value || !editTableId.value || !editPeopleCount.value) {\r\n    ElMessage.warning('请填写完整的订单信息');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    const orderData = {\r\n      orderId: editOrderId.value,\r\n      customerId: editCustomerId.value,\r\n      tableId: editTableId.value,\r\n      peopleCount: editPeopleCount.value,\r\n      dishes: editSelectedDishes.value\r\n    };\r\n    \r\n    await checkoutStore.updateOrder(orderData);\r\n    ElMessage.success('订单更新成功');\r\n    handleEditExit();\r\n  } catch (err) {\r\n    error.value = checkoutStore.error || err;\r\n    ElMessage.error(error.value);\r\n  }\r\n}\r\n\r\nfunction handleEditExit() {\r\n  editOrderId.value = '';\r\n  editCustomerId.value = '';\r\n  editTableId.value = '';\r\n  editPeopleCount.value = '';\r\n  editSelectedDishes.value = [];\r\n}\r\n\r\nfunction editRemoveDish(row) {\r\n  editSelectedDishes.value = editSelectedDishes.value.filter(d => d.dishId !== row.dishId);\r\n}\r\n\r\nfunction handleEditUpdateQuantity(row, quantity) {\r\n  // 本地更新数量\r\n  row.quantity = quantity;\r\n}\r\n\r\n// 订单查询相关方法\r\nasync function handleQueryOrderByTableId() {\r\n  message.value = '';\r\n  error.value = '';\r\n  \r\n  if (!queryTableId.value) {\r\n    ElMessage.warning('请输入桌子ID');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    await checkoutStore.getOrderByTableId(queryTableId.value);\r\n    if (checkoutStore.currentOrder) {\r\n      orderInfo.value = checkoutStore.currentOrder;\r\n      loadOrderData(checkoutStore.currentOrder);\r\n      ElMessage.success('查询成功');\r\n    } else {\r\n      ElMessage.warning('未找到相关订单');\r\n    }\r\n  } catch (err) {\r\n    error.value = checkoutStore.error || err;\r\n    ElMessage.error(error.value);\r\n  }\r\n}\r\n\r\nasync function handleQueryOrderDetails() {\r\n  message.value = '';\r\n  error.value = '';\r\n  \r\n  if (!queryOrderId.value) {\r\n    ElMessage.warning('请输入订单ID');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    await checkoutStore.getOrderById(queryOrderId.value);\r\n    orderInfo.value = checkoutStore.currentOrder;\r\n    ElMessage.success('查询成功');\r\n  } catch (err) {\r\n    error.value = checkoutStore.error || err;\r\n    ElMessage.error(error.value);\r\n  }\r\n}\r\n\r\n// 结账方法\r\nasync function handleCheckout() {\r\n  message.value = '';\r\n  error.value = '';\r\n  \r\n  if (!checkoutOrderId.value) {\r\n    ElMessage.warning('请输入订单ID');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    await checkoutStore.checkout(checkoutOrderId.value);\r\n    ElMessage.success('结账成功');\r\n    checkoutOrderId.value = '';\r\n    \r\n    // 如果是当前订单则刷新状态\r\n    if (orderId.value === checkoutOrderId.value) {\r\n      await checkoutStore.getOrderById(orderId.value);\r\n    }\r\n  } catch (err) {\r\n    error.value = checkoutStore.error || err;\r\n    ElMessage.error(error.value);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.checkout-form-container {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n.menu-table {\r\n  height: 100%;\r\n}\r\n\r\n.order-info-card {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}