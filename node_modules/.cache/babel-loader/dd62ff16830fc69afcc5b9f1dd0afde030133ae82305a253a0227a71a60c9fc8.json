{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_CustomerUpdateCard = _resolveComponent(\"CustomerUpdateCard\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createBlock(_component_el_table, {\n    data: $data.customerList,\n    style: {\n      \"width\": \"100%\"\n    },\n    stripe: \"\",\n    border: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"customerId\",\n      label: \"顾客ID\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"customerName\",\n      label: \"顾客姓名\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"customerPhone\",\n      label: \"顾客电话\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"customerEmail\",\n      label: \"顾客创建账号时间\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $event => $options.handleEdit(scope.row)\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"更新\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"danger\",\n        onClick: $event => $options.handleDelete(scope.row)\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"删除\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_dialog, {\n      modelValue: $data.updateDialogVisible,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.updateDialogVisible = $event),\n      title: \"更新顾客\",\n      width: \"500px\"\n    }, {\n      default: _withCtx(() => [$data.currentCustomer ? (_openBlock(), _createBlock(_component_CustomerUpdateCard, {\n        key: 0,\n        customer: $data.currentCustomer,\n        onUpdateSuccess: $options.handleUpdateSuccess,\n        onClose: _cache[0] || (_cache[0] = $event => $data.updateDialogVisible = false)\n      }, null, 8 /* PROPS */, [\"customer\", \"onUpdateSuccess\"])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"]);\n}","map":{"version":3,"names":["_createBlock","_component_el_table","data","$data","customerList","style","stripe","border","default","_withCtx","_createVNode","_component_el_table_column","prop","label","scope","_component_el_button","type","onClick","$event","$options","handleEdit","row","_cache","_createTextVNode","_","handleDelete","_component_el_dialog","modelValue","updateDialogVisible","title","width","currentCustomer","_component_CustomerUpdateCard","key","customer","onUpdateSuccess","handleUpdateSuccess","onClose","_createCommentVNode"],"sources":["D:\\数据库课程设计（饭店系统）\\restaurant-ordering-system\\src\\components\\customer\\CustomerForm.vue"],"sourcesContent":["<template>\r\n    <el-table :data=\"customerList\" style=\"width: 100%\" stripe border>\r\n        <el-table-column prop=\"customerId\" label=\"顾客ID\" />\r\n        <el-table-column prop=\"customerName\" label=\"顾客姓名\" />\r\n        <el-table-column prop=\"customerPhone\" label=\"顾客电话\" />\r\n        <el-table-column prop=\"customerEmail\" label=\"顾客创建账号时间\" />\r\n        <el-table-column label=\"操作\">\r\n            <template #default=\"scope\">\r\n                <el-button type=\"primary\" @click=\"handleEdit(scope.row)\">更新</el-button>\r\n                <el-button type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n            </template>\r\n        </el-table-column>\r\n        <el-dialog v-model=\"updateDialogVisible\" title=\"更新顾客\" width=\"500px\">\r\n            <CustomerUpdateCard v-if=\"currentCustomer\" :customer=\"currentCustomer\" @update-success=\"handleUpdateSuccess\" @close=\"updateDialogVisible = false\" />\r\n        </el-dialog>\r\n    </el-table>\r\n    \r\n</template>\r\n<script>\r\nimport { useCustomerStore } from '@/stores/customer';\r\nimport CustomerUpdateCard from './CustomerUpdateCard.vue';\r\n\r\nexport default {\r\n    components: {\r\n        CustomerUpdateCard,\r\n\r\n    },\r\n    name: 'CustomerForm',\r\n    data() {\r\n        return {\r\n            customerStore: useCustomerStore(),\r\n            customerList: [],\r\n            updateDialogVisible: false,\r\n            currentCustomer: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.customerStore.fetchCustomerList();\r\n        // 筛选出以0开头的顾客ID\r\n        this.customerList = this.customerStore.customerList.filter(customer => {\r\n            const customerId = customer.customerId?.toString() || '';\r\n            return customerId.startsWith('0');\r\n        });\r\n    },\r\n    methods: {\r\n        handleEdit(row) {\r\n            this.updateDialogVisible = true;\r\n            this.currentCustomer = row;\r\n        },\r\n        handleDelete(row) {\r\n            this.customerStore.deleteCustomer(row.phone);   \r\n            this.customerStore.fetchCustomerList();\r\n            // 重新筛选数据\r\n            this.customerList = this.customerStore.customerList.filter(customer => {\r\n                const customerId = customer.customerId?.toString() || '';\r\n                return customerId.startsWith('0');\r\n            });\r\n        },\r\n        handleUpdateSuccess() {\r\n            this.updateDialogVisible = false;\r\n            this.customerStore.fetchCustomerList();\r\n            // 重新筛选数据\r\n            this.customerList = this.customerStore.customerList.filter(customer => {\r\n                const customerId = customer.customerId?.toString() || '';\r\n                return customerId.startsWith('0');\r\n            });\r\n            this.currentCustomer = null;\r\n        }\r\n    },\r\n    \r\n}\r\n</script>"],"mappings":";;;;;;;uBACIA,YAAA,CAcWC,mBAAA;IAdAC,IAAI,EAAEC,KAAA,CAAAC,YAAY;IAAEC,KAAmB,EAAnB;MAAA;IAAA,CAAmB;IAACC,MAAM,EAAN,EAAM;IAACC,MAAM,EAAN;;IAD9DC,OAAA,EAAAC,QAAA,CAEQ,MAAkD,CAAlDC,YAAA,CAAkDC,0BAAA;MAAjCC,IAAI,EAAC,YAAY;MAACC,KAAK,EAAC;QACzCH,YAAA,CAAoDC,0BAAA;MAAnCC,IAAI,EAAC,cAAc;MAACC,KAAK,EAAC;QAC3CH,YAAA,CAAqDC,0BAAA;MAApCC,IAAI,EAAC,eAAe;MAACC,KAAK,EAAC;QAC5CH,YAAA,CAAyDC,0BAAA;MAAxCC,IAAI,EAAC,eAAe;MAACC,KAAK,EAAC;QAC5CH,YAAA,CAKkBC,0BAAA;MALDE,KAAK,EAAC;IAAI;MACZL,OAAO,EAAAC,QAAA,CACyDK,KADlD,KACrBJ,YAAA,CAAuEK,oBAAA;QAA5DC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACN,KAAK,CAACO,GAAG;;QARtEb,OAAA,EAAAC,QAAA,CAQyE,MAAEa,MAAA,QAAAA,MAAA,OAR3EC,gBAAA,CAQyE,IAAE,E;QAR3EC,CAAA;wDASgBd,YAAA,CAAwEK,oBAAA;QAA7DC,IAAI,EAAC,QAAQ;QAAEC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAM,YAAY,CAACX,KAAK,CAACO,GAAG;;QATvEb,OAAA,EAAAC,QAAA,CAS0E,MAAEa,MAAA,QAAAA,MAAA,OAT5EC,gBAAA,CAS0E,IAAE,E;QAT5EC,CAAA;;MAAAA,CAAA;QAYQd,YAAA,CAEYgB,oBAAA;MAdpBC,UAAA,EAY4BxB,KAAA,CAAAyB,mBAAmB;MAZ/C,uBAAAN,MAAA,QAAAA,MAAA,MAAAJ,MAAA,IAY4Bf,KAAA,CAAAyB,mBAAmB,GAAAV,MAAA;MAAEW,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;;MAZpEtB,OAAA,EAAAC,QAAA,CAaY,MAAoJ,CAA1HN,KAAA,CAAA4B,eAAe,I,cAAzC/B,YAAA,CAAoJgC,6BAAA;QAbhKC,GAAA;QAawDC,QAAQ,EAAE/B,KAAA,CAAA4B,eAAe;QAAGI,eAAc,EAAEhB,QAAA,CAAAiB,mBAAmB;QAAGC,OAAK,EAAAf,MAAA,QAAAA,MAAA,MAAAJ,MAAA,IAAEf,KAAA,CAAAyB,mBAAmB;kEAbpJU,mBAAA,e;MAAAd,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}