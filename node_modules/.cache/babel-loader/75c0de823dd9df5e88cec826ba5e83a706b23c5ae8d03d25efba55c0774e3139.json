{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { callNumber, removeCallingNumber, getAllQueues } from '@/api/callingNumber';\nimport { ElMessage } from 'element-plus';\nexport const useCallingNumberStore = defineStore('callingNumber', {\n  state: () => ({\n    queues: {},\n    loading: false,\n    error: null\n  }),\n  actions: {\n    async callNumber(phone, peopleNumber) {\n      try {\n        await callNumber({\n          phone,\n          peopleNumber\n        });\n        ElMessage.success('叫号成功');\n        await this.getQueues();\n      } catch (err) {\n        ElMessage.error(err.message || '叫号失败');\n      }\n    },\n    async removeCallingNumber(callingNumberId) {\n      try {\n        await removeCallingNumber(callingNumberId);\n        ElMessage.success('移除叫号成功');\n        await this.getQueues();\n      } catch (err) {\n        ElMessage.error(err.message || '移除叫号失败');\n      }\n    },\n    async getQueues() {\n      this.loading = true;\n      try {\n        this.queues = await getAllQueues();\n        this.error = null;\n      } catch (err) {\n        this.error = err.message || '获取队列失败';\n        ElMessage.error(this.error);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","callNumber","removeCallingNumber","getAllQueues","ElMessage","useCallingNumberStore","state","queues","loading","error","actions","phone","peopleNumber","success","getQueues","err","message","callingNumberId"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/stores/callingNumber.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport { callNumber, removeCallingNumber, getAllQueues } from '@/api/callingNumber';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nexport const useCallingNumberStore = defineStore('callingNumber', {\r\n  state: () => ({\r\n    queues: {},\r\n    loading: false,\r\n    error: null\r\n  }),\r\n  actions: {\r\n    async callNumber(phone, peopleNumber) {\r\n      try {\r\n        await callNumber({ phone, peopleNumber });\r\n        ElMessage.success('叫号成功');\r\n        await this.getQueues();\r\n      } catch (err) {\r\n        ElMessage.error(err.message || '叫号失败');\r\n      }\r\n    },\r\n    async removeCallingNumber(callingNumberId) {\r\n      try {\r\n        await removeCallingNumber(callingNumberId);\r\n        ElMessage.success('移除叫号成功');\r\n        await this.getQueues();\r\n      } catch (err) {\r\n        ElMessage.error(err.message || '移除叫号失败');\r\n      }\r\n    },\r\n    async getQueues() {\r\n      this.loading = true;\r\n      try {\r\n        this.queues = await getAllQueues();\r\n        this.error = null;\r\n      } catch (err) {\r\n        this.error = err.message || '获取队列失败';\r\n        ElMessage.error(this.error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    }\r\n  }\r\n}); "],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,UAAU,EAAEC,mBAAmB,EAAEC,YAAY,QAAQ,qBAAqB;AACnF,SAASC,SAAS,QAAQ,cAAc;AAExC,OAAO,MAAMC,qBAAqB,GAAGL,WAAW,CAAC,eAAe,EAAE;EAChEM,KAAK,EAAEA,CAAA,MAAO;IACZC,MAAM,EAAE,CAAC,CAAC;IACVC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMT,UAAUA,CAACU,KAAK,EAAEC,YAAY,EAAE;MACpC,IAAI;QACF,MAAMX,UAAU,CAAC;UAAEU,KAAK;UAAEC;QAAa,CAAC,CAAC;QACzCR,SAAS,CAACS,OAAO,CAAC,MAAM,CAAC;QACzB,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC;MACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZX,SAAS,CAACK,KAAK,CAACM,GAAG,CAACC,OAAO,IAAI,MAAM,CAAC;MACxC;IACF,CAAC;IACD,MAAMd,mBAAmBA,CAACe,eAAe,EAAE;MACzC,IAAI;QACF,MAAMf,mBAAmB,CAACe,eAAe,CAAC;QAC1Cb,SAAS,CAACS,OAAO,CAAC,QAAQ,CAAC;QAC3B,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC;MACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZX,SAAS,CAACK,KAAK,CAACM,GAAG,CAACC,OAAO,IAAI,QAAQ,CAAC;MAC1C;IACF,CAAC;IACD,MAAMF,SAASA,CAAA,EAAG;MAChB,IAAI,CAACN,OAAO,GAAG,IAAI;MACnB,IAAI;QACF,IAAI,CAACD,MAAM,GAAG,MAAMJ,YAAY,CAAC,CAAC;QAClC,IAAI,CAACM,KAAK,GAAG,IAAI;MACnB,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZ,IAAI,CAACN,KAAK,GAAGM,GAAG,CAACC,OAAO,IAAI,QAAQ;QACpCZ,SAAS,CAACK,KAAK,CAAC,IAAI,CAACA,KAAK,CAAC;MAC7B,CAAC,SAAS;QACR,IAAI,CAACD,OAAO,GAAG,KAAK;MACtB;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}