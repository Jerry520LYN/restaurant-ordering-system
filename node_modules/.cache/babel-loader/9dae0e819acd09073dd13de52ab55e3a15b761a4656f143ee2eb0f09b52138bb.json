{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { getMenuList } from '@/api/menu';\nimport { createOrder, addDishToOrder, removeDishFromOrder, updateDishQuantity, getOrderIdWithDishId, checkoutOrder } from '@/api/checkout';\nimport { getOrderById } from '@/api/order';\nexport default {\n  __name: 'CheckoutForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const createOrderId = ref('');\n    const customerId = ref('');\n    const tableId = ref('');\n    const peopleCount = ref('');\n    const orderId = ref('');\n    const menuList = ref([]);\n    const selectedDishes = ref([]); // {dishId, dishName, quantity}\n    const message = ref('');\n    const error = ref('');\n    const orderDetails = ref([]);\n    const queryTableId = ref('');\n    const queryOrderId = ref('');\n    const checkoutOrderId = ref('');\n    const orderInfo = ref(null);\n    const updateCustomerId = ref('');\n    const updateTableId = ref('');\n    const updatePeopleCount = ref('');\n    const updateOrderId = ref('');\n    const updateSelectedDishes = ref([]); // {dishId, dishName, quantity}\n\n    onMounted(async () => {\n      await fetchMenuList();\n    });\n    async function fetchMenuList() {\n      try {\n        const res = await getMenuList();\n        menuList.value = Array.isArray(res) ? res : res.data || [];\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    async function handleCreateOrder() {\n      message.value = '';\n      error.value = '';\n      try {\n        const res = await createOrder({\n          tableId: Number(tableId.value),\n          customerId: Number(customerId.value),\n          peopleCount: Number(peopleCount.value)\n        });\n        createOrderId.value = res.orderId;\n        if (createOrderId.value) {\n          ElMessage.success('订单创建成功，ID: ' + createOrderId.value);\n        } else {\n          ElMessage.warning('订单创建成功，但未返回订单ID');\n        }\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    function handleDishDblClick(row) {\n      if (!createOrderId.value) {\n        ElMessage.warning('请先创建订单');\n        return;\n      }\n      // 检查是否已添加\n      const exist = selectedDishes.value.find(d => d.dishId === row.dishId);\n      if (exist) {\n        exist.quantity++;\n        handleUpdateQuantity(exist, exist.quantity);\n        return;\n      }\n      // 添加到订单\n      addDishToOrder({\n        orderId: createOrderId.value,\n        dishId: row.dishId,\n        quantity: 1\n      }).then(() => {\n        selectedDishes.value.push({\n          ...row,\n          quantity: 1\n        });\n        ElMessage.success('已添加菜品: ' + row.dishName);\n      }).catch(err => {\n        error.value = err;\n      });\n    }\n    function removeDish(row) {\n      if (!createOrderId.value) return;\n      removeDishFromOrder({\n        orderId: createOrderId.value,\n        dishId: row.dishId\n      }).then(() => {\n        selectedDishes.value = selectedDishes.value.filter(d => d.dishId !== row.dishId);\n        ElMessage.success('已移除菜品');\n      }).catch(err => {\n        error.value = err;\n      });\n    }\n    function handleUpdateQuantity(row, quantity) {\n      if (!createOrderId.value) return;\n      updateDishQuantity({\n        orderId: createOrderId.value,\n        dishId: row.dishId,\n        quantity\n      }).then(() => {\n        row.quantity = quantity;\n        ElMessage.success('数量已更新');\n      }).catch(err => {\n        error.value = err;\n      });\n    }\n    async function handleQueryOrderByTableId() {\n      message.value = '';\n      error.value = '';\n      try {\n        const res = await getOrderIdWithDishId(Number(queryTableId.value));\n        orderInfo.value = res.data || null;\n        orderDetails.value = [];\n        // 自动填充到订单操作区\n        if (orderInfo.value) {\n          createOrderId.value = String(orderInfo.value.orderId || orderInfo.value.order_id || '');\n          tableId.value = String(orderInfo.value.tableId || orderInfo.value.table_id || '');\n          customerId.value = String(orderInfo.value.customerId || orderInfo.value.customer_id || '');\n          peopleCount.value = '';\n          // 处理菜品\n          if (orderInfo.value.dishes) {\n            if (Array.isArray(orderInfo.value.dishes)) {\n              selectedDishes.value = orderInfo.value.dishes.map(dish => ({\n                dishId: dish.dishId || dish.dish_id || '',\n                dishName: dish.dishName || dish.dish_name || dish,\n                quantity: dish.quantity || 1\n              }));\n            } else if (typeof orderInfo.value.dishes === 'string') {\n              selectedDishes.value = [{\n                dishId: '',\n                dishName: orderInfo.value.dishes,\n                quantity: 1\n              }];\n            }\n          } else {\n            selectedDishes.value = [];\n          }\n        }\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    async function handleQueryOrderDetails() {\n      message.value = '';\n      error.value = '';\n      try {\n        const res = await getOrderById(Number(queryOrderId.value));\n        orderInfo.value = res.data || null;\n        orderDetails.value = [];\n        // 自动填充到订单操作区\n        if (orderInfo.value) {\n          createOrderId.value = String(orderInfo.value.orderId || orderInfo.value.order_id || '');\n          tableId.value = String(orderInfo.value.tableId || orderInfo.value.table_id || '');\n          customerId.value = String(orderInfo.value.customerId || orderInfo.value.customer_id || '');\n          peopleCount.value = '';\n          if (orderInfo.value.dishes) {\n            if (Array.isArray(orderInfo.value.dishes)) {\n              selectedDishes.value = orderInfo.value.dishes.map(dish => ({\n                dishId: dish.dishId || dish.dish_id || '',\n                dishName: dish.dishName || dish.dish_name || dish,\n                quantity: dish.quantity || 1\n              }));\n            } else if (typeof orderInfo.value.dishes === 'string') {\n              selectedDishes.value = [{\n                dishId: '',\n                dishName: orderInfo.value.dishes,\n                quantity: 1\n              }];\n            }\n          } else {\n            selectedDishes.value = [];\n          }\n        }\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    function handleExitEdit() {\n      createOrderId.value = '';\n      tableId.value = '';\n      customerId.value = '';\n      peopleCount.value = '';\n      selectedDishes.value = [];\n      orderInfo.value = null;\n      orderDetails.value = [];\n      message.value = '';\n      error.value = '';\n      queryTableId.value = '';\n      queryOrderId.value = '';\n      checkoutOrderId.value = '';\n    }\n    async function handleCheckout() {\n      message.value = '';\n      error.value = '';\n      try {\n        await checkoutOrder(Number(checkoutOrderId.value));\n        message.value = '结账成功！';\n        ElMessage.success('结账成功！');\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    async function handleUpdateOrder() {\n      message.value = '';\n      error.value = '';\n      try {\n        // 这里可以调用更新订单的API\n        ElMessage.success('订单更新成功！');\n      } catch (err) {\n        error.value = err;\n      }\n    }\n    function handleExitUpdateEdit() {\n      updateOrderId.value = '';\n      updateTableId.value = '';\n      updateCustomerId.value = '';\n      updatePeopleCount.value = '';\n      updateSelectedDishes.value = [];\n    }\n    function removeDishForUpdate(row) {\n      if (!updateOrderId.value) return;\n      // 这里可以调用移除菜品的API\n      updateSelectedDishes.value = updateSelectedDishes.value.filter(d => d.dishId !== row.dishId);\n      ElMessage.success('已移除菜品');\n    }\n    function handleUpdateQuantityForUpdate(row, quantity) {\n      if (!updateOrderId.value) return;\n      // 这里可以调用更新数量的API\n      row.quantity = quantity;\n      ElMessage.success('数量已更新');\n    }\n    const __returned__ = {\n      createOrderId,\n      customerId,\n      tableId,\n      peopleCount,\n      orderId,\n      menuList,\n      selectedDishes,\n      message,\n      error,\n      orderDetails,\n      queryTableId,\n      queryOrderId,\n      checkoutOrderId,\n      orderInfo,\n      updateCustomerId,\n      updateTableId,\n      updatePeopleCount,\n      updateOrderId,\n      updateSelectedDishes,\n      fetchMenuList,\n      handleCreateOrder,\n      handleDishDblClick,\n      removeDish,\n      handleUpdateQuantity,\n      handleQueryOrderByTableId,\n      handleQueryOrderDetails,\n      handleExitEdit,\n      handleCheckout,\n      handleUpdateOrder,\n      handleExitUpdateEdit,\n      removeDishForUpdate,\n      handleUpdateQuantityForUpdate,\n      ref,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get getMenuList() {\n        return getMenuList;\n      },\n      get createOrder() {\n        return createOrder;\n      },\n      get addDishToOrder() {\n        return addDishToOrder;\n      },\n      get removeDishFromOrder() {\n        return removeDishFromOrder;\n      },\n      get updateDishQuantity() {\n        return updateDishQuantity;\n      },\n      get getOrderIdWithDishId() {\n        return getOrderIdWithDishId;\n      },\n      get checkoutOrder() {\n        return checkoutOrder;\n      },\n      get getOrderById() {\n        return getOrderById;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","ElMessage","getMenuList","createOrder","addDishToOrder","removeDishFromOrder","updateDishQuantity","getOrderIdWithDishId","checkoutOrder","getOrderById","createOrderId","customerId","tableId","peopleCount","orderId","menuList","selectedDishes","message","error","orderDetails","queryTableId","queryOrderId","checkoutOrderId","orderInfo","updateCustomerId","updateTableId","updatePeopleCount","updateOrderId","updateSelectedDishes","fetchMenuList","res","value","Array","isArray","data","err","handleCreateOrder","Number","success","warning","handleDishDblClick","row","exist","find","d","dishId","quantity","handleUpdateQuantity","then","push","dishName","catch","removeDish","filter","handleQueryOrderByTableId","String","order_id","table_id","customer_id","dishes","map","dish","dish_id","dish_name","handleQueryOrderDetails","handleExitEdit","handleCheckout","handleUpdateOrder","handleExitUpdateEdit","removeDishForUpdate","handleUpdateQuantityForUpdate"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/components/checkout/CheckoutForm.vue"],"sourcesContent":["<template>\n  <div class=\"flex gap-8\">\n    <!-- 左侧：菜品列表 -->\n    <div class=\"w-1/2\">\n      <h2 class=\"text-lg font-bold mb-2\">菜品列表（双击添加）</h2>\n      <el-table\n        :data=\"menuList\"\n        style=\"width: 100%; font-size: 18px;\"\n        height=\"850\"\n        @row-dblclick=\"handleDishDblClick\"\n        highlight-current-row>\n        <el-table-column prop=\"dishId\" label=\"菜品ID\" width=\"120\" align=\"center\" />\n        <el-table-column prop=\"dishName\" label=\"菜品名称\" width=\"200\" align=\"center\" />\n        <el-table-column prop=\"price\" label=\"价格\" width=\"120\" align=\"center\">\n          <template #default=\"scope\">¥{{ scope.row.price }}</template>\n        </el-table-column>\n        <el-table-column prop=\"description\" label=\"描述\" min-width=\"200\" />\n      </el-table>\n    </div>\n\n    <!-- 右侧：订单操作与信息 -->\n    <div class=\"w-1/2\">\n      <h2 class=\"text-lg font-bold mb-2\">订单创建</h2>\n      <el-form label-width=\"80px\" class=\"mb-4\">\n        <el-form-item label=\"订单ID\">\n          <el-input v-model=\"createOrderId\" type=\"number\" placeholder=\"输入订单ID\"/>\n        </el-form-item>\n        <el-form-item label=\"顾客ID\">\n          <el-input v-model=\"customerId\" type=\"number\" placeholder=\"输入顾客ID\" />\n        </el-form-item>\n        <el-form-item label=\"桌子ID\">\n          <el-input v-model=\"tableId\" type=\"number\" placeholder=\"输入桌子ID\" />\n        </el-form-item>\n        <el-form-item label=\"人数\">\n          <el-input v-model=\"peopleCount\" type=\"number\" min=\"1\" placeholder=\"输入人数\" />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleCreateOrder\">创建订单</el-button>\n          <el-button v-if=\"createOrderId\" type=\"warning\" class=\"ml-4\" @click=\"handleExitEdit\">退出编辑</el-button>\n        </el-form-item>\n      </el-form>\n\n      <el-divider>已选菜品</el-divider>\n      <div style=\"display: flex; flex-direction: column; width: 100%;\">\n        <el-table :data=\"selectedDishes\" style=\"flex: 1 1 auto; width: 100%;\" size=\"small\" layout=\"fixed\">\n          <el-table-column prop=\"dishId\" label=\"菜品ID\" width=\"150%\"  />\n          <el-table-column prop=\"dishName\" label=\"菜品名称\" width=\"200%\" />\n          <el-table-column prop=\"quantity\" label=\"数量\" width=\"200%\">\n            <template #default=\"scope\">\n              <el-input-number v-model=\"scope.row.quantity\" :min=\"1\" @change=\"q => handleUpdateQuantity(scope.row, q)\" style=\"width: 100%;\" />\n            </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" width=\"150%\" align=\"center\">\n            <template #default=\"scope\">\n              <el-button size=\"small\" type=\"danger\" @click=\"removeDish(scope.row)\">移除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n\n      <el-divider>订单更新</el-divider>\n      <h3 class=\"text-md font-bold mb-2\">订单更新</h3>\n      <el-form label-width=\"80px\" class=\"mb-4\">\n        <el-form-item label=\"订单ID\">\n          <el-input v-model=\"orderId\" type=\"number\" placeholder=\"输入订单ID\" disabled />\n        </el-form-item>\n        <el-form-item label=\"顾客ID\">\n          <el-input v-model=\"updateCustomerId\" type=\"number\" placeholder=\"输入顾客ID\" />\n        </el-form-item>\n        <el-form-item label=\"桌子ID\">\n          <el-input v-model=\"updateTableId\" type=\"number\" placeholder=\"输入桌子ID\" />\n        </el-form-item>\n        <el-form-item label=\"人数\">\n          <el-input v-model=\"updatePeopleCount\" type=\"number\" min=\"1\" placeholder=\"输入人数\" />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleUpdateOrder\" :disabled=\"!updateOrderId\">更新订单</el-button>\n          <span v-if=\"updateOrderId\" class=\"ml-4 text-green-600\">订单ID: {{ updateOrderId }}</span>\n          <el-button v-if=\"updateOrderId\" type=\"warning\" class=\"ml-4\" @click=\"handleExitUpdateEdit\">退出编辑</el-button>\n        </el-form-item>\n      </el-form>\n\n      <el-divider>已选菜品（更新）</el-divider>\n      <div style=\"display: flex; flex-direction: column; width: 100%;\">\n        <el-table :data=\"updateSelectedDishes\" style=\"flex: 1 1 auto; width: 100%;\" size=\"small\" layout=\"fixed\">\n          <el-table-column prop=\"dishId\" label=\"菜品ID\" width=\"150%\"  />\n          <el-table-column prop=\"dishName\" label=\"菜品名称\" width=\"200%\" />\n          <el-table-column prop=\"quantity\" label=\"数量\" width=\"200%\">\n            <template #default=\"scope\">\n              <el-input-number v-model=\"scope.row.quantity\" :min=\"1\" @change=\"q => handleUpdateQuantityForUpdate(scope.row, q)\" style=\"width: 100%;\" />\n            </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" width=\"150%\" align=\"center\">\n            <template #default=\"scope\">\n              <el-button size=\"small\" type=\"danger\" @click=\"removeDishForUpdate(scope.row)\">移除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n      \n\n      <el-divider>订单菜品信息</el-divider>\n      <el-form label-width=\"160px\" class=\"mb-2\">\n        <el-form-item label=\"根据桌号查订单\">\n          <el-input v-model=\"queryTableId\" type=\"number\" placeholder=\"输入桌子ID\" style=\"width: 240px;\" />\n          <el-button @click=\"handleQueryOrderByTableId\" class=\"ml-2\">查询</el-button>\n        </el-form-item>\n        <el-form-item label=\"根据订单查菜品\">\n          <el-input v-model=\"queryOrderId\" type=\"number\" placeholder=\"输入订单ID\" style=\"width: 240px;\" />\n          <el-button @click=\"handleQueryOrderDetails\" class=\"ml-2\">查询</el-button>\n        </el-form-item>\n      </el-form>\n      <!-- 订单详情卡片展示（根据订单ID或桌号查询都可用） -->\n      <div v-if=\"orderInfo\" class=\"order-info-card p-4 mb-4 bg-gray-50 rounded shadow\">\n        <div v-if=\"orderInfo.orderId\"><b>订单ID：</b>{{ orderInfo.orderId }}</div>\n        <div v-if=\"orderInfo.customerId\"><b>顾客ID：</b>{{ orderInfo.customerId }}</div>\n        <div v-if=\"orderInfo.customerName\"><b>顾客姓名：</b>{{ orderInfo.customerName }}</div>\n        <div v-if=\"orderInfo.tableId\"><b>桌号：</b>{{ orderInfo.tableId }}</div>\n        <div v-if=\"orderInfo.orderTime\"><b>下单时间：</b>{{ orderInfo.orderTime }}</div>\n        <div v-if=\"orderInfo.status\"><b>状态：</b>{{ orderInfo.status }}</div>\n        <div v-if=\"orderInfo.finalAmount\"><b>实付金额：</b>{{ orderInfo.finalAmount }}</div>\n        <div v-if=\"orderInfo.totalAmount\"><b>总金额：</b>{{ orderInfo.totalAmount }}</div>\n        <div v-if=\"orderInfo.phone\"><b>手机号：</b>{{ orderInfo.phone }}</div>\n        <div v-if=\"orderInfo.discount\"><b>折扣：</b>{{ orderInfo.discount }}</div>\n      </div>\n\n      <el-divider>结账</el-divider>\n      <el-form label-width=\"80px\">\n        <el-form-item label=\"订单ID\">\n          <el-input v-model=\"checkoutOrderId\" type=\"number\" placeholder=\"输入订单ID\" style=\"width: 120px;\" />\n          <el-button type=\"success\" class=\"ml-2\" @click=\"handleCheckout\">结账</el-button>\n        </el-form-item>\n      </el-form>\n      <div v-if=\"message\" class=\"mt-2 text-green-600\">{{ message }}</div>\n      <div v-if=\"error\" class=\"mt-2 text-red-600\">{{ error }}</div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { getMenuList } from '@/api/menu';\nimport {\n  createOrder,\n  addDishToOrder,\n  removeDishFromOrder,\n  updateDishQuantity,\n  getOrderIdWithDishId,\n  checkoutOrder\n} from '@/api/checkout';\nimport { getOrderById } from '@/api/order';\n\nconst createOrderId = ref('');\nconst customerId = ref('');\nconst tableId = ref('');\nconst peopleCount = ref('');\nconst orderId = ref('');\nconst menuList = ref([]);\nconst selectedDishes = ref([]); // {dishId, dishName, quantity}\nconst message = ref('');\nconst error = ref('');\nconst orderDetails = ref([]);\nconst queryTableId = ref('');\nconst queryOrderId = ref('');\nconst checkoutOrderId = ref('');\nconst orderInfo = ref(null);\nconst updateCustomerId = ref('');\nconst updateTableId = ref('');\nconst updatePeopleCount = ref('');\nconst updateOrderId = ref('');\nconst updateSelectedDishes = ref([]); // {dishId, dishName, quantity}\n\nonMounted(async () => {\n  await fetchMenuList();\n});\n\nasync function fetchMenuList() {\n  try {\n    const res = await getMenuList();\n    menuList.value = Array.isArray(res) ? res : (res.data || []);\n  } catch (err) {\n    error.value = err;\n  }\n}\n\nasync function handleCreateOrder() {\n  message.value = '';\n  error.value = '';\n  try {\n    const res = await createOrder({\n      tableId: Number(tableId.value),\n      customerId: Number(customerId.value),\n      peopleCount: Number(peopleCount.value)\n    });\n    createOrderId.value = res.orderId;\n    if (createOrderId.value) {\n      ElMessage.success('订单创建成功，ID: ' + createOrderId.value);\n    } else {\n      ElMessage.warning('订单创建成功，但未返回订单ID');\n    }\n  } catch (err) {\n    error.value = err;\n  }\n}\n\nfunction handleDishDblClick(row) {\n  if (!createOrderId.value) {\n    ElMessage.warning('请先创建订单');\n    return;\n  }\n  // 检查是否已添加\n  const exist = selectedDishes.value.find(d => d.dishId === row.dishId);\n  if (exist) {\n    exist.quantity++;\n    handleUpdateQuantity(exist, exist.quantity);\n    return;\n  }\n  // 添加到订单\n  addDishToOrder({ orderId: createOrderId.value, dishId: row.dishId, quantity: 1 })\n    .then(() => {\n      selectedDishes.value.push({ ...row, quantity: 1 });\n      ElMessage.success('已添加菜品: ' + row.dishName);\n    })\n    .catch(err => {\n      error.value = err;\n    });\n}\n\nfunction removeDish(row) {\n  if (!createOrderId.value) return;\n  removeDishFromOrder({ orderId: createOrderId.value, dishId: row.dishId })\n    .then(() => {\n      selectedDishes.value = selectedDishes.value.filter(d => d.dishId !== row.dishId);\n      ElMessage.success('已移除菜品');\n    })\n    .catch(err => {\n      error.value = err;\n    });\n}\n\nfunction handleUpdateQuantity(row, quantity) {\n  if (!createOrderId.value) return;\n  updateDishQuantity({ orderId: createOrderId.value, dishId: row.dishId, quantity })\n    .then(() => {\n      row.quantity = quantity;\n      ElMessage.success('数量已更新');\n    })\n    .catch(err => {\n      error.value = err;\n    });\n}\n\nasync function handleQueryOrderByTableId() {\n  message.value = '';\n  error.value = '';\n  try {\n    const res = await getOrderIdWithDishId(Number(queryTableId.value));\n    orderInfo.value = res.data || null;\n    orderDetails.value = [];\n    // 自动填充到订单操作区\n    if (orderInfo.value) {\n      createOrderId.value = String(orderInfo.value.orderId || orderInfo.value.order_id || '');\n      tableId.value = String(orderInfo.value.tableId || orderInfo.value.table_id || '');\n      customerId.value = String(orderInfo.value.customerId || orderInfo.value.customer_id || '');\n      peopleCount.value = '';\n      // 处理菜品\n      if (orderInfo.value.dishes) {\n        if (Array.isArray(orderInfo.value.dishes)) {\n          selectedDishes.value = orderInfo.value.dishes.map(dish => ({\n            dishId: dish.dishId || dish.dish_id || '',\n            dishName: dish.dishName || dish.dish_name || dish,\n            quantity: dish.quantity || 1\n          }));\n        } else if (typeof orderInfo.value.dishes === 'string') {\n          selectedDishes.value = [{ dishId: '', dishName: orderInfo.value.dishes, quantity: 1 }];\n        }\n      } else {\n        selectedDishes.value = [];\n      }\n    }\n  } catch (err) {\n    error.value = err;\n  }\n}\n\nasync function handleQueryOrderDetails() {\n  message.value = '';\n  error.value = '';\n  try {\n    const res = await getOrderById(Number(queryOrderId.value));\n    orderInfo.value = res.data || null;\n    orderDetails.value = [];\n    // 自动填充到订单操作区\n    if (orderInfo.value) {\n      createOrderId.value = String(orderInfo.value.orderId || orderInfo.value.order_id || '');\n      tableId.value = String(orderInfo.value.tableId || orderInfo.value.table_id || '');\n      customerId.value = String(orderInfo.value.customerId || orderInfo.value.customer_id || '');\n      peopleCount.value = '';\n      if (orderInfo.value.dishes) {\n        if (Array.isArray(orderInfo.value.dishes)) {\n          selectedDishes.value = orderInfo.value.dishes.map(dish => ({\n            dishId: dish.dishId || dish.dish_id || '',\n            dishName: dish.dishName || dish.dish_name || dish,\n            quantity: dish.quantity || 1\n          }));\n        } else if (typeof orderInfo.value.dishes === 'string') {\n          selectedDishes.value = [{ dishId: '', dishName: orderInfo.value.dishes, quantity: 1 }];\n        }\n      } else {\n        selectedDishes.value = [];\n      }\n    }\n  } catch (err) {\n    error.value = err;\n  }\n}\n\nfunction handleExitEdit() {\n  createOrderId.value = '';\n  tableId.value = '';\n  customerId.value = '';\n  peopleCount.value = '';\n  selectedDishes.value = [];\n  orderInfo.value = null;\n  orderDetails.value = [];\n  message.value = '';\n  error.value = '';\n  queryTableId.value = '';\n  queryOrderId.value = '';\n  checkoutOrderId.value = '';\n}\n\nasync function handleCheckout() {\n  message.value = '';\n  error.value = '';\n  try {\n    await checkoutOrder(Number(checkoutOrderId.value));\n    message.value = '结账成功！';\n    ElMessage.success('结账成功！');\n  } catch (err) {\n    error.value = err;\n  }\n}\n\nasync function handleUpdateOrder() {\n  message.value = '';\n  error.value = '';\n  try {\n    // 这里可以调用更新订单的API\n    ElMessage.success('订单更新成功！');\n  } catch (err) {\n    error.value = err;\n  }\n}\n\nfunction handleExitUpdateEdit() {\n  updateOrderId.value = '';\n  updateTableId.value = '';\n  updateCustomerId.value = '';\n  updatePeopleCount.value = '';\n  updateSelectedDishes.value = [];\n}\n\nfunction removeDishForUpdate(row) {\n  if (!updateOrderId.value) return;\n  // 这里可以调用移除菜品的API\n  updateSelectedDishes.value = updateSelectedDishes.value.filter(d => d.dishId !== row.dishId);\n  ElMessage.success('已移除菜品');\n}\n\nfunction handleUpdateQuantityForUpdate(row, quantity) {\n  if (!updateOrderId.value) return;\n  // 这里可以调用更新数量的API\n  row.quantity = quantity;\n  ElMessage.success('数量已更新');\n}\n</script>\n\n<style scoped>\n.flex { display: flex; }\n.gap-8 { gap: 2rem; }\n.w-1\\/2 { width: 50%; }\n.ml-2 { margin-left: 0.5rem; }\n.ml-4 { margin-left: 1rem; }\n.mt-2 { margin-top: 0.5rem; }\n.text-green-600 { color: #16a34a; }\n.text-red-600 { color: #dc2626; }\n.el-table {\n  font-size: 18px;\n}\n.order-info-card {\n  background: #f9fafb;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.04);\n  margin-bottom: 1rem;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}