{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { useOrderStore } from '@/stores/order';\nimport DetailedCard from './DetailedCard.vue';\nexport default {\n  name: 'DetailedForm',\n  components: {\n    DetailedCard\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      order: null,\n      orderList: [],\n      timeRange: [],\n      selectedStatus: ''\n    };\n  },\n  methods: {\n    orderOperation() {\n      this.dialogVisible = true;\n    },\n    async getOrderList() {\n      await useOrderStore().fetchOrderSummaryList();\n      this.orderList = useOrderStore().summaryList;\n      this.CorrectTime();\n    },\n    CorrectTime() {\n      this.orderList.forEach(order => {\n        // 纠正时间格式为 yyyy-MM-dd HH:mm:ss\n        const date = new Date(order.orderTime);\n        const pad = n => n.toString().padStart(2, '0');\n        order.orderTime = `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())} ${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}`;\n      });\n    },\n    closeOrder() {\n      this.dialogVisible = false;\n      this.getOrderList();\n    },\n    async filterOrders() {\n      if (this.timeRange.length === 0) {\n        ElMessage.error('请选择时间范围');\n        return;\n      }\n      const [startTime, endTime] = this.timeRange;\n      await useOrderStore().fetchOrdersByTimeAndStatus({\n        startTime,\n        endTime,\n        status: this.selectedStatus\n      });\n      this.orderList = useOrderStore().summaryList;\n      this.CorrectTime();\n    },\n    async getOrderList() {\n      this.timeRange = [];\n      this.selectedStatus = '';\n      await useOrderStore().fetchOrderSummaryList();\n      this.orderList = useOrderStore().summaryList;\n      this.CorrectTime();\n    }\n  },\n  mounted() {\n    this.getOrderList();\n  }\n};","map":{"version":3,"names":["useOrderStore","DetailedCard","name","components","data","dialogVisible","order","orderList","timeRange","selectedStatus","methods","orderOperation","getOrderList","fetchOrderSummaryList","summaryList","CorrectTime","forEach","date","Date","orderTime","pad","n","toString","padStart","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","closeOrder","filterOrders","length","ElMessage","error","startTime","endTime","fetchOrdersByTimeAndStatus","status","mounted"],"sources":["D:\\数据库课程设计（饭店系统）\\restaurant-ordering-system\\src\\components\\order\\DetailedForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"detailed-table\">\r\n        <div>\r\n        <el-button type=\"primary\" @click=\"orderOperation\">订单详细信息查询与删除</el-button>\r\n        <el-button type=\"primary\" @click=\"getOrderList\">刷新订单</el-button>\r\n        <el-date-picker\r\n        v-model=\"timeRange\"\r\n        type=\"datetimerange\"\r\n        range-separator=\"至\"\r\n        start-placeholder=\"开始时间\"\r\n        end-placeholder=\"结束时间\"\r\n        value-format=\"YYYY-MM-DD HH:mm:ss\"\r\n        style=\"margin: 0 10px; width: 380px\"\r\n        />\r\n        <el-select v-model=\"selectedStatus\" placeholder=\"订单状态\" clearable>\r\n            <el-option label=\"已结账\" value=\"已结账\" />\r\n            <el-option label=\"未结账\" value=\"未结账\" />\r\n        </el-select>\r\n        <el-button type=\"primary\" @click=\"filterOrders\">筛选</el-button>\r\n        </div>\r\n        <el-table :data=\"orderList\" style=\"width: 100%; margin-top: 1rem\" stripe border>\r\n            <el-table-column prop=\"orderId\" label=\"订单ID\" />\r\n            <el-table-column prop=\"customerId\" label=\"顾客ID\" />\r\n            <el-table-column prop=\"customerName\" label=\"顾客名称\" />\r\n            <el-table-column prop=\"phone\" label=\"顾客电话\" />\r\n            <el-table-column prop=\"tableId\" label=\"餐桌ID\" />\r\n            <el-table-column prop=\"orderTime\" label=\"订单时间\" />\r\n            <el-table-column prop=\"totalAmount\" label=\"订单金额\" />\r\n            <el-table-column prop=\"finalAmount\" label=\"结账金额\" />\r\n            <el-table-column prop=\"discount\" label=\"折扣\" />\r\n            <el-table-column prop=\"status\" label=\"订单状态\" />\r\n        </el-table>\r\n        <el-dialog v-model=\"dialogVisible\" title=\"订单详情\" width=\"500px\">\r\n            <DetailedCard :order=\"order\" @closeOrder=\"closeOrder\" />\r\n        </el-dialog>\r\n    </div>\r\n\r\n</template>\r\n<script>\r\nimport { useOrderStore } from '@/stores/order';\r\nimport DetailedCard from './DetailedCard.vue';\r\n\r\nexport default {\r\n    name: 'DetailedForm',\r\n    components: {\r\n        DetailedCard\r\n    },\r\n    data() {\r\n        return {\r\n            dialogVisible: false,\r\n            order: null,\r\n            orderList: [],\r\n            timeRange: [],\r\n            selectedStatus: ''\r\n        }\r\n    },\r\n    methods: {\r\n        orderOperation() {\r\n            this.dialogVisible = true;\r\n        },\r\n        async getOrderList() {\r\n            await useOrderStore().fetchOrderSummaryList();\r\n            this.orderList = useOrderStore().summaryList;\r\n            this.CorrectTime();\r\n        },\r\n        CorrectTime() {\r\n            this.orderList.forEach(order => {\r\n                // 纠正时间格式为 yyyy-MM-dd HH:mm:ss\r\n                const date = new Date(order.orderTime);\r\n                const pad = n => n.toString().padStart(2, '0');\r\n                order.orderTime = `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())} ${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}`;\r\n            });\r\n        },\r\n        closeOrder() {\r\n            this.dialogVisible = false;\r\n            this.getOrderList();\r\n        },\r\n        async filterOrders() {\r\n            if (this.timeRange.length === 0) {\r\n                ElMessage.error('请选择时间范围');\r\n                return;\r\n            }\r\n            const [startTime, endTime] = this.timeRange;\r\n            await useOrderStore().fetchOrdersByTimeAndStatus({\r\n                startTime,\r\n                endTime,\r\n                status: this.selectedStatus\r\n            });\r\n            \r\n            this.orderList = useOrderStore().summaryList;\r\n            this.CorrectTime();\r\n        },\r\n        async getOrderList() {\r\n            this.timeRange = [];\r\n            this.selectedStatus = '';\r\n            await useOrderStore().fetchOrderSummaryList();\r\n            this.orderList = useOrderStore().summaryList;\r\n            this.CorrectTime();\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getOrderList();\r\n    }\r\n}\r\n</script>"],"mappings":";;AAuCA,SAASA,aAAY,QAAS,gBAAgB;AAC9C,OAAOC,YAAW,MAAO,oBAAoB;AAE7C,eAAe;EACXC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,aAAa,EAAE,KAAK;MACpBC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,cAAc,EAAE;IACpB;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,cAAcA,CAAA,EAAG;MACb,IAAI,CAACN,aAAY,GAAI,IAAI;IAC7B,CAAC;IACD,MAAMO,YAAYA,CAAA,EAAG;MACjB,MAAMZ,aAAa,CAAC,CAAC,CAACa,qBAAqB,CAAC,CAAC;MAC7C,IAAI,CAACN,SAAQ,GAAIP,aAAa,CAAC,CAAC,CAACc,WAAW;MAC5C,IAAI,CAACC,WAAW,CAAC,CAAC;IACtB,CAAC;IACDA,WAAWA,CAAA,EAAG;MACV,IAAI,CAACR,SAAS,CAACS,OAAO,CAACV,KAAI,IAAK;QAC5B;QACA,MAAMW,IAAG,GAAI,IAAIC,IAAI,CAACZ,KAAK,CAACa,SAAS,CAAC;QACtC,MAAMC,GAAE,GAAIC,CAAA,IAAKA,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAC9CjB,KAAK,CAACa,SAAQ,GAAI,GAAGF,IAAI,CAACO,WAAW,CAAC,CAAC,IAAIJ,GAAG,CAACH,IAAI,CAACQ,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAIL,GAAG,CAACH,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,IAAIN,GAAG,CAACH,IAAI,CAACU,QAAQ,CAAC,CAAC,CAAC,IAAIP,GAAG,CAACH,IAAI,CAACW,UAAU,CAAC,CAAC,CAAC,IAAIR,GAAG,CAACH,IAAI,CAACY,UAAU,CAAC,CAAC,CAAC,EAAE;MAC5K,CAAC,CAAC;IACN,CAAC;IACDC,UAAUA,CAAA,EAAG;MACT,IAAI,CAACzB,aAAY,GAAI,KAAK;MAC1B,IAAI,CAACO,YAAY,CAAC,CAAC;IACvB,CAAC;IACD,MAAMmB,YAAYA,CAAA,EAAG;MACjB,IAAI,IAAI,CAACvB,SAAS,CAACwB,MAAK,KAAM,CAAC,EAAE;QAC7BC,SAAS,CAACC,KAAK,CAAC,SAAS,CAAC;QAC1B;MACJ;MACA,MAAM,CAACC,SAAS,EAAEC,OAAO,IAAI,IAAI,CAAC5B,SAAS;MAC3C,MAAMR,aAAa,CAAC,CAAC,CAACqC,0BAA0B,CAAC;QAC7CF,SAAS;QACTC,OAAO;QACPE,MAAM,EAAE,IAAI,CAAC7B;MACjB,CAAC,CAAC;MAEF,IAAI,CAACF,SAAQ,GAAIP,aAAa,CAAC,CAAC,CAACc,WAAW;MAC5C,IAAI,CAACC,WAAW,CAAC,CAAC;IACtB,CAAC;IACD,MAAMH,YAAYA,CAAA,EAAG;MACjB,IAAI,CAACJ,SAAQ,GAAI,EAAE;MACnB,IAAI,CAACC,cAAa,GAAI,EAAE;MACxB,MAAMT,aAAa,CAAC,CAAC,CAACa,qBAAqB,CAAC,CAAC;MAC7C,IAAI,CAACN,SAAQ,GAAIP,aAAa,CAAC,CAAC,CAACc,WAAW;MAC5C,IAAI,CAACC,WAAW,CAAC,CAAC;IACtB;EACJ,CAAC;EACDwB,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC3B,YAAY,CAAC,CAAC;EACvB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}