{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createBlock(_component_el_card, null, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.customerForm,\n      \"label-width\": \"120px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"用户类型\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.customerForm.vipLevel,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.customerForm.vipLevel = $event),\n          placeholder: \"请选择用户类型\",\n          onChange: $setup.handleVipChange\n        }, {\n          default: _withCtx(() => [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.vipLevels, level => {\n            return _createVNode(_component_el_option, {\n              key: level.value,\n              label: level.label,\n              value: level.value\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 64 /* STABLE_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"顾客ID\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.customerForm.customerId,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.customerForm.customerId = $event),\n          disabled: true\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"顾客姓名\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.customerForm.name,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.customerForm.name = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"顾客电话\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.customerForm.phone,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.customerForm.phone = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.handleUpdate\n        }, {\n          default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"更新\")])),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_button, {\n          onClick: $setup.handleCancel\n        }, {\n          default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"取消\")])),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_el_card","default","_withCtx","_createVNode","_component_el_form","model","$setup","customerForm","_component_el_form_item","label","_component_el_select","modelValue","vipLevel","_cache","$event","placeholder","onChange","handleVipChange","_createElementBlock","_Fragment","_renderList","vipLevels","level","_component_el_option","key","value","_","_component_el_input","customerId","disabled","name","phone","_component_el_button","type","onClick","handleUpdate","_createTextVNode","handleCancel"],"sources":["D:\\数据库课程设计（饭店系统）\\restaurant-ordering-system\\src\\components\\customer\\CustomerUpdateCard.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <el-form :model=\"customerForm\" label-width=\"120px\">\r\n            <el-form-item label=\"用户类型\">\r\n                <el-select v-model=\"customerForm.vipLevel\" placeholder=\"请选择用户类型\" @change=\"handleVipChange\">\r\n                    <el-option v-for=\"level in vipLevels\" :key=\"level.value\" :label=\"level.label\" :value=\"level.value\" />\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"顾客ID\">\r\n                <el-input v-model=\"customerForm.customerId\" :disabled=\"true\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"顾客姓名\">\r\n                <el-input v-model=\"customerForm.name\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"顾客电话\">\r\n                <el-input v-model=\"customerForm.phone\" />\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"handleUpdate\">更新</el-button>\r\n                <el-button @click=\"handleCancel\">取消</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </el-card>\r\n</template>\r\n\r\n<script setup>\r\nimport { useCustomerStore } from '@/stores/customer';\r\nimport { ref, watch, defineEmits, defineProps, onMounted } from 'vue';\r\nconst props = defineProps({\r\n    customer: {\r\n        type: Object,\r\n        default: () => ({})\r\n    }\r\n});\r\n\r\nconst customerStore = useCustomerStore();\r\nconst customerForm = ref({ ...props.customer });\r\nconst oldPhone = ref(props.customer.phone);\r\n\r\nconst vipLevels = [\r\n    { label: '普通用户', value: '0' },\r\n    { label: 'VIP1', value: '1' },\r\n    { label: 'VIP2', value: '2' },\r\n    { label: 'VIP3', value: '3' },\r\n    { label: 'VIP4', value: '4' },\r\n    { label: 'VIP5', value: '5' },\r\n];\r\n\r\nconst emit = defineEmits(['close', 'update-success']);\r\n\r\nonMounted(() => {\r\n    // 回显VIP等级\r\n    if (customerForm.value.customerId) {\r\n        customerForm.value.vipLevel = customerForm.value.customerId.toString().charAt(0);\r\n    }\r\n});\r\n\r\nwatch(props.customer, (newVal) => {\r\n    if (newVal) {\r\n        customerForm.value = { ...newVal };\r\n        oldPhone.value = newVal.phone;\r\n        if (newVal.customerId) {\r\n            customerForm.value.vipLevel = newVal.customerId.toString().charAt(0);\r\n        }\r\n    }\r\n});\r\n\r\nconst handleVipChange = (val) => {\r\n    // 保留后8位数字\r\n    let oldId = customerForm.value.customerId ? customerForm.value.customerId.toString() : '';\r\n    let suffix = oldId.length === 9 ? oldId.slice(1) : (Array(8).fill('0').join(''));\r\n    customerForm.value.customerId = val + suffix;\r\n};\r\n\r\nconst handleCancel = () => {\r\n    emit('close');\r\n};\r\n\r\nconst handleUpdate = async () => {\r\n    if (!customerForm.value.name || !customerForm.value.phone || !customerForm.value.vipLevel) {\r\n        alert('请填写完整信息');\r\n        return;\r\n    }\r\n    // 传递customerId、name、phone、oldphone\r\n    await customerStore.updateCustomer({\r\n        customerId: customerForm.value.customerId,\r\n        name: customerForm.value.name,\r\n        phone: customerForm.value.phone,\r\n        oldphone: oldPhone.value\r\n    });\r\n    emit('update-success');\r\n};\r\n</script>"],"mappings":";;;;;;;;;uBACIA,YAAA,CAqBUC,kBAAA;IAtBdC,OAAA,EAAAC,QAAA,CAEQ,MAmBU,CAnBVC,YAAA,CAmBUC,kBAAA;MAnBAC,KAAK,EAAEC,MAAA,CAAAC,YAAY;MAAE,aAAW,EAAC;;MAFnDN,OAAA,EAAAC,QAAA,CAGY,MAIe,CAJfC,YAAA,CAIeK,uBAAA;QAJDC,KAAK,EAAC;MAAM;QAHtCR,OAAA,EAAAC,QAAA,CAIgB,MAEY,CAFZC,YAAA,CAEYO,oBAAA;UAN5BC,UAAA,EAIoCL,MAAA,CAAAC,YAAY,CAACK,QAAQ;UAJzD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIoCR,MAAA,CAAAC,YAAY,CAACK,QAAQ,GAAAE,MAAA;UAAEC,WAAW,EAAC,SAAS;UAAEC,QAAM,EAAEV,MAAA,CAAAW;;UAJ1FhB,OAAA,EAAAC,QAAA,CAK+B,MAA0B,E,cAArCgB,mBAAA,CAAqGC,SAAA,QALzHC,WAAA,CAK+Cd,MAAA,CAAAe,SAAS,EAAlBC,KAAK;mBAAvBnB,YAAA,CAAqGoB,oBAAA;cAA9DC,GAAG,EAAEF,KAAK,CAACG,KAAK;cAAGhB,KAAK,EAAEa,KAAK,CAACb,KAAK;cAAGgB,KAAK,EAAEH,KAAK,CAACG;;;UALhHC,CAAA;;QAAAA,CAAA;UAQYvB,YAAA,CAEeK,uBAAA;QAFDC,KAAK,EAAC;MAAM;QARtCR,OAAA,EAAAC,QAAA,CASgB,MAA+D,CAA/DC,YAAA,CAA+DwB,mBAAA;UAT/EhB,UAAA,EASmCL,MAAA,CAAAC,YAAY,CAACqB,UAAU;UAT1D,uBAAAf,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASmCR,MAAA,CAAAC,YAAY,CAACqB,UAAU,GAAAd,MAAA;UAAGe,QAAQ,EAAE;;QATvEH,CAAA;UAWYvB,YAAA,CAEeK,uBAAA;QAFDC,KAAK,EAAC;MAAM;QAXtCR,OAAA,EAAAC,QAAA,CAYgB,MAAwC,CAAxCC,YAAA,CAAwCwB,mBAAA;UAZxDhB,UAAA,EAYmCL,MAAA,CAAAC,YAAY,CAACuB,IAAI;UAZpD,uBAAAjB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAYmCR,MAAA,CAAAC,YAAY,CAACuB,IAAI,GAAAhB,MAAA;;QAZpDY,CAAA;UAcYvB,YAAA,CAEeK,uBAAA;QAFDC,KAAK,EAAC;MAAM;QAdtCR,OAAA,EAAAC,QAAA,CAegB,MAAyC,CAAzCC,YAAA,CAAyCwB,mBAAA;UAfzDhB,UAAA,EAemCL,MAAA,CAAAC,YAAY,CAACwB,KAAK;UAfrD,uBAAAlB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAemCR,MAAA,CAAAC,YAAY,CAACwB,KAAK,GAAAjB,MAAA;;QAfrDY,CAAA;UAiBYvB,YAAA,CAGeK,uBAAA;QApB3BP,OAAA,EAAAC,QAAA,CAkBgB,MAA8D,CAA9DC,YAAA,CAA8D6B,oBAAA;UAAnDC,IAAI,EAAC,SAAS;UAAEC,OAAK,EAAE5B,MAAA,CAAA6B;;UAlBlDlC,OAAA,EAAAC,QAAA,CAkBgE,MAAEW,MAAA,QAAAA,MAAA,OAlBlEuB,gBAAA,CAkBgE,IAAE,E;UAlBlEV,CAAA;YAmBgBvB,YAAA,CAA+C6B,oBAAA;UAAnCE,OAAK,EAAE5B,MAAA,CAAA+B;QAAY;UAnB/CpC,OAAA,EAAAC,QAAA,CAmBiD,MAAEW,MAAA,QAAAA,MAAA,OAnBnDuB,gBAAA,CAmBiD,IAAE,E;UAnBnDV,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}