{"ast":null,"code":"// src/api/auth.js\nimport instance from '@/utils/request'; // 使用统一配置的 axios 实例\n\nexport const login = async credentials => {\n  try {\n    // 将数据编码为 x-www-form-urlencoded 格式\n    const params = new URLSearchParams();\n    params.append('username', credentials.username);\n    params.append('password', credentials.password);\n\n    // 将编码后的数据放在请求体中发送\n    const response = await instance.post('/users/login', params);\n    return response;\n  } catch (error) {\n    throw error.response?.data?.message || '登录失败，请稍后再试';\n  }\n};\nexport const register = async data => {\n  try {\n    const params = new URLSearchParams();\n    params.append('username', data.username);\n    params.append('password', data.password);\n    const response = await instance.post('/users/register', params);\n    return response;\n  } catch (error) {\n    throw error.response?.data?.message || '注册失败，请稍后再试';\n  }\n};","map":{"version":3,"names":["instance","login","credentials","params","URLSearchParams","append","username","password","response","post","error","data","message","register"],"sources":["D:/数据库课程设计（饭店系统）/restaurant-ordering-system/src/api/auth.js"],"sourcesContent":["// src/api/auth.js\r\nimport instance from '@/utils/request'; // 使用统一配置的 axios 实例\r\n\r\nexport const login = async (credentials) => {\r\n  try {\r\n    // 将数据编码为 x-www-form-urlencoded 格式\r\n    const params = new URLSearchParams();\r\n    params.append('username', credentials.username);\r\n    params.append('password', credentials.password);\r\n\r\n    // 将编码后的数据放在请求体中发送\r\n    const response = await instance.post('/users/login', params);\r\n\r\n    return response;\r\n  } catch (error) {\r\n    throw error.response?.data?.message || '登录失败，请稍后再试';\r\n  }\r\n};\r\n\r\nexport const register = async (data) => {\r\n  try {\r\n    const params = new URLSearchParams();\r\n    params.append('username', data.username);\r\n    params.append('password', data.password);\r\n    \r\n    const response = await instance.post('/users/register', params);\r\n    return response;\r\n  } catch (error) {\r\n    throw error.response?.data?.message || '注册失败，请稍后再试';\r\n  }\r\n};"],"mappings":"AAAA;AACA,OAAOA,QAAQ,MAAM,iBAAiB,CAAC,CAAC;;AAExC,OAAO,MAAMC,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,IAAI;IACF;IACA,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCD,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEH,WAAW,CAACI,QAAQ,CAAC;IAC/CH,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEH,WAAW,CAACK,QAAQ,CAAC;;IAE/C;IACA,MAAMC,QAAQ,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,cAAc,EAAEN,MAAM,CAAC;IAE5D,OAAOK,QAAQ;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMA,KAAK,CAACF,QAAQ,EAAEG,IAAI,EAAEC,OAAO,IAAI,YAAY;EACrD;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAOF,IAAI,IAAK;EACtC,IAAI;IACF,MAAMR,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCD,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEM,IAAI,CAACL,QAAQ,CAAC;IACxCH,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEM,IAAI,CAACJ,QAAQ,CAAC;IAExC,MAAMC,QAAQ,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,iBAAiB,EAAEN,MAAM,CAAC;IAC/D,OAAOK,QAAQ;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMA,KAAK,CAACF,QAAQ,EAAEG,IAAI,EAAEC,OAAO,IAAI,YAAY;EACrD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}